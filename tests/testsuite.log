## ----------------------------- ##
## openvswitch 2.6.0 test suite. ##
## ----------------------------- ##

testsuite: command line was:
  $ ./tests/testsuite -C tests AUTOTEST_PATH=utilities:vswitchd:ovsdb:vtep:tests::ovn/controller-vtep:ovn/northd:ovn/utilities:ovn/controller -j8

## --------- ##
## Platform. ##
## --------- ##

hostname = ip-172-31-21-103
uname -m = x86_64
uname -r = 4.4.0-42-generic
uname -s = Linux
uname -v = #62-Ubuntu SMP Fri Oct 7 23:11:45 UTC 2016

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /root/openvswitch-2.6.0/utilities
PATH: /root/openvswitch-2.6.0/vswitchd
PATH: /root/openvswitch-2.6.0/ovsdb
PATH: /root/openvswitch-2.6.0/vtep
PATH: /root/openvswitch-2.6.0/tests
PATH: /root/openvswitch-2.6.0
PATH: /root/openvswitch-2.6.0/ovn/controller-vtep
PATH: /root/openvswitch-2.6.0/ovn/northd
PATH: /root/openvswitch-2.6.0/ovn/utilities
PATH: /root/openvswitch-2.6.0/ovn/controller
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin

testsuite: atconfig:
| # Configurable variable values for building test suites.
| # Generated by ./config.status.
| # Copyright (C) 2012 Free Software Foundation, Inc.
| 
| # The test suite will define top_srcdir=/../.. etc.
| at_testdir='tests'
| abs_builddir='/root/openvswitch-2.6.0/tests'
| at_srcdir='.'
| abs_srcdir='/root/openvswitch-2.6.0/tests'
| at_top_srcdir='..'
| abs_top_srcdir='/root/openvswitch-2.6.0'
| at_top_build_prefix='../'
| abs_top_builddir='/root/openvswitch-2.6.0'
| 
| # Backward compatibility with Autotest <= 2.59b:
| at_top_builddir=$at_top_build_prefix
| 
| AUTOTEST_PATH='tests'
| 
| SHELL=${CONFIG_SHELL-'/bin/bash'}

testsuite: atlocal:
| # -*- shell-script -*-
| HAVE_OPENSSL='no'
| HAVE_PYTHON='yes'
| HAVE_PYTHON3='yes'
| EGREP='/bin/grep -E'
| PERL='/usr/bin/perl'
| 
| if test x"$PYTHON" = x; then
|     PYTHON='/usr/bin/python'
| fi
| 
| if test x"$PYTHON3" = x; then
|     PYTHON3='/usr/bin/python3'
| fi
| 
| PYTHONPATH=$abs_top_srcdir/python:$abs_top_builddir/tests:$PYTHONPATH
| export PYTHONPATH
| 
| PYTHONIOENCODING=utf_8
| export PYTHONIOENCODING
| 
| # PYTHONDONTWRITEBYTECODE=yes keeps Python from creating .pyc and .pyo
| # files.  Creating .py[co] works OK for any given version of Open
| # vSwitch, but it causes trouble if you switch from a version with
| # foo/__init__.py into an (older) version with plain foo.py, since
| # foo/__init__.pyc will cause Python to ignore foo.py.
| PYTHONDONTWRITEBYTECODE=yes
| export PYTHONDONTWRITEBYTECODE
| 
| # Test whether the current working directory name is all ASCII
| # characters.  Some Python code doesn't tolerate non-ASCII characters
| # in filenames very well, so if the current working directory is
| # non-ASCII then we skip the tests that run those programs.
| #
| # This would be just papering over a real problem, except that the
| # tests that we skip are launched from initscripts and thus normally
| # run in system directories with ASCII names.  (This problem only came
| # up at all because the Debian autobuilders do build in a top-level
| # directory named /«BUILDDIR».)
| case `pwd | tr -d ' -~'` in
|     '') non_ascii_cwd=false ;;
|     *) non_ascii_cwd=true
| esac
| 
| # Enable malloc debugging features.
| case `uname` in
| Linux)
|     MALLOC_PERTURB_=165; export MALLOC_PERTURB_
| 
|     # Before glibc 2.11, the feature enabled by MALLOC_CHECK_ was not
|     # thread-safe.  See https://bugzilla.redhat.com/show_bug.cgi?id=585674 and
|     # in particular the patch attached there, which was applied to glibc CVS as
|     # "Restore locking in free_check." between 1.11 and 1.11.1.
|     vswitchd=$abs_top_builddir/vswitchd/ovs-vswitchd
|     glibc=`ldd $vswitchd | sed -n 's/^	libc\.[^ ]* => \([^ ]*\) .*/\1/p'`
|     glibc_version=`$glibc | sed -n '1s/.*version \([0-9]\{1,\}\.[0-9]\{1,\}\).*/\1/p'`
|     case $glibc_version in
|         2.[0-9] | 2.1[01]) mcheck=disabled ;;
|         *) mcheck=enabled ;;
|     esac
|     if test $mcheck = enabled; then
|         MALLOC_CHECK_=2; export MALLOC_CHECK_
|     else
|         echo >&2 "glibc $glibc_version detected, disabling memory checking"
|     fi
|     ;;
| FreeBSD)
|     case `uname -r` in
|     [789].*)
|         MALLOC_CONF=AJ
|         ;;
|     *)
|         MALLOC_CONF=abort:true,junk:true,redzone:true
|         ;;
|     esac
|     export MALLOC_CONF
| esac
| 
| # The name of loopback interface 
| case `uname` in
| Linux)
|     LOOPBACK_INTERFACE=lo
|     ;;
| FreeBSD|NetBSD)
|     LOOPBACK_INTERFACE=lo0
|     ;;
| esac
| 
| # Check for platform.
| case `uname` in
| MINGW*)
|     IS_WIN32="yes"
|     IS_BSD="no"
|     ;;
| FreeBSD|NetBSD)
|     IS_WIN32="no"
|     IS_BSD="yes"
|     ;;
| *)
|     IS_WIN32="no"
|     IS_BSD="no"
|     ;;
| esac
| 
| # Check whether to run IPv6 tests.
| if perl -e 'use Socket; socket(FH, PF_INET6, SOCK_STREAM, 0) || exit 1;'; then
|     HAVE_IPV6=yes
| else
|     HAVE_IPV6=no
| fi
| 
| # XXX: Disable Python related tests on Windows because Open vSwitch code
| # written in Python has not been ported to the Windows platform. We will
| # need to remove the next block after porting is complete.
| if test "$IS_WIN32" = "yes"; then
|     HAVE_PYTHON="no"
| fi
| 
| if test "$HAVE_PYTHON" = "yes" \
|    && test "x`$PYTHON $abs_top_srcdir/tests/test-l7.py --help | grep 'ftp'`" != x; then
|     HAVE_PYFTPDLIB="yes"
| else
|     HAVE_PYFTPDLIB="no"
| fi
| 
| # Determine correct netcat option to quit on stdin EOF
| if nc --version 2>&1 | grep -q nmap.org; then
|     NC_EOF_OPT="--send-only"
| else
|     NC_EOF_OPT="-q 1"
| fi
| 
| # Turn off proxies.
| unset http_proxy
| unset https_proxy
| unset ftp_proxy
| unset no_proxy
| unset HTTP_PROXY
| unset HTTPS_PROXY
| unset FTP_PROXY
| unset NO_PROXY

## ---------------- ##
## Tested programs. ##
## ---------------- ##

./testsuite.at:1: /root/openvswitch-2.6.0/vswitchd/ovs-vswitchd --version
ovs-vswitchd (Open vSwitch) 2.6.0

./testsuite.at:1: /root/openvswitch-2.6.0/utilities/ovs-vsctl --version
ovs-vsctl (Open vSwitch) 2.6.0
DB Schema 7.14.0

./testsuite.at:1: /usr/bin/perl --version

This is perl 5, version 22, subversion 1 (v5.22.1) built for x86_64-linux-gnu-thread-multi
(with 58 registered patches, see perl -V for more detail)

Copyright 1987-2015, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page.


## ------------------ ##
## Running the tests. ##
## ------------------ ##
testsuite: starting at: Wed Nov  2 12:38:13 UTC 2016
3. appctl-bashcomp - complex completion check 2 (completion.at:142): ok     (0m0.000s 0m0.000s)
5. appctl-bashcomp - complex completion check 4 (completion.at:263): ok     (0m0.000s 0m0.000s)
6. appctl-bashcomp - negative test (completion.at:289): ok     (0m0.000s 0m0.000s)
2. appctl-bashcomp - complex completion check 1 (completion.at:88): ok     (0m0.000s 0m0.000s)
1. appctl-bashcomp - basic verification (completion.at:21): ok     (0m0.000s 0m0.000s)
10. bfd - basic config on different bridges (bfd.at:45): ok     (0m0.000s 0m0.000s)
4. appctl-bashcomp - complex completion check 3 (completion.at:176): ok     (0m0.000s 0m0.000s)
12. bfd - concatenated path down (bfd.at:168): ok     (0m0.000s 0m0.000s)
9. vsctl-bashcomp - negative test (completion.at:752): ok     (0m0.032s 0m0.008s)
14. bfd - check_tnl_key (bfd.at:226): ok     (0m0.000s 0m0.000s)
13. bfd - Edit the Min Tx/Rx values (bfd.at:195): ok     (0m0.000s 0m0.000s)
16. bfd - bfd forwarding_if_rx - bfd on one side (bfd.at:408): ok     (0m0.000s 0m0.000s)
17. bfd - bfd forwarding_if_rx - bfd on both sides (bfd.at:453): ok     (0m0.000s 0m0.000s)
11. bfd - Verify tunnel down detection (bfd.at:87): ok     (0m0.000s 0m0.000s)
18. bfd - bfd forwarding_if_rx - with bfd decay (bfd.at:519): ok     (0m0.004s 0m0.000s)
21. cfm - check update ovsdb 1 (cfm.at:49): ok     (0m0.000s 0m0.000s)
22. cfm - check update ovsdb 2 (cfm.at:78): ok     (0m0.000s 0m0.000s)
7. vsctl-bashcomp - basic verification (completion.at:343): ok     (0m0.088s 0m0.008s)
25. cfm - flap_count (cfm.at:216): ok     (0m0.000s 0m0.000s)
26. cfm - fault_override (cfm.at:249): ok     (0m0.000s 0m0.000s)
27. lacp - config (lacp.at:13): ok     (0m0.000s 0m0.000s)
28. lacp - multi port config (lacp.at:53): ok     (0m0.000s 0m0.000s)
30. flow extractor (library.at:3): ok     (0m0.016s 0m0.000s)
31. TCP/IP checksumming (library.at:9): ok     (0m0.000s 0m0.000s)
32. hash functions (library.at:14): ok     (0m0.132s 0m0.000s)
33. hash map (library.at:18): ok     (0m0.044s 0m0.000s)
15. bfd - bfd decay (bfd.at:261): ok     (0m0.016s 0m0.000s)
29. lacp - negotiation (lacp.at:139): ok     (0m0.004s 0m0.000s)
34. hash index (library.at:24): ok     (0m0.096s 0m0.000s)
36. counting cockoo hash (library.at:36): ok     (0m0.180s 0m0.000s)
38. test linked lists (library.at:46): ok     (0m0.000s 0m0.000s)
19. bfd - bfd forwarding_if_rx - demand_rx_bfd (bfd.at:607): ok     (0m0.024s 0m0.020s)
39. packet library (library.at:51): ok     (0m0.000s 0m0.000s)
41. type properties (library.at:60): ok     (0m0.000s 0m0.000s)
42. strtok_r bug fix (library.at:64): ok     (0m0.000s 0m0.000s)
43. byte order conversion (library.at:69): ok     (0m0.000s 0m0.000s)
44. random number generator (library.at:74): ok     (0m0.000s 0m0.000s)
45. ctz() function (library.at:126): ok     (0m0.000s 0m0.000s)
40. SHA-1 (library.at:55): ok     (0m0.076s 0m0.000s)
46. clz() function (library.at:126): ok     (0m0.000s 0m0.000s)
47. round_up_pow2() function (library.at:126): ok     (0m0.000s 0m0.000s)
48. round_down_pow2() function (library.at:126): ok     (0m0.000s 0m0.000s)
50. log_2_floor() function (library.at:126): ok     (0m0.000s 0m0.000s)
49. count_1bits() function (library.at:126): ok     (0m0.000s 0m0.000s)
52. bitwise_zero() function (library.at:126): ok     (0m0.000s 0m0.000s)
51. bitwise_copy() function (library.at:126): ok     (0m0.004s 0m0.000s)
53. bitwise_one() function (library.at:126): ok     (0m0.000s 0m0.000s)
20. bfd - flap_count (bfd.at:678): ok     (0m0.008s 0m0.004s)
56. ovs_scan() function (library.at:126): ok     (0m0.000s 0m0.000s)
57. unix socket, short pathname - C (library.at:145): ok     (0m0.000s 0m0.000s)
54. bitwise_is_all_zeros() function (library.at:126): ok     (0m0.092s 0m0.000s)
58. unix socket, long pathname - C (library.at:155): ok     (0m0.000s 0m0.000s)
59. unix socket, short pathname - Python2 (library.at:175): ok     (0m0.040s 0m0.008s)
60. unix socket, short pathname - Python3 (library.at:176): ok     (0m0.072s 0m0.004s)
61. unix socket, long pathname - Python2 (library.at:197): ok     (0m0.040s 0m0.008s)
63. ovs_assert (library.at:200): ok     (0m0.000s 0m0.000s)
37. atomic operations (library.at:42): ok     (0m0.380s 0m0.728s)
64. snprintf (library.at:223): ok     (0m0.000s 0m0.000s)
65. bitmap functions (library.at:227): ok     (0m0.000s 0m0.000s)
67. ofpbuf module (library.at:236): ok     (0m0.000s 0m0.000s)
66. use of public headers (library.at:232): ok     (0m0.000s 0m0.000s)
62. unix socket, long pathname - Python3 (library.at:198): ok     (0m0.072s 0m0.000s)
68. rcu (library.at:240): ok     (0m0.000s 0m0.000s)
69. heap library -- insert delete same order (heap.at:8): ok     (0m0.024s 0m0.000s)
70. heap library -- insert delete reverse order (heap.at:9): ok     (0m0.024s 0m0.000s)
73. heap library -- raw insert (heap.at:12): ok     (0m0.016s 0m0.000s)
71. heap library -- insert delete every order (heap.at:10): ok     (0m0.044s 0m0.000s)
74. heap library -- raw delete (heap.at:13): ok     (0m0.000s 0m0.000s)
76. active_backup bundle link selection (bundle.at:80): ok     (0m0.076s 0m0.008s)
55. bitwise_rscan() function (library.at:126): ok     (0m0.476s 0m0.000s)
77. hrw bundle single link selection (bundle.at:151): ok     (0m0.020s 0m0.004s)
79. bundle action missing argument (bundle.at:166): ok     (0m0.000s 0m0.000s)
78. hrw bundle no link selection (bundle.at:159): ok     (0m0.020s 0m0.000s)
80. bundle action bad fields (bundle.at:172): ok     (0m0.000s 0m0.000s)
81. bundle action bad algorithm (bundle.at:178): ok     (0m0.000s 0m0.000s)
82. bundle action bad slave type (bundle.at:184): ok     (0m0.000s 0m0.000s)
83. bundle action bad slave delimiter (bundle.at:190): ok     (0m0.000s 0m0.000s)
85. flow classifier - empty (classifier.at:2): ok     (0m0.000s 0m0.000s)
75. hrw bundle link selection (bundle.at:10): ok     (0m0.188s 0m0.004s)
86. flow classifier - destroy null (classifier.at:2): ok     (0m0.000s 0m0.000s)
72. heap library -- insert delete same order with dups (heap.at:11): ok     (0m0.252s 0m0.000s)
84. bundle action with many ports (bundle.at:202): ok     (0m0.000s 0m0.000s)
23. cfm - demand mode (cfm.at:112): ok     (0m0.016s 0m0.020s)
89. flow classifier - many rules in one list (classifier.at:2): ok     (0m0.320s 0m0.000s)
90. flow classifier - versioned many rules in one list (classifier.at:2): ok     (0m0.340s 0m0.000s)
8. vsctl-bashcomp - argument completion (completion.at:425): ok     (0m0.232s 0m0.076s)
87. flow classifier - single rule (classifier.at:2): ok     (0m2.156s 0m0.012s)
91. flow classifier - many rules in one table (classifier.at:2): ok     (0m1.972s 0m0.000s)
92. flow classifier - versioned many rules in one table (classifier.at:2): ok     (0m2.080s 0m0.000s)
97. miniflow - miniflow (classifier.at:21): ok     (0m0.056s 0m0.000s)
98. miniflow - minimask_has_extra (classifier.at:21): ok     (0m0.060s 0m0.000s)
99. miniflow - minimask_combine (classifier.at:21): ok     (0m0.124s 0m0.000s)
100. flow classifier - lookup segmentation (classifier.at:31): ok     (0m0.000s 0m0.000s)
101. flow classifier - prefix lookup (classifier.at:69): ok     (0m0.000s 0m0.000s)
88. flow classifier - rule replacement (classifier.at:2): ok     (0m3.440s 0m0.000s)
102. single conjunctive match (classifier.at:134): ok     (0m0.000s 0m0.000s)
104. conjunctive match priority fallback (classifier.at:247): ok     (0m0.000s 0m0.000s)
24. cfm - demand_rx_ccm (cfm.at:154): ok     (0m0.036s 0m0.084s)
106. check struct tail padding (check-structs.at:11): ok     (0m0.012s 0m0.000s)
107. check struct internal alignment (check-structs.at:21): ok     (0m0.012s 0m0.000s)
105. conjunctive match and other actions (classifier.at:293): ok     (0m0.000s 0m0.000s)
108. check struct declared size (check-structs.at:32): ok     (0m0.012s 0m0.000s)
109. check wrong struct's declared size (check-structs.at:44): ok     (0m0.012s 0m0.000s)
110. daemon (daemon.at:3): ok     (0m0.000s 0m0.000s)
112. daemon --detach (daemon.at:80): ok     (0m0.000s 0m0.000s)
111. daemon --monitor (daemon.at:31): ok     (0m0.000s 0m0.008s)
114. daemon --detach startup errors (daemon.at:153): ok     (0m0.000s 0m0.000s)
115. daemon --detach --monitor startup errors (daemon.at:163): ok     (0m0.000s 0m0.000s)
116. daemon --service (daemon.at:173): skipped (daemon.at:175)
113. daemon --detach --monitor (daemon.at:103): ok     (0m0.016s 0m0.000s)
117. daemon - Python2 (daemon-py.at:23): ok     (0m0.000s 0m0.000s)
118. daemon - Python3 (daemon-py.at:24): ok     (0m0.000s 0m0.000s)
119. daemon --monitor - Python2 (daemon-py.at:70): ok     (0m0.000s 0m0.008s)
120. daemon --monitor - Python3 (daemon-py.at:71): ok     (0m0.000s 0m0.008s)
121. daemon --monitor restart exit code - Python2 (daemon-py.at:117): ok     (0m0.000s 0m0.008s)
122. daemon --monitor restart exit code - Python3 (daemon-py.at:118): ok     (0m0.004s 0m0.004s)
123. daemon --detach - Python2 (daemon-py.at:137): ok     (0m0.052s 0m0.008s)
124. daemon --detach - Python3 (daemon-py.at:138): ok     (0m0.076s 0m0.008s)
126. daemon --detach --monitor - Python3 (daemon-py.at:190): ok     (0m0.084s 0m0.016s)
127. daemon --detach startup errors - Python2 (daemon-py.at:203): ok     (0m0.048s 0m0.016s)
125. daemon --detach --monitor - Python2 (daemon-py.at:189): ok     (0m0.056s 0m0.016s)
128. daemon --detach startup errors - Python3 (daemon-py.at:204): ok     (0m0.080s 0m0.012s)
129. daemon --detach --monitor startup errors - Python2 (daemon-py.at:216): ok     (0m0.048s 0m0.020s)
130. daemon --detach --monitor startup errors - Python3 (daemon-py.at:217): ok     (0m0.096s 0m0.008s)
131. daemon --detach closes standard fds - Python2 (daemon-py.at:240): ok     (0m0.044s 0m0.012s)
132. daemon --detach closes standard fds - Python3 (daemon-py.at:241): ok     (0m0.060s 0m0.020s)
133. daemon --detach --monitor closes standard fds - Python2 (daemon-py.at:265): ok     (0m0.044s 0m0.012s)
135. OpenFlow 1.0 action translation (ofp-actions.at:3): ok     (0m0.000s 0m0.000s)
136. OpenFlow 1.0 "instruction" translations (ofp-actions.at:272): ok     (0m0.000s 0m0.000s)
137. OpenFlow 1.1 action translation (ofp-actions.at:302): ok     (0m0.000s 0m0.000s)
138. OpenFlow 1.1 instruction translation (ofp-actions.at:442): ok     (0m0.000s 0m0.000s)
134. daemon --detach --monitor closes standard fds - Python3 (daemon-py.at:266): ok     (0m0.072s 0m0.008s)
139. OpenFlow 1.2 action translation (ofp-actions.at:653): ok     (0m0.000s 0m0.000s)
140. OpenFlow 1.3 action translation (ofp-actions.at:679): ok     (0m0.000s 0m0.000s)
141. OpenFlow 1.5 action translation (ofp-actions.at:707): ok     (0m0.000s 0m0.000s)
142. ofp-actions - inconsistent MPLS actions (ofp-actions.at:731): ok     (0m0.000s 0m0.000s)
103. multiple conjunctive match (classifier.at:171): ok     (0m0.012s 0m0.000s)
143. reg_load <-> set_field translation corner case (ofp-actions.at:743): ok     (0m0.000s 0m0.000s)
144. enqueue action for OF1.1+ (ofp-actions.at:758): ok     (0m0.000s 0m0.000s)
147. empty (ofp-print.at:3): ok     (0m0.000s 0m0.000s)
145. mod_nw_ttl action for OF1.0 (ofp-actions.at:775): ok     (0m0.000s 0m0.000s)
148. too short (ofp-print.at:9): ok     (0m0.000s 0m0.000s)
146. mod_nw_ecn action translation (ofp-actions.at:792): ok     (0m0.000s 0m0.000s)
149. wrong OpenFlow version (ofp-print.at:17): ok     (0m0.000s 0m0.000s)
150. truncated message (ofp-print.at:27): ok     (0m0.000s 0m0.000s)
151. message only uses part of buffer (ofp-print.at:35): ok     (0m0.000s 0m0.000s)
152. OFPT_HELLO - ordinary (ofp-print.at:44): ok     (0m0.000s 0m0.000s)
153. OFPT_HELLO with extra data (ofp-print.at:52): ok     (0m0.000s 0m0.000s)
154. OFPT_HELLO with version bitmap (ofp-print.at:64): ok     (0m0.000s 0m0.000s)
155. OFPT_HELLO with version bitmap and extra data (ofp-print.at:73): ok     (0m0.000s 0m0.000s)
156. OFPT_HELLO with higher than supported version (ofp-print.at:87): ok     (0m0.000s 0m0.000s)
158. OFPT_ECHO_REQUEST, empty payload (ofp-print.at:148): ok     (0m0.000s 0m0.000s)
157. OFPT_HELLO with contradictory version bitmaps (ofp-print.at:106): ok     (0m0.000s 0m0.000s)
159. OFPT_ECHO_REQUEST, 5-byte payload (ofp-print.at:155): ok     (0m0.000s 0m0.000s)
160. OFPT_ECHO_REPLY, empty payload (ofp-print.at:163): ok     (0m0.000s 0m0.000s)
162. OFPT_FEATURES_REQUEST (ofp-print.at:178): ok     (0m0.000s 0m0.000s)
161. OFPT_ECHO_REPLY, 5-byte payload (ofp-print.at:170): ok     (0m0.000s 0m0.000s)
163. OFPT_FEATURES_REPLY - OF1.0 (ofp-print.at:185): ok     (0m0.000s 0m0.000s)
165. OFPT_FEATURES_REPLY - OF1.1 (ofp-print.at:274): ok     (0m0.000s 0m0.000s)
164. OFPT_FEATURES_REPLY cut off mid-port - OF1.0 (ofp-print.at:235): ok     (0m0.000s 0m0.000s)
166. OFPT_FEATURES_REPLY cut off mid-port - OF1.1 (ofp-print.at:305): ok     (0m0.000s 0m0.000s)
167. OFPT_FEATURES_REPLY - OF1.2 (ofp-print.at:334): ok     (0m0.000s 0m0.000s)
168. OFPT_FEATURES_REPLY cut off mid-port - OF1.2 (ofp-print.at:365): ok     (0m0.000s 0m0.000s)
169. OFPT_FEATURES_REPLY - OF1.3 (ofp-print.at:394): ok     (0m0.000s 0m0.000s)
170. OFPT_FEATURES_REPLY - with auxiliary_id - OF1.3 (ofp-print.at:406): ok     (0m0.000s 0m0.000s)
171. OFPT_GET_CONFIG_REQUEST (ofp-print.at:418): ok     (0m0.000s 0m0.000s)
172. OFPT_GET_CONFIG_REPLY, most common form (ofp-print.at:425): ok     (0m0.000s 0m0.000s)
173. OFPT_GET_CONFIG_REPLY, frags and miss_send_len (ofp-print.at:433): ok     (0m0.000s 0m0.000s)
174. OFPT_PACKET_IN - OF1.0 (ofp-print.at:440): ok     (0m0.000s 0m0.000s)
175. OFPT_PACKET_IN - OF1.0, with hex output of packet data (ofp-print.at:454): ok     (0m0.000s 0m0.000s)
176. OFPT_PACKET_IN - OF1.1 (ofp-print.at:472): ok     (0m0.000s 0m0.000s)
178. OFPT_PACKET_IN - OF1.2, with hex output of packet data (ofp-print.at:501): ok     (0m0.000s 0m0.000s)
177. OFPT_PACKET_IN - OF1.2 (ofp-print.at:487): ok     (0m0.000s 0m0.000s)
180. OFPT_PACKET_IN - OF1.4 (ofp-print.at:533): ok     (0m0.000s 0m0.000s)
179. OFPT_PACKET_IN - OF1.3 (ofp-print.at:518): ok     (0m0.000s 0m0.000s)
181. OFPT_PACKET_IN - OF1.5 (ofp-print.at:548): ok     (0m0.000s 0m0.000s)
182. OFPT_PACKET_IN - OF1.3, with hex output of packet data (ofp-print.at:563): ok     (0m0.000s 0m0.000s)
183. OFPT_FLOW_REMOVED - OF1.0 (ofp-print.at:581): ok     (0m0.000s 0m0.000s)
184. OFPT_FLOW_REMOVED - OF1.2 (ofp-print.at:595): ok     (0m0.000s 0m0.000s)
185. OFPT_FLOW_REMOVED - OF1.3 (ofp-print.at:606): ok     (0m0.000s 0m0.000s)
186. OFPT_PORT_STATUS - OF1.0 (ofp-print.at:617): ok     (0m0.000s 0m0.000s)
187. OFPT_PORT_STATUS - OF1.1 (ofp-print.at:635): ok     (0m0.000s 0m0.000s)
188. OFPT_PORT_STATUS - OF1.4 (ofp-print.at:654): ok     (0m0.000s 0m0.000s)
189. OFPT_PACKET_OUT - OF1.0 (ofp-print.at:674): ok     (0m0.000s 0m0.000s)
190. OFPT_PACKET_OUT - OF1.0, with packet (ofp-print.at:688): ok     (0m0.000s 0m0.000s)
191. OFPT_PACKET_OUT - OF1.0, with hex output of packet data (ofp-print.at:703): ok     (0m0.000s 0m0.000s)
192. OFPT_PACKET_OUT - OF1.1 (ofp-print.at:722): ok     (0m0.000s 0m0.000s)
193. OFPT_PACKET_OUT - OF1.1, with packet (ofp-print.at:733): ok     (0m0.000s 0m0.000s)
194. OFPT_FLOW_MOD - OF1.0 - low verbosity (ofp-print.at:750): ok     (0m0.000s 0m0.000s)
195. OFPT_FLOW_MOD - OF1.1 - low verbosity (ofp-print.at:768): ok     (0m0.000s 0m0.000s)
196. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:788): ok     (0m0.000s 0m0.000s)
197. OFPT_FLOW_MOD - OF1.0 - high verbosity (ofp-print.at:808): ok     (0m0.000s 0m0.000s)
198. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:826): ok     (0m0.000s 0m0.000s)
199. OFPT_FLOW_MOD - OF1.3 - flags - low verbosity (ofp-print.at:845): ok     (0m0.000s 0m0.000s)
200. OFPT_FLOW_MOD - OF1.2 - set-field ip_src (ofp-print.at:863): ok     (0m0.000s 0m0.000s)
201. OFPT_FLOW_MOD - OF1.2 - set-field ip_dst (ofp-print.at:878): ok     (0m0.000s 0m0.000s)
202. OFPT_FLOW_MOD - OF1.2 - set-field sctp_src (ofp-print.at:893): ok     (0m0.000s 0m0.000s)
203. OFPT_FLOW_MOD - OF1.2 - set-field sctp_dst (ofp-print.at:908): ok     (0m0.000s 0m0.000s)
204. OFPT_FLOW_MOD - OF1.2 - experimenter OXM (ofp-print.at:923): ok     (0m0.000s 0m0.000s)
205. OFPT_FLOW_MOD - OF1.2 - set-field nd_target, nd_sll (ofp-print.at:937): ok     (0m0.000s 0m0.000s)
206. OFPT_FLOW_MOD - OF1.3 - meter (ofp-print.at:955): ok     (0m0.000s 0m0.000s)
207. OFPT_FLOW reply - OF1.2 - set-field ip_src (ofp-print.at:966): ok     (0m0.000s 0m0.000s)
208. OFPT_FLOW reply - OF1.2 - set-field ip_dst (ofp-print.at:983): ok     (0m0.000s 0m0.000s)
209. OFPT_FLOW reply - OF1.2 - set-field sctp_src (ofp-print.at:1000): ok     (0m0.000s 0m0.000s)
210. OFPT_FLOW reply - OF1.2 - set-field sctp_dst (ofp-print.at:1017): ok     (0m0.000s 0m0.000s)
211. OFPT_PORT_MOD - OF1.0 (ofp-print.at:1034): ok     (0m0.000s 0m0.000s)
212. OFPT_PORT_MOD - OF1.1 (ofp-print.at:1047): ok     (0m0.000s 0m0.000s)
213. OFPT_PORT_MOD - OF1.2 (ofp-print.at:1061): ok     (0m0.000s 0m0.000s)
214. OFPT_PORT_MOD - OF1.3 (ofp-print.at:1075): ok     (0m0.000s 0m0.000s)
215. OFPT_PORT_MOD - OF1.4 (ofp-print.at:1089): ok     (0m0.000s 0m0.000s)
216. OFPT_TABLE_MOD - OF1.1 (ofp-print.at:1103): ok     (0m0.000s 0m0.000s)
217. OFPT_TABLE_MOD - OF1.2 (ofp-print.at:1112): ok     (0m0.000s 0m0.000s)
218. OFPT_TABLE_MOD - OF1.3 (ofp-print.at:1121): ok     (0m0.000s 0m0.000s)
219. OFPT_TABLE_MOD - OF1.4 (ofp-print.at:1130): ok     (0m0.000s 0m0.000s)
220. OFPST_DESC request (ofp-print.at:1139): ok     (0m0.000s 0m0.000s)
221. OFPST_DESC reply (ofp-print.at:1146): ok     (0m0.000s 0m0.000s)
222. OFPST_FLOW request - OF1.0 (ofp-print.at:1226): ok     (0m0.000s 0m0.000s)
223. OFPST_FLOW request - OF1.2 (ofp-print.at:1238): ok     (0m0.000s 0m0.000s)
224. OFPST_FLOW request - OF1.3 (ofp-print.at:1250): ok     (0m0.000s 0m0.000s)
225. OFPST_FLOW reply - OF1.0 (ofp-print.at:1262): ok     (0m0.000s 0m0.000s)
226. OFPST_FLOW reply - OF1.2 (ofp-print.at:1306): ok     (0m0.000s 0m0.000s)
227. OFPST_AGGREGATE request - OF1.0 (ofp-print.at:1341): ok     (0m0.000s 0m0.000s)
228. OFPST_AGGREGATE request - OF1.2 (ofp-print.at:1353): ok     (0m0.000s 0m0.000s)
229. OFPST_AGGREGATE request - OF1.3 (ofp-print.at:1365): ok     (0m0.000s 0m0.000s)
230. OFPST_AGGREGATE reply - OF1.0 (ofp-print.at:1377): ok     (0m0.000s 0m0.000s)
231. OFPST_AGGREGATE reply - OF1.2 (ofp-print.at:1388): ok     (0m0.000s 0m0.000s)
232. OFPST_AGGREGATE reply - OF1.3 (ofp-print.at:1399): ok     (0m0.000s 0m0.000s)
233. OFPST_TABLE request - OF1.0 (ofp-print.at:1410): ok     (0m0.000s 0m0.000s)
234. OFPST_TABLE request - OF1.1 (ofp-print.at:1417): ok     (0m0.000s 0m0.000s)
235. OFPST_TABLE request - OF1.2 (ofp-print.at:1424): ok     (0m0.000s 0m0.000s)
236. OFPST_TABLE request - OF1.3 (ofp-print.at:1431): ok     (0m0.000s 0m0.000s)
237. OFPST_TABLE reply - OF1.0 (ofp-print.at:1438): ok     (0m0.000s 0m0.000s)
239. OFPST_TABLE reply - OF1.3 (ofp-print.at:1558): ok     (0m0.000s 0m0.000s)
240. OFPST_PORT request - 1.0 (ofp-print.at:1575): ok     (0m0.000s 0m0.000s)
241. OFPST_PORT request - 1.1 (ofp-print.at:1585): ok     (0m0.000s 0m0.000s)
242. OFPST_PORT request - 1.2 (ofp-print.at:1595): ok     (0m0.000s 0m0.000s)
243. OFPST_PORT request - 1.3 (ofp-print.at:1605): ok     (0m0.000s 0m0.000s)
244. OFPST_PORT reply - OF1.0 (ofp-print.at:1615): ok     (0m0.000s 0m0.000s)
245. OFPST_PORT reply - OF1.2 (ofp-print.at:1658): ok     (0m0.000s 0m0.000s)
246. OFPST_PORT reply - OF1.3 (ofp-print.at:1693): ok     (0m0.000s 0m0.000s)
247. OFPST_PORT reply - OF1.4 (ofp-print.at:1732): ok     (0m0.000s 0m0.000s)
248. OFPST_QUEUE request - OF1.0 (ofp-print.at:1752): ok     (0m0.000s 0m0.000s)
249. OFPST_QUEUE request - OF1.1 (ofp-print.at:1762): ok     (0m0.000s 0m0.000s)
250. OFPST_QUEUE request - OF1.2 (ofp-print.at:1772): ok     (0m0.000s 0m0.000s)
251. OFPST_QUEUE request - OF1.3 (ofp-print.at:1782): ok     (0m0.000s 0m0.000s)
252. OFPST_QUEUE reply - OF1.0 (ofp-print.at:1792): ok     (0m0.000s 0m0.000s)
253. OFPST_QUEUE reply - OF1.1 (ofp-print.at:1819): ok     (0m0.000s 0m0.000s)
254. OFPST_QUEUE reply - OF1.2 (ofp-print.at:1846): ok     (0m0.000s 0m0.000s)
255. OFPST_QUEUE reply - OF1.3 (ofp-print.at:1873): ok     (0m0.000s 0m0.000s)
256. OFPST_QUEUE reply - OF1.4 (ofp-print.at:1906): ok     (0m0.000s 0m0.000s)
257. OFPST_GROUP request (ofp-print.at:1940): ok     (0m0.000s 0m0.000s)
258. OFPST_GROUP reply - OF1.1 (ofp-print.at:1949): ok     (0m0.000s 0m0.000s)
259. OFPST_GROUP reply - OF1.3 (ofp-print.at:1969): ok     (0m0.000s 0m0.000s)
260. OFPST_GROUP_DESC request - OF1.1 (ofp-print.at:1991): ok     (0m0.000s 0m0.000s)
261. OFPST_GROUP_DESC request - OF1.5 (ofp-print.at:1999): ok     (0m0.000s 0m0.000s)
262. OFPST_GROUP_DESC reply - OF1.1 (ofp-print.at:2008): ok     (0m0.000s 0m0.000s)
263. OFPST_GROUP_DESC reply - OF1.5 (ofp-print.at:2025): ok     (0m0.000s 0m0.000s)
264. OFPST_GROUP_FEATURES request (ofp-print.at:2050): ok     (0m0.000s 0m0.000s)
265. OFPST_GROUP_FEATURES reply (ofp-print.at:2058): ok     (0m0.000s 0m0.000s)
266. OFPST_PORT_DESC request - OF1.0 (ofp-print.at:2085): ok     (0m0.000s 0m0.000s)
267. OFPST_PORT_DESC request - OF1.5 (ofp-print.at:2092): ok     (0m0.000s 0m0.000s)
268. OFPST_PORT_DESC reply - OF1.0 (ofp-print.at:2101): ok     (0m0.000s 0m0.000s)
269. OFPST_PORT_DESC reply - OF1.4 (ofp-print.at:2120): ok     (0m0.000s 0m0.000s)
270. OFPT_METER_MOD request - OF1.3 (ofp-print.at:2141): ok     (0m0.000s 0m0.000s)
271. OFPT_METER_MOD request - bad band - OF1.3 (ofp-print.at:2152): ok     (0m0.000s 0m0.000s)
272. OFPT_METER_MOD request - bad command - OF1.3 (ofp-print.at:2162): ok     (0m0.000s 0m0.000s)
273. OFPT_METER_MOD request - bad flags - OF1.3 (ofp-print.at:2171): ok     (0m0.000s 0m0.000s)
274. OFPST_METER request - OF1.3 (ofp-print.at:2181): ok     (0m0.000s 0m0.000s)
275. OFPST_METER_CONFIG request - OF1.3 (ofp-print.at:2188): ok     (0m0.000s 0m0.000s)
276. OFPST_METER_FEATURES request - OF1.3 (ofp-print.at:2195): ok     (0m0.000s 0m0.000s)
277. OFPST_METER_FEATURES reply - OF1.3 (ofp-print.at:2202): ok     (0m0.000s 0m0.000s)
278. OFPST_METER_CONFIG reply - OF1.3 (ofp-print.at:2215): ok     (0m0.000s 0m0.000s)
279. OFPST_METER reply - OF1.3 (ofp-print.at:2235): ok     (0m0.000s 0m0.000s)
280. OFPST_TABLE_FEATURES request - OF1.3 (ofp-print.at:2259): ok     (0m0.000s 0m0.000s)
281. OFPT_BARRIER_REQUEST - OF1.0 (ofp-print.at:2478): ok     (0m0.000s 0m0.000s)
282. OFPT_BARRIER_REQUEST - OF1.1 (ofp-print.at:2485): ok     (0m0.000s 0m0.000s)
283. OFPT_BARRIER_REQUEST - OF1.2 (ofp-print.at:2492): ok     (0m0.000s 0m0.000s)
284. OFPT_BARRIER_REQUEST - OF1.3 (ofp-print.at:2499): ok     (0m0.000s 0m0.000s)
285. OFPT_BARRIER_REPLY - OF1.0 (ofp-print.at:2506): ok     (0m0.000s 0m0.000s)
286. OFPT_BARRIER_REPLY - OF1.1 (ofp-print.at:2513): ok     (0m0.000s 0m0.000s)
287. OFPT_BARRIER_REPLY - OF1.2 (ofp-print.at:2520): ok     (0m0.000s 0m0.000s)
288. OFPT_BARRIER_REPLY - OF1.3 (ofp-print.at:2527): ok     (0m0.000s 0m0.000s)
289. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.0 (ofp-print.at:2534): ok     (0m0.000s 0m0.000s)
290. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.2 (ofp-print.at:2541): ok     (0m0.000s 0m0.000s)
291. OFPST_QUEUE_DESC request - OF1.4 (ofp-print.at:2549): ok     (0m0.000s 0m0.000s)
292. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.0 (ofp-print.at:2558): ok     (0m0.000s 0m0.000s)
293. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.1 (ofp-print.at:2573): ok     (0m0.000s 0m0.000s)
294. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.2 (ofp-print.at:2588): ok     (0m0.000s 0m0.000s)
295. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.3 (ofp-print.at:2603): ok     (0m0.000s 0m0.000s)
296. OFPST_QUEUE_DESC reply - OF1.4 (ofp-print.at:2619): ok     (0m0.000s 0m0.000s)
297. OFPT_SET_ASYNC - OF1.3 (ofp-print.at:2638): ok     (0m0.000s 0m0.000s)
298. OFPT_ROLE_REQUEST - OF1.2 (ofp-print.at:2667): ok     (0m0.000s 0m0.000s)
299. OFPT_ROLE_REQUEST - nochange - OF1.2 (ofp-print.at:2677): ok     (0m0.000s 0m0.000s)
300. NXT_ROLE_REQUEST (ofp-print.at:2687): ok     (0m0.000s 0m0.000s)
301. OFPT_ROLE_REPLY - OF1.2 (ofp-print.at:2697): ok     (0m0.000s 0m0.000s)
302. NXT_ROLE_REPLY (ofp-print.at:2707): ok     (0m0.000s 0m0.000s)
303. OFP_ROLE_STATUS - master, experimenter - OF1.4 (ofp-print.at:2717): ok     (0m0.000s 0m0.000s)
304. OFP_ROLE_STATUS - master, config - OF1.4 (ofp-print.at:2727): ok     (0m0.000s 0m0.000s)
305. OFP_ROLE_STATUS - master, config,generation - OF1.4 (ofp-print.at:2737): ok     (0m0.000s 0m0.000s)
306. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2747): ok     (0m0.000s 0m0.000s)
307. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2759): ok     (0m0.000s 0m0.000s)
308. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2771): ok     (0m0.000s 0m0.000s)
309. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2782): ok     (0m0.000s 0m0.000s)
310. NXT_SET_PACKET_IN (ofp-print.at:2793): ok     (0m0.000s 0m0.000s)
311. NXT_PACKET_IN (ofp-print.at:2803): ok     (0m0.000s 0m0.000s)
312. NXT_PACKET_IN, with hex output of packet data (ofp-print.at:2824): ok     (0m0.000s 0m0.000s)
313. NX_PACKET_IN2 (ofp-print.at:2849): ok     (0m0.000s 0m0.000s)
314. NXT_SET_ASYNC_CONFIG (ofp-print.at:2872): ok     (0m0.000s 0m0.000s)
315. OFPT_SET_ASYNC_CONFIG (ofp-print.at:2900): ok     (0m0.000s 0m0.000s)
316. OFPT_SET_ASYNC_CONFIG - invalid mask - OF1.4 (ofp-print.at:2927): ok     (0m0.000s 0m0.000s)
317. OFPT_SET_ASYNC_CONFIG - unsupported configuration - OF1.4 (ofp-print.at:2942): ok     (0m0.000s 0m0.000s)
318. NXT_SET_CONTROLLER_ID (ofp-print.at:2957): ok     (0m0.000s 0m0.000s)
319. NXT_FLOW_MONITOR_CANCEL (ofp-print.at:2967): ok     (0m0.000s 0m0.000s)
320. NXT_FLOW_MONITOR_PAUSED (ofp-print.at:2977): ok     (0m0.000s 0m0.000s)
321. NXT_FLOW_MONITOR_RESUMED (ofp-print.at:2986): ok     (0m0.000s 0m0.000s)
322. NXT_SET_FLOW_FORMAT (ofp-print.at:2995): ok     (0m0.000s 0m0.000s)
323. NXT_FLOW_MOD, low verbosity (ofp-print.at:3006): ok     (0m0.000s 0m0.000s)
324. NXT_FLOW_MOD, high verbosity (ofp-print.at:3022): ok     (0m0.000s 0m0.000s)
325. OFPT_GROUP_MOD - OF1.1 (ofp-print.at:3036): ok     (0m0.000s 0m0.000s)
326. OFPT_GROUP_MOD add - OF1.5 (ofp-print.at:3052): ok     (0m0.000s 0m0.000s)
327. OFPT_GROUP_MOD insert bucket - OF1.5 (ofp-print.at:3073): ok     (0m0.000s 0m0.000s)
328. NXT_FLOW_REMOVED (ofp-print.at:3091): ok     (0m0.000s 0m0.000s)
93. flow classifier - many rules in two tables (classifier.at:2): ok     (0m6.860s 0m0.000s)
329. NXT_FLOW_MOD_TABLE_ID (ofp-print.at:3107): ok     (0m0.000s 0m0.000s)
330. NXT_RESUME (ofp-print.at:3117): ok     (0m0.000s 0m0.000s)
331. NXST_FLOW request (ofp-print.at:3129): ok     (0m0.000s 0m0.000s)
332. NXST_FLOW reply (ofp-print.at:3139): ok     (0m0.000s 0m0.000s)
333. NXST_AGGREGATE request (ofp-print.at:3293): ok     (0m0.000s 0m0.000s)
334. NXST_AGGREGATE reply (ofp-print.at:3303): ok     (0m0.000s 0m0.000s)
335. NXST_FLOW_MONITOR request (ofp-print.at:3314): ok     (0m0.000s 0m0.000s)
336. NXST_FLOW_MONITOR reply (ofp-print.at:3327): ok     (0m0.000s 0m0.000s)
337. OFPT_BUNDLE_CONTROL - atomic OPEN_REQUEST (ofp-print.at:3342): ok     (0m0.000s 0m0.000s)
338. OFPT_BUNDLE_CONTROL - ordered OPEN_REQUEST (ofp-print.at:3353): ok     (0m0.000s 0m0.000s)
339. OFPT_BUNDLE_CONTROL - atomic ordered OPEN_REQUEST (ofp-print.at:3364): ok     (0m0.000s 0m0.000s)
340. OFPT_BUNDLE_CONTROL - OPEN_REPLY (ofp-print.at:3375): ok     (0m0.000s 0m0.000s)
341. OFPT_BUNDLE_CONTROL - CLOSE_REQUEST (ofp-print.at:3386): ok     (0m0.000s 0m0.000s)
342. OFPT_BUNDLE_CONTROL - CLOSE_REPLY (ofp-print.at:3397): ok     (0m0.000s 0m0.000s)
343. OFPT_BUNDLE_CONTROL - COMMIT_REQUEST (ofp-print.at:3408): ok     (0m0.000s 0m0.000s)
344. OFPT_BUNDLE_CONTROL - COMMIT_REPLY (ofp-print.at:3419): ok     (0m0.000s 0m0.000s)
345. OFPT_BUNDLE_CONTROL - DISCARD_REQUEST (ofp-print.at:3430): ok     (0m0.000s 0m0.000s)
346. OFPT_BUNDLE_CONTROL - DISCARD_REPLY (ofp-print.at:3441): ok     (0m0.000s 0m0.000s)
347. OFPT_BUNDLE_ADD_MESSAGE - verify xid (ofp-print.at:3452): ok     (0m0.000s 0m0.000s)
348. OFPT_BUNDLE_ADD_MESSAGE - reject OFPT_HELLO (ofp-print.at:3462): ok     (0m0.000s 0m0.000s)
349. OFPT_BUNDLE_ADD_MESSAGE - FLOW_MOD (ofp-print.at:3474): ok     (0m0.000s 0m0.000s)
350. OFPT_BUNDLE_ADD_MESSAGE - PORT_MOD (ofp-print.at:3494): ok     (0m0.000s 0m0.000s)
351. OFPT_BUNDLE_ADD_MESSAGE - GROUP_MOD (ofp-print.at:3511): ok     (0m0.000s 0m0.000s)
352. NXST_IPFIX_BRIDGE - request (ofp-print.at:3535): ok     (0m0.000s 0m0.000s)
353. NXST_IPFIX_BRIDGE - reply (ofp-print.at:3545): ok     (0m0.000s 0m0.000s)
354. NXST_IPFIX_FLOW - request (ofp-print.at:3568): ok     (0m0.000s 0m0.000s)
355. NXST_IPFIX_FLOW - reply (ofp-print.at:3578): ok     (0m0.000s 0m0.000s)
356. NXT_CT_FLUSH_ZONE (ofp-print.at:3614): ok     (0m0.000s 0m0.000s)
358. parsing key-value pairs (ofp-util.at:54): ok     (0m0.000s 0m0.000s)
359. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.0 (ofp-errors.at:3): ok     (0m0.000s 0m0.000s)
357. encoding hellos (ofp-util.at:3): ok     (0m0.000s 0m0.000s)
361. OFPT_ERROR with type OFPET_BAD_REQUEST - OF1.0 (ofp-errors.at:19): ok     (0m0.000s 0m0.000s)
360. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.1 (ofp-errors.at:11): ok     (0m0.000s 0m0.000s)
362. OFPT_ERROR prints type of truncated inner messages (ofp-errors.at:29): ok     (0m0.000s 0m0.000s)
363. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.0 (ofp-errors.at:46): ok     (0m0.000s 0m0.000s)
364. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.1 (ofp-errors.at:54): ok     (0m0.000s 0m0.000s)
365. OFPT_ERROR with type OFPFMFC_OVERLAP - OF1.0 (ofp-errors.at:64): ok     (0m0.000s 0m0.000s)
366. OFPT_ERROR with type OFPBIC_UNSUP_INST - OF1.1 (ofp-errors.at:73): ok     (0m0.000s 0m0.000s)
367. OFPT_ERROR with type OFPBIC_DUP_INST - OF1.4 (ofp-errors.at:83): ok     (0m0.000s 0m0.000s)
368. encoding OFPBIC_* experimenter errors (ofp-errors.at:97): ok     (0m0.000s 0m0.000s)
369. encoding errors extension that became official (ofp-errors.at:119): ok     (0m0.000s 0m0.000s)
370. decoding OFPBIC_* experimenter errors (ofp-errors.at:138): ok     (0m0.000s 0m0.000s)
371. decoding experimenter errors (ofp-errors.at:154): ok     (0m0.000s 0m0.000s)
372. encoding experimenter errors (ofp-errors.at:186): ok     (0m0.000s 0m0.000s)
374. ovs-ofctl parse-flows (OpenFlow 1.0) (ovs-ofctl.at:177): ok     (0m0.000s 0m0.000s)
375. ovs-ofctl parse-flows (OpenFlow 1.1) (ovs-ofctl.at:238): ok     (0m0.000s 0m0.000s)
376. ovs-ofctl parse-flows (OpenFlow 1.2) (ovs-ofctl.at:277): ok     (0m0.000s 0m0.000s)
378. ovs-ofctl action inconsistency (OpenFlow 1.1) (ovs-ofctl.at:363): ok     (0m0.000s 0m0.000s)
379. ovs-ofctl parse-flows (skb_priority) (ovs-ofctl.at:369): ok     (0m0.000s 0m0.000s)
380. ovs-ofctl parse-flows (NXM) (ovs-ofctl.at:381): ok     (0m0.000s 0m0.000s)
381. ovs-ofctl -F nxm parse-flows (ovs-ofctl.at:474): ok     (0m0.000s 0m0.000s)
377. ovs-ofctl parse-flow with invalid mask (ovs-ofctl.at:324): ok     (0m0.000s 0m0.000s)
382. ovs-ofctl -F nxm -mmm parse-flows (ovs-ofctl.at:549): ok     (0m0.000s 0m0.000s)
383. ovs-ofctl parse-nx-match (ovs-ofctl.at:624): ok     (0m0.000s 0m0.000s)
384. ovs-ofctl parse-ofp10-match (ovs-ofctl.at:1226): ok     (0m0.000s 0m0.000s)
385. ovs-ofctl parse-ofp11-match (ovs-ofctl.at:1443): ok     (0m0.000s 0m0.000s)
386. ovs-ofctl parse-nx-match loose (ovs-ofctl.at:1769): ok     (0m0.000s 0m0.000s)
388. ovs-ofctl parse-oxm (OpenFlow 1.3) (ovs-ofctl.at:2284): ok     (0m0.000s 0m0.000s)
387. ovs-ofctl parse-oxm (OpenFlow 1.2) (ovs-ofctl.at:1790): ok     (0m0.000s 0m0.000s)
389. ovs-ofctl parse-oxm (OpenFlow 1.5) (ovs-ofctl.at:2307): ok     (0m0.000s 0m0.000s)
238. OFPST_TABLE reply - OF1.2 (ofp-print.at:1467): ok     (0m0.048s 0m0.100s)
390. ovs-ofctl parse-oxm loose (ovs-ofctl.at:2372): ok     (0m0.000s 0m0.000s)
391. experimenter OXM encoding (ovs-ofctl.at:2393): ok     (0m0.000s 0m0.000s)
392. check TCP flags expression in OXM and NXM (ovs-ofctl.at:2440): ok     (0m0.000s 0m0.000s)
394. ovs-ofctl -F option and NXM features (ovs-ofctl.at:2569): ok     (0m0.000s 0m0.000s)
393. ovs-ofctl check-vlan (ovs-ofctl.at:2472): ok     (0m0.000s 0m0.000s)
395. ovs-ofctl -F option with flow_mods (ovs-ofctl.at:2582): ok     (0m0.000s 0m0.000s)
396. ovs-ofctl dump-flows honors -F option (ovs-ofctl.at:2594): ok     (0m0.000s 0m0.000s)
397. ovs-ofctl dump-flows rejects bad -F option (ovs-ofctl.at:2606): ok     (0m0.000s 0m0.000s)
398. ovs-ofctl add-flow reports non-normalized flows (ovs-ofctl.at:2615): ok     (0m0.000s 0m0.000s)
399. ovs-ofctl dump-flows with sorting (ovs-ofctl.at:2629): ok     (0m0.000s 0m0.000s)
373. ovs-ofctl parse-flows choice of protocol (ovs-ofctl.at:3): ok     (0m0.000s 0m0.000s)
403. ovs-ofctl -F and -O interaction (ovs-ofctl.at:2809): ok     (0m0.000s 0m0.000s)
404. ovs-ofctl ofp-parse (ovs-ofctl.at:2830): ok     (0m0.000s 0m0.000s)
401. ovs-ofctl diff-flows - tunnel metadata (ovs-ofctl.at:2756): ok     (0m0.000s 0m0.000s)
402. ovs-ofctl diff-flows - suppress false differences (ovs-ofctl.at:2792): ok     (0m0.000s 0m0.000s)
406. ovs-ofctl rule with importance (ovs-ofctl.at:2917): ok     (0m0.000s 0m0.000s)
405. tcp flags - filtering (ovs-ofctl.at:2848): ok     (0m0.000s 0m0.000s)
407. ovs-ofctl replace-flows with importance (ovs-ofctl.at:2944): ok     (0m0.000s 0m0.000s)
410. OVS datapath key parsing and formatting - valid forms (odp.at:3): ok     (0m0.000s 0m0.000s)
408. ovs-ofctl replace-flows with --bundle (ovs-ofctl.at:2963): ok     (0m0.000s 0m0.000s)
411. OVS datapath wildcarded key parsing and formatting - valid forms (odp.at:102): ok     (0m0.000s 0m0.000s)
409. ovs-ofctl ct-flush-zone (ovs-ofctl.at:3091): ok     (0m0.000s 0m0.000s)
413. OVS datapath actions parsing and formatting - valid forms (odp.at:245): ok     (0m0.000s 0m0.000s)
412. OVS datapath wildcarded key filtering. (odp.at:180): ok     (0m0.000s 0m0.000s)
414. MPLS xlate action (mpls-xlate.at:3): ok     (0m0.000s 0m0.000s)
95. flow classifier - many rules in five tables (classifier.at:2): ok     (0m6.884s 0m0.000s)
415. modulo_n multipath link selection (multipath.at:10): ok     (0m0.940s 0m0.000s)
419. multipath action missing argument (multipath.at:282): ok     (0m0.000s 0m0.000s)
420. multipath action bad fields (multipath.at:288): ok     (0m0.000s 0m0.000s)
421. multipath action bad algorithm (multipath.at:294): ok     (0m0.000s 0m0.000s)
416. hash_threshold multipath link selection (multipath.at:78): ok     (0m0.944s 0m0.000s)
422. multipath action bad n_links (multipath.at:300): ok     (0m0.000s 0m0.000s)
423. multipath action destination too narrow (multipath.at:306): ok     (0m0.000s 0m0.000s)
424. learning action - parsing and formatting (learn.at:3): ok     (0m0.000s 0m0.000s)
425. learning action - parsing and formatting - illegal in_port_oxm (learn.at:24): ok     (0m0.000s 0m0.000s)
426. learning action - parsing and formatting - OXM (learn.at:33): ok     (0m0.000s 0m0.000s)
427. learning action - examples (learn.at:46): ok     (0m0.000s 0m0.000s)
428. learning action - satisfied prerequisites (learn.at:64): ok     (0m0.000s 0m0.000s)
429. learning action - invalid prerequisites (learn.at:79): ok     (0m0.000s 0m0.000s)
430. learning action - too-long immediate value (learn.at:94): ok     (0m0.000s 0m0.000s)
35. cuckoo hash (library.at:30): ok     (0m10.360s 0m0.008s)
431. learning action - standard VLAN+MAC learning (learn.at:108): ok     (0m0.000s 0m0.000s)
433. learning action - TCPv4 port learning (learn.at:245): ok     (0m0.000s 0m0.000s)
434. learning action - TCPv6 port learning (learn.at:271): ok     (0m0.000s 0m0.000s)
435. learning action - self-modifying flow (learn.at:303): ok     (0m0.000s 0m0.000s)
432. learning action - learn refreshes hard_age (learn.at:177): ok     (0m0.000s 0m0.000s)
438. learning action - fin_timeout feature (learn.at:487): ok     (0m0.000s 0m0.000s)
418. iter_hash multipath link selection (multipath.at:214): ok     (0m1.080s 0m0.000s)
440. unix vconn - refuse connection (vconn.at:20): ok     (0m0.000s 0m0.000s)
441. unix vconn - accept then close (vconn.at:20): ok     (0m0.000s 0m0.000s)
442. unix vconn - read hello (vconn.at:20): ok     (0m0.000s 0m0.000s)
443. unix vconn - send plain hello (vconn.at:20): ok     (0m0.000s 0m0.000s)
444. unix vconn - send long hello (vconn.at:20): ok     (0m0.000s 0m0.000s)
445. unix vconn - send echo hello (vconn.at:20): ok     (0m0.000s 0m0.000s)
446. unix vconn - send short hello (vconn.at:20): ok     (0m0.000s 0m0.000s)
439. learning action - delete_learned feature (learn.at:502): ok     (0m0.000s 0m0.000s)
447. unix vconn - send invalid version hello (vconn.at:20): ok     (0m0.000s 0m0.000s)
448. tcp vconn - refuse connection (vconn.at:21): ok     (0m0.000s 0m0.000s)
449. tcp vconn - accept then close (vconn.at:21): ok     (0m0.000s 0m0.000s)
450. tcp vconn - read hello (vconn.at:21): ok     (0m0.000s 0m0.000s)
451. tcp vconn - send plain hello (vconn.at:21): ok     (0m0.000s 0m0.000s)
452. tcp vconn - send long hello (vconn.at:21): ok     (0m0.000s 0m0.000s)
453. tcp vconn - send echo hello (vconn.at:21): ok     (0m0.000s 0m0.000s)
454. tcp vconn - send short hello (vconn.at:21): ok     (0m0.000s 0m0.000s)
455. tcp vconn - send invalid version hello (vconn.at:21): ok     (0m0.000s 0m0.000s)
456. ssl vconn - refuse connection (vconn.at:22): skipped (vconn.at:22)
457. ssl vconn - accept then close (vconn.at:22): skipped (vconn.at:22)
458. ssl vconn - read hello (vconn.at:22): skipped (vconn.at:22)
459. ssl vconn - send plain hello (vconn.at:22): skipped (vconn.at:22)
460. ssl vconn - send long hello (vconn.at:22): skipped (vconn.at:22)
461. ssl vconn - send echo hello (vconn.at:22): skipped (vconn.at:22)
462. ssl vconn - send short hello (vconn.at:22): skipped (vconn.at:22)
463. ssl vconn - send invalid version hello (vconn.at:22): skipped (vconn.at:22)
464. components of "/usr/lib" are "/usr", "lib" (file_name.at:13): ok     (0m0.000s 0m0.000s)
465. components of "/usr/" are "/", "usr" (file_name.at:14): ok     (0m0.000s 0m0.000s)
466. components of "usr" are ".", "usr" (file_name.at:15): ok     (0m0.000s 0m0.000s)
467. components of "/" are "/", "/" (file_name.at:16): ok     (0m0.000s 0m0.000s)
468. components of "." are ".", "." (file_name.at:17): ok     (0m0.000s 0m0.000s)
469. components of ".." are ".", ".." (file_name.at:18): ok     (0m0.000s 0m0.000s)
470. components of "//" are "//", "//" (file_name.at:19): ok     (0m0.000s 0m0.000s)
471. components of "//foo" are "//", "foo" (file_name.at:20): ok     (0m0.000s 0m0.000s)
472. components of "" are ".", "." (file_name.at:21): ok     (0m0.000s 0m0.000s)
417. hrw multipath link selection (multipath.at:146): ok     (0m2.040s 0m0.000s)
436. learning action - self-modifying flow with idle_timeout (learn.at:345): ok     (0m0.000s 0m0.000s)
473. components of "dir/file" are "dir", "file" (file_name.at:24): ok     (0m0.000s 0m0.000s)
474. components of "dir/file/" are "dir", "file" (file_name.at:25): ok     (0m0.000s 0m0.000s)
475. components of "dir/file//" are "dir", "file" (file_name.at:26): ok     (0m0.000s 0m0.000s)
476. components of "///foo" are "/", "foo" (file_name.at:27): ok     (0m0.000s 0m0.000s)
477. follow_symlinks - relative symlinks (file_name.at:37): ok     (0m0.000s 0m0.000s)
479. follow_symlinks - symlinks to directories (file_name.at:71): ok     (0m0.000s 0m0.000s)
480. follow_symlinks - nonexistent targets (file_name.at:84): ok     (0m0.000s 0m0.000s)
478. follow_symlinks - absolute symlinks (file_name.at:54): ok     (0m0.000s 0m0.000s)
481. follow_symlinks - regular files (file_name.at:92): ok     (0m0.000s 0m0.000s)
482. follow_symlinks - device targets (file_name.at:97): ok     (0m0.000s 0m0.000s)
483. follow_symlinks - nonexistent files (file_name.at:106): ok     (0m0.000s 0m0.000s)
485. wikipedia test vector 1 (aes128.at:10): ok     (0m0.000s 0m0.000s)
484. follow_symlinks - symlink loop (file_name.at:114): ok     (0m0.000s 0m0.000s)
486. wikipedia test vector 2 (aes128.at:16): ok     (0m0.000s 0m0.000s)
487. NIST KAT ECBKeySbox128e vector 0 (aes128.at:22): ok     (0m0.000s 0m0.000s)
488. NIST KAT ECBKeySbox128e vector 1 (aes128.at:28): ok     (0m0.000s 0m0.000s)
489. NIST KAT ECBKeySbox128e vector 2 (aes128.at:34): ok     (0m0.000s 0m0.000s)
490. NIST KAT ECBKeySbox128e vector 3 (aes128.at:40): ok     (0m0.000s 0m0.000s)
491. NIST KAT ECBKeySbox128e vector 4 (aes128.at:46): ok     (0m0.000s 0m0.000s)
492. NIST KAT ECBKeySbox128e vector 5 (aes128.at:52): ok     (0m0.000s 0m0.000s)
493. NIST KAT ECBKeySbox128e vector 6 (aes128.at:58): ok     (0m0.000s 0m0.000s)
494. NIST KAT ECBKeySbox128e vector 7 (aes128.at:64): ok     (0m0.000s 0m0.000s)
495. NIST KAT ECBKeySbox128e vector 8 (aes128.at:70): ok     (0m0.000s 0m0.000s)
496. NIST KAT ECBKeySbox128e vector 9 (aes128.at:76): ok     (0m0.000s 0m0.000s)
497. NIST KAT ECBKeySbox128e vector 10 (aes128.at:82): ok     (0m0.000s 0m0.000s)
498. NIST KAT ECBKeySbox128e vector 11 (aes128.at:88): ok     (0m0.000s 0m0.000s)
501. NIST KAT ECBKeySbox128e vector 14 (aes128.at:106): ok     (0m0.000s 0m0.000s)
499. NIST KAT ECBKeySbox128e vector 12 (aes128.at:94): ok     (0m0.000s 0m0.000s)
500. NIST KAT ECBKeySbox128e vector 13 (aes128.at:100): ok     (0m0.000s 0m0.000s)
502. NIST KAT ECBKeySbox128e vector 15 (aes128.at:112): ok     (0m0.000s 0m0.000s)
503. NIST KAT ECBKeySbox128e vector 16 (aes128.at:118): ok     (0m0.000s 0m0.000s)
504. NIST KAT ECBKeySbox128e vector 17 (aes128.at:124): ok     (0m0.000s 0m0.000s)
505. NIST KAT ECBKeySbox128e vector 18 (aes128.at:130): ok     (0m0.000s 0m0.000s)
506. NIST KAT ECBKeySbox128e vector 19 (aes128.at:136): ok     (0m0.000s 0m0.000s)
507. NIST KAT ECBKeySbox128e vector 20 (aes128.at:142): ok     (0m0.000s 0m0.000s)
437. learning action - self-modifying flow with hard_timeout (learn.at:403): ok     (0m0.000s 0m0.000s)
510. unixctl ovs-vswitchd list-commands - Python2 (unixctl-py.at:38): ok     (0m0.072s 0m0.004s)
508. unixctl ovs-vswitchd exit - Python2 (unixctl-py.at:20): ok     (0m0.120s 0m0.020s)
511. unixctl ovs-vswitchd list-commands - Python3 (unixctl-py.at:39): ok     (0m0.088s 0m0.016s)
509. unixctl ovs-vswitchd exit - Python3 (unixctl-py.at:21): ok     (0m0.180s 0m0.020s)
514. unixctl bad target - Python2 (unixctl-py.at:109): ok     (0m0.132s 0m0.008s)
515. unixctl bad target - Python3 (unixctl-py.at:110): ok     (0m0.192s 0m0.008s)
512. unixctl ovs-vswitchd arguments - Python2 (unixctl-py.at:84): ok     (0m0.300s 0m0.048s)
518. unixctl server errors - Python2 (unixctl-py.at:192): ok     (0m0.064s 0m0.008s)
519. unixctl server errors - Python3 (unixctl-py.at:193): ok     (0m0.092s 0m0.008s)
521. empty array - C (json.at:83): ok     (0m0.000s 0m0.000s)
522. empty array - Python2 (json.at:83): ok     (0m0.012s 0m0.004s)
523. empty array - Python3 (json.at:83): ok     (0m0.040s 0m0.004s)
524. single-element array - C (json.at:84): ok     (0m0.000s 0m0.000s)
513. unixctl ovs-vswitchd arguments - Python3 (unixctl-py.at:85): ok     (0m0.480s 0m0.020s)
525. single-element array - Python2 (json.at:84): ok     (0m0.016s 0m0.000s)
527. 2-element array - C (json.at:85): ok     (0m0.000s 0m0.000s)
528. 2-element array - Python2 (json.at:85): ok     (0m0.020s 0m0.000s)
526. single-element array - Python3 (json.at:84): ok     (0m0.044s 0m0.000s)
516. unixctl server - Python2 (unixctl-py.at:183): ok     (0m0.492s 0m0.068s)
530. many-element array - C (json.at:86): ok     (0m0.000s 0m0.000s)
531. many-element array - Python2 (json.at:86): ok     (0m0.020s 0m0.000s)
529. 2-element array - Python3 (json.at:85): ok     (0m0.040s 0m0.004s)
533. missing comma - C (json.at:89): ok     (0m0.000s 0m0.000s)
532. many-element array - Python3 (json.at:86): ok     (0m0.036s 0m0.008s)
534. missing comma - Python2 (json.at:89): ok     (0m0.012s 0m0.008s)
536. trailing comma not allowed - C (json.at:91): ok     (0m0.000s 0m0.000s)
520. UUID generation, parsing, serialization (uuid.at:15): ok     (0m0.000s 0m0.044s)
535. missing comma - Python3 (json.at:89): ok     (0m0.044s 0m0.000s)
539. doubled comma not allowed - C (json.at:93): ok     (0m0.000s 0m0.000s)
537. trailing comma not allowed - Python2 (json.at:91): ok     (0m0.012s 0m0.004s)
542. empty string - C (json.at:98): ok     (0m0.000s 0m0.000s)
538. trailing comma not allowed - Python3 (json.at:91): ok     (0m0.040s 0m0.004s)
540. doubled comma not allowed - Python2 (json.at:93): ok     (0m0.016s 0m0.004s)
545. 1-character strings - C (json.at:99): ok     (0m0.000s 0m0.000s)
543. empty string - Python2 (json.at:98): ok     (0m0.020s 0m0.000s)
541. doubled comma not allowed - Python3 (json.at:93): ok     (0m0.040s 0m0.004s)
546. 1-character strings - Python2 (json.at:99): ok     (0m0.020s 0m0.000s)
548. escape sequences - C (json.at:102): ok     (0m0.000s 0m0.000s)
544. empty string - Python3 (json.at:98): ok     (0m0.040s 0m0.004s)
551. Unicode escape sequences - C (json.at:105): ok     (0m0.000s 0m0.000s)
549. escape sequences - Python2 (json.at:102): ok     (0m0.016s 0m0.000s)
547. 1-character strings - Python3 (json.at:99): ok     (0m0.044s 0m0.000s)
554. surrogate pairs - C (json.at:108): ok     (0m0.000s 0m0.000s)
550. escape sequences - Python3 (json.at:102): ok     (0m0.044s 0m0.000s)
552. Unicode escape sequences - Python2 (json.at:105): ok     (0m0.016s 0m0.004s)
94. flow classifier - versioned many rules in two tables (classifier.at:2): ok     (0m10.664s 0m0.004s)
556. a string by itself is not valid JSON - C (json.at:114): ok     (0m0.000s 0m0.000s)
553. Unicode escape sequences - Python3 (json.at:105): ok     (0m0.044s 0m0.000s)
559. end of line in quoted string - C (json.at:116): ok     (0m0.000s 0m0.000s)
555. surrogate pairs - Python (json.at:111): ok     (0m0.012s 0m0.004s)
557. a string by itself is not valid JSON - Python2 (json.at:114): ok     (0m0.012s 0m0.004s)
517. unixctl server - Python3 (unixctl-py.at:184): ok     (0m0.760s 0m0.040s)
562. formfeed in quoted string - C (json.at:120): ok     (0m0.000s 0m0.000s)
558. a string by itself is not valid JSON - Python3 (json.at:114): ok     (0m0.036s 0m0.008s)
560. end of line in quoted string - Python2 (json.at:116): ok     (0m0.008s 0m0.012s)
563. formfeed in quoted string - Python2 (json.at:120): ok     (0m0.016s 0m0.000s)
565. bad escape in quoted string - C (json.at:123): ok     (0m0.000s 0m0.000s)
568. \u must be followed by 4 hex digits (1) - C (json.at:126): ok     (0m0.000s 0m0.000s)
561. end of line in quoted string - Python3 (json.at:116): ok     (0m0.044s 0m0.000s)
564. formfeed in quoted string - Python3 (json.at:120): ok     (0m0.044s 0m0.000s)
566. bad escape in quoted string - Python2 (json.at:123): ok     (0m0.020s 0m0.000s)
569. \u must be followed by 4 hex digits (1) - Python2 (json.at:126): ok     (0m0.016s 0m0.000s)
571. \u must be followed by 4 hex digits (2) - C (json.at:129): ok     (0m0.000s 0m0.000s)
567. bad escape in quoted string - Python3 (json.at:123): ok     (0m0.044s 0m0.000s)
574. isolated leading surrogate not allowed - C (json.at:132): ok     (0m0.000s 0m0.000s)
572. \u must be followed by 4 hex digits (2) - Python2 (json.at:129): ok     (0m0.020s 0m0.000s)
577. surrogatess must paired properly - C (json.at:135): ok     (0m0.000s 0m0.000s)
575. isolated leading surrogate not allowed - Python2 (json.at:132): ok     (0m0.020s 0m0.000s)
570. \u must be followed by 4 hex digits (1) - Python3 (json.at:126): ok     (0m0.044s 0m0.000s)
573. \u must be followed by 4 hex digits (2) - Python3 (json.at:129): ok     (0m0.040s 0m0.004s)
580. null bytes not allowed - C (json.at:138): ok     (0m0.000s 0m0.000s)
578. surrogatess must paired properly - Python2 (json.at:135): ok     (0m0.012s 0m0.008s)
576. isolated leading surrogate not allowed - Python3 (json.at:132): ok     (0m0.044s 0m0.000s)
583. properly quoted backslash at end of string - C (json.at:142): ok     (0m0.000s 0m0.000s)
581. null bytes not allowed - Python2 (json.at:138): ok     (0m0.016s 0m0.004s)
579. surrogatess must paired properly - Python3 (json.at:135): ok     (0m0.044s 0m0.000s)
586. stray backslash at end of string - C (json.at:145): ok     (0m0.000s 0m0.000s)
584. properly quoted backslash at end of string - Python2 (json.at:142): ok     (0m0.016s 0m0.000s)
582. null bytes not allowed - Python3 (json.at:138): ok     (0m0.044s 0m0.000s)
589. end of input in quoted string - C (json.at:149): ok     (0m0.000s 0m0.000s)
587. stray backslash at end of string - Python2 (json.at:145): ok     (0m0.020s 0m0.000s)
590. end of input in quoted string - Python (json.at:156): ok     (0m0.016s 0m0.000s)
591. empty object - C (json.at:167): ok     (0m0.000s 0m0.000s)
585. properly quoted backslash at end of string - Python3 (json.at:142): ok     (0m0.040s 0m0.004s)
594. simple object - C (json.at:168): ok     (0m0.000s 0m0.000s)
592. empty object - Python2 (json.at:167): ok     (0m0.020s 0m0.000s)
588. stray backslash at end of string - Python3 (json.at:145): ok     (0m0.044s 0m0.000s)
597. bad value - C (json.at:171): ok     (0m0.000s 0m0.000s)
595. simple object - Python2 (json.at:168): ok     (0m0.016s 0m0.004s)
593. empty object - Python3 (json.at:167): ok     (0m0.044s 0m0.000s)
600. missing colon - C (json.at:173): ok     (0m0.000s 0m0.000s)
598. bad value - Python2 (json.at:171): ok     (0m0.020s 0m0.000s)
596. simple object - Python3 (json.at:168): ok     (0m0.040s 0m0.004s)
601. missing colon - Python2 (json.at:173): ok     (0m0.020s 0m0.000s)
603. missing comma - C (json.at:175): ok     (0m0.000s 0m0.000s)
599. bad value - Python3 (json.at:171): ok     (0m0.044s 0m0.000s)
606. trailing comma not allowed - C (json.at:177): ok     (0m0.000s 0m0.000s)
604. missing comma - Python2 (json.at:175): ok     (0m0.020s 0m0.000s)
602. missing colon - Python3 (json.at:173): ok     (0m0.044s 0m0.000s)
609. doubled comma not allowed - C (json.at:180): ok     (0m0.000s 0m0.000s)
607. trailing comma not allowed - Python2 (json.at:177): ok     (0m0.020s 0m0.000s)
605. missing comma - Python3 (json.at:175): ok     (0m0.044s 0m0.000s)
612. names must be strings - C (json.at:183): ok     (0m0.000s 0m0.000s)
610. doubled comma not allowed - Python2 (json.at:180): ok     (0m0.020s 0m0.000s)
608. trailing comma not allowed - Python3 (json.at:177): ok     (0m0.044s 0m0.000s)
613. names must be strings - Python2 (json.at:183): ok     (0m0.020s 0m0.000s)
615. null - C (json.at:189): ok     (0m0.000s 0m0.000s)
618. false - C (json.at:190): ok     (0m0.000s 0m0.000s)
611. doubled comma not allowed - Python3 (json.at:180): ok     (0m0.044s 0m0.000s)
616. null - Python2 (json.at:189): ok     (0m0.016s 0m0.004s)
619. false - Python2 (json.at:190): ok     (0m0.020s 0m0.000s)
614. names must be strings - Python3 (json.at:183): ok     (0m0.036s 0m0.008s)
621. true - C (json.at:191): ok     (0m0.000s 0m0.000s)
624. a literal by itself is not valid JSON - C (json.at:192): ok     (0m0.000s 0m0.000s)
617. null - Python3 (json.at:189): ok     (0m0.044s 0m0.000s)
622. true - Python2 (json.at:191): ok     (0m0.020s 0m0.000s)
627. nullify is invalid - C (json.at:194): ok     (0m0.000s 0m0.000s)
620. false - Python3 (json.at:190): ok     (0m0.044s 0m0.000s)
625. a literal by itself is not valid JSON - Python2 (json.at:192): ok     (0m0.016s 0m0.004s)
623. true - Python3 (json.at:191): ok     (0m0.044s 0m0.000s)
630. nubs is invalid - C (json.at:196): ok     (0m0.000s 0m0.000s)
628. nullify is invalid - Python2 (json.at:194): ok     (0m0.008s 0m0.008s)
626. a literal by itself is not valid JSON - Python3 (json.at:192): ok     (0m0.044s 0m0.000s)
631. nubs is invalid - Python2 (json.at:196): ok     (0m0.020s 0m0.000s)
633. xxx is invalid - C (json.at:198): ok     (0m0.000s 0m0.000s)
636. integers expressed as reals - C (json.at:203): ok     (0m0.000s 0m0.000s)
634. xxx is invalid - Python2 (json.at:198): ok     (0m0.016s 0m0.000s)
629. nullify is invalid - Python3 (json.at:194): ok     (0m0.040s 0m0.004s)
637. integers expressed as reals - Python2 (json.at:203): ok     (0m0.012s 0m0.004s)
632. nubs is invalid - Python3 (json.at:196): ok     (0m0.044s 0m0.000s)
639. large integers - C (json.at:213): ok     (0m0.000s 0m0.000s)
642. large integers expressed as reals - C (json.at:217): ok     (0m0.000s 0m0.000s)
635. xxx is invalid - Python3 (json.at:198): ok     (0m0.040s 0m0.004s)
640. large integers - Python2 (json.at:213): ok     (0m0.016s 0m0.004s)
645. C - large integers that overflow to reals (json.at:225): ok     (0m0.000s 0m0.000s)
643. large integers expressed as reals - Python2 (json.at:217): ok     (0m0.020s 0m0.000s)
638. integers expressed as reals - Python3 (json.at:203): ok     (0m0.044s 0m0.000s)
641. large integers - Python3 (json.at:213): ok     (0m0.040s 0m0.004s)
648. negative zero - C (json.at:234): ok     (0m0.000s 0m0.000s)
646. large integers that overflow to reals - Python2 (json.at:229): ok     (0m0.020s 0m0.000s)
651. reals - C (json.at:239): ok     (0m0.000s 0m0.000s)
649. negative zero - Python2 (json.at:234): ok     (0m0.012s 0m0.008s)
644. large integers expressed as reals - Python3 (json.at:217): ok     (0m0.044s 0m0.000s)
652. reals - Python2 (json.at:239): ok     (0m0.016s 0m0.004s)
647. large integers that overflow to reals - Python3 (json.at:229): ok     (0m0.044s 0m0.000s)
654. scientific notation - C (json.at:243): ok     (0m0.000s 0m0.000s)
655. scientific notation - Python2 (json.at:243): ok     (0m0.012s 0m0.008s)
650. negative zero - Python3 (json.at:234): ok     (0m0.044s 0m0.000s)
657. C - +/- DBL_MAX (json.at:250): ok     (0m0.000s 0m0.000s)
660. negative reals - C (json.at:259): ok     (0m0.000s 0m0.000s)
653. reals - Python3 (json.at:239): ok     (0m0.044s 0m0.000s)
658. +/- DBL_MAX - Python2 (json.at:254): ok     (0m0.020s 0m0.000s)
661. negative reals - Python2 (json.at:259): ok     (0m0.012s 0m0.008s)
656. scientific notation - Python3 (json.at:243): ok     (0m0.040s 0m0.004s)
663. negative scientific notation - C (json.at:263): ok     (0m0.000s 0m0.000s)
666. 1e-9999 underflows to 0 - C (json.at:267): ok     (0m0.000s 0m0.000s)
664. negative scientific notation - Python2 (json.at:263): ok     (0m0.020s 0m0.000s)
659. +/- DBL_MAX - Python3 (json.at:254): ok     (0m0.044s 0m0.000s)
667. 1e-9999 underflows to 0 - Python2 (json.at:267): ok     (0m0.012s 0m0.008s)
662. negative reals - Python3 (json.at:259): ok     (0m0.040s 0m0.004s)
669. a number by itself is not valid JSON - C (json.at:271): ok     (0m0.000s 0m0.000s)
665. negative scientific notation - Python3 (json.at:263): ok     (0m0.044s 0m0.004s)
672. leading zeros not allowed - C (json.at:273): ok     (0m0.000s 0m0.000s)
670. a number by itself is not valid JSON - Python2 (json.at:271): ok     (0m0.016s 0m0.004s)
673. leading zeros not allowed - Python2 (json.at:273): ok     (0m0.020s 0m0.000s)
675. 1e9999 is too big - C (json.at:277): ok     (0m0.000s 0m0.000s)
668. 1e-9999 underflows to 0 - Python3 (json.at:267): ok     (0m0.044s 0m0.000s)
671. a number by itself is not valid JSON - Python3 (json.at:271): ok     (0m0.036s 0m0.008s)
676. 1e9999 is too big - Python2 (json.at:277): ok     (0m0.020s 0m0.000s)
678. exponent bigger than INT_MAX - C (json.at:281): ok     (0m0.000s 0m0.000s)
674. leading zeros not allowed - Python3 (json.at:273): ok     (0m0.044s 0m0.000s)
681. decimal point must be followed by digit - C (json.at:285): ok     (0m0.000s 0m0.000s)
679. exponent bigger than INT_MAX - Python2 (json.at:281): ok     (0m0.020s 0m0.000s)
677. 1e9999 is too big - Python3 (json.at:277): ok     (0m0.044s 0m0.000s)
682. decimal point must be followed by digit - Python2 (json.at:285): ok     (0m0.016s 0m0.004s)
684. exponent must contain at least one digit (1) - C (json.at:289): ok     (0m0.000s 0m0.000s)
680. exponent bigger than INT_MAX - Python3 (json.at:281): ok     (0m0.040s 0m0.004s)
685. exponent must contain at least one digit (1) - Python2 (json.at:289): ok     (0m0.016s 0m0.004s)
687. exponent must contain at least one digit (2) - C (json.at:293): ok     (0m0.000s 0m0.000s)
683. decimal point must be followed by digit - Python3 (json.at:285): ok     (0m0.040s 0m0.004s)
690. exponent must contain at least one digit (3) - C (json.at:297): ok     (0m0.000s 0m0.000s)
688. exponent must contain at least one digit (2) - Python2 (json.at:293): ok     (0m0.020s 0m0.000s)
691. exponent must contain at least one digit (3) - Python2 (json.at:297): ok     (0m0.020s 0m0.000s)
686. exponent must contain at least one digit (1) - Python3 (json.at:289): ok     (0m0.040s 0m0.004s)
693. RFC 4267 object example - C (json.at:304): ok     (0m0.000s 0m0.000s)
694. RFC 4267 object example - Python2 (json.at:304): ok     (0m0.016s 0m0.004s)
696. RFC 4267 array example - C (json.at:320): ok     (0m0.000s 0m0.000s)
689. exponent must contain at least one digit (2) - Python3 (json.at:293): ok     (0m0.044s 0m0.000s)
697. RFC 4267 array example - Python2 (json.at:320): ok     (0m0.020s 0m0.000s)
699. trailing garbage - C (json.at:347): ok     (0m0.000s 0m0.000s)
692. exponent must contain at least one digit (3) - Python3 (json.at:297): ok     (0m0.040s 0m0.004s)
702. formfeeds are not valid white space - C (json.at:349): ok     (0m0.000s 0m0.000s)
695. RFC 4267 object example - Python3 (json.at:304): ok     (0m0.044s 0m0.000s)
700. trailing garbage - Python2 (json.at:347): ok     (0m0.020s 0m0.000s)
705. ';' is not a valid token - C (json.at:351): ok     (0m0.000s 0m0.000s)
698. RFC 4267 array example - Python3 (json.at:320): ok     (0m0.044s 0m0.000s)
703. formfeeds are not valid white space - Python2 (json.at:349): ok     (0m0.016s 0m0.000s)
706. ';' is not a valid token - Python2 (json.at:351): ok     (0m0.008s 0m0.008s)
701. trailing garbage - Python3 (json.at:347): ok     (0m0.044s 0m0.000s)
708. arrays nesting too deep - C (json.at:353): ok     (0m0.000s 0m0.000s)
704. formfeeds are not valid white space - Python3 (json.at:349): ok     (0m0.040s 0m0.004s)
711. objects nesting too deep - C (json.at:357): ok     (0m0.000s 0m0.000s)
709. arrays nesting too deep - Python2 (json.at:353): ok     (0m0.024s 0m0.000s)
707. ';' is not a valid token - Python3 (json.at:351): ok     (0m0.040s 0m0.004s)
714. input may not be empty (json.at:362): ok     (0m0.000s 0m0.000s)
715. multiple adjacent objects - C (json.at:370): ok     (0m0.000s 0m0.000s)
712. objects nesting too deep - Python2 (json.at:357): ok     (0m0.028s 0m0.004s)
710. arrays nesting too deep - Python3 (json.at:353): ok     (0m0.044s 0m0.004s)
718. multiple space-separated objects - C (json.at:375): ok     (0m0.000s 0m0.000s)
716. multiple adjacent objects - Python2 (json.at:370): ok     (0m0.016s 0m0.000s)
721. multiple objects on separate lines - C (json.at:380): ok     (0m0.000s 0m0.000s)
719. multiple space-separated objects - Python2 (json.at:375): ok     (0m0.016s 0m0.000s)
713. objects nesting too deep - Python3 (json.at:357): ok     (0m0.056s 0m0.000s)
717. multiple adjacent objects - Python3 (json.at:370): ok     (0m0.044s 0m0.000s)
724. multiple objects and arrays - C (json.at:387): ok     (0m0.000s 0m0.000s)
722. multiple objects on separate lines - Python2 (json.at:380): ok     (0m0.020s 0m0.000s)
720. multiple space-separated objects - Python3 (json.at:375): ok     (0m0.044s 0m0.000s)
725. multiple objects and arrays - Python2 (json.at:387): ok     (0m0.020s 0m0.000s)
727. garbage between multiple objects - C (json.at:393): ok     (0m0.000s 0m0.000s)
730. garbage after multiple objects - C (json.at:397): ok     (0m0.000s 0m0.000s)
723. multiple objects on separate lines - Python3 (json.at:380): ok     (0m0.040s 0m0.004s)
728. garbage between multiple objects - Python2 (json.at:393): ok     (0m0.016s 0m0.004s)
726. multiple objects and arrays - Python3 (json.at:387): ok     (0m0.040s 0m0.004s)
731. garbage after multiple objects - Python2 (json.at:397): ok     (0m0.020s 0m0.000s)
733. JSON-RPC request and successful reply (jsonrpc.at:3): ok     (0m0.000s 0m0.000s)
734. JSON-RPC request and error reply (jsonrpc.at:14): ok     (0m0.000s 0m0.000s)
729. garbage between multiple objects - Python3 (json.at:393): ok     (0m0.040s 0m0.004s)
735. JSON-RPC notification (jsonrpc.at:25): ok     (0m0.000s 0m0.000s)
732. garbage after multiple objects - Python3 (json.at:397): ok     (0m0.044s 0m0.000s)
96. flow classifier - versioned many rules in five tables (classifier.at:2): ok     (0m10.984s 0m0.004s)
736. JSON-RPC request and successful reply - Python2 (jsonrpc-py.at:17): ok     (0m0.136s 0m0.008s)
738. JSON-RPC request and error reply - Python2 (jsonrpc-py.at:34): ok     (0m0.132s 0m0.012s)
737. JSON-RPC request and successful reply - Python3 (jsonrpc-py.at:18): ok     (0m0.176s 0m0.004s)
739. JSON-RPC request and error reply - Python3 (jsonrpc-py.at:35): ok     (0m0.168s 0m0.012s)
740. JSON-RPC notification - Python2 (jsonrpc-py.at:62): ok     (0m0.136s 0m0.016s)
742. tunnel - input (tunnel.at:3): ok     (0m0.000s 0m0.000s)
744. tunnel - output (tunnel.at:112): ok     (0m0.000s 0m0.000s)
743. tunnel - ECN decapsulation (tunnel.at:65): ok     (0m0.000s 0m0.000s)
741. JSON-RPC notification - Python3 (jsonrpc-py.at:63): ok     (0m0.192s 0m0.024s)
745. tunnel - unencrypted tunnel and not setting skb_mark (tunnel.at:145): ok     (0m0.000s 0m0.000s)
746. tunnel - unencrypted tunnel and setting skb_mark to 1 (tunnel.at:163): ok     (0m0.000s 0m0.000s)
747. tunnel - unencrypted tunnel and setting skb_mark to 2 (tunnel.at:181): ok     (0m0.000s 0m0.000s)
752. tunnel - set_tunnel (tunnel.at:304): ok     (0m0.000s 0m0.000s)
751. tunnel - ToS and TTL inheritance (tunnel.at:265): ok     (0m0.000s 0m0.000s)
753. tunnel - key (tunnel.at:339): ok     (0m0.000s 0m0.000s)
754. tunnel - key match (tunnel.at:389): ok     (0m0.000s 0m0.000s)
755. tunnel - Geneve (tunnel.at:439): ok     (0m0.000s 0m0.000s)
756. tunnel - VXLAN (tunnel.at:451): ok     (0m0.000s 0m0.000s)
757. tunnel - LISP (tunnel.at:463): ok     (0m0.000s 0m0.000s)
758. tunnel - different VXLAN UDP port (tunnel.at:475): ok     (0m0.000s 0m0.000s)
759. ofproto-dpif - set_field - tun_src/tun_dst/tun_id (tunnel.at:504): ok     (0m0.000s 0m0.000s)
748. tunnel - encrypted tunnel and not setting skb_mark (tunnel.at:199): ok     (0m0.000s 0m0.000s)
761. tunnel - Geneve option present (tunnel.at:609): ok     (0m0.000s 0m0.000s)
749. tunnel - encrypted tunnel and setting skb_mark to 1 (tunnel.at:221): ok     (0m0.000s 0m0.000s)
760. tunnel - Geneve metadata (tunnel.at:535): ok     (0m0.000s 0m0.000s)
762. tunnel - concomitant IPv6 and IPv4 tunnels (tunnel.at:648): ok     (0m0.000s 0m0.000s)
750. tunnel - encrypted tunnel and setting skb_mark to 2 (tunnel.at:243): ok     (0m0.000s 0m0.000s)
766. lock and unlock (lockfile.at:15): ok     (0m0.000s 0m0.000s)
767. lock and unlock twice (lockfile.at:17): ok     (0m0.000s 0m0.000s)
768. lock blocks same process (lockfile.at:19): ok     (0m0.000s 0m0.000s)
769. lock blocks same process twice (lockfile.at:23): ok     (0m0.000s 0m0.000s)
770. lock blocks other process (lockfile.at:28): ok     (0m0.000s 0m0.000s)
771. lock twice blocks other process (lockfile.at:33): ok     (0m0.000s 0m0.000s)
772. lock and unlock allows other process (lockfile.at:39): ok     (0m0.000s 0m0.000s)
773. lock multiple (lockfile.at:41): ok     (0m0.000s 0m0.000s)
775. lock symlink to dir (lockfile.at:52): ok     (0m0.000s 0m0.000s)
776. nothing happens if not enabled - C (reconnect.at:32): ok     (0m0.000s 0m0.000s)
774. lock symlink (lockfile.at:45): ok     (0m0.000s 0m0.000s)
779. quick connect, idle disconnect - C (reconnect.at:43): ok     (0m0.000s 0m0.000s)
764. tunnel_push_pop - packet_out (tunnel-push-pop.at:172): ok     (0m0.024s 0m0.000s)
777. nothing happens if not enabled - Python2 (reconnect.at:32): ok     (0m0.024s 0m0.004s)
780. quick connect, idle disconnect - Python2 (reconnect.at:43): ok     (0m0.028s 0m0.000s)
782. slow connect, idle disconnect - C (reconnect.at:99): ok     (0m0.000s 0m0.000s)
785. connect backs off - C (reconnect.at:169): ok     (0m0.000s 0m0.000s)
778. nothing happens if not enabled - Python3 (reconnect.at:32): ok     (0m0.064s 0m0.000s)
783. slow connect, idle disconnect - Python2 (reconnect.at:99): ok     (0m0.024s 0m0.004s)
788. connections with no data preserve backoff - C (reconnect.at:368): ok     (0m0.000s 0m0.000s)
781. quick connect, idle disconnect - Python3 (reconnect.at:43): ok     (0m0.060s 0m0.004s)
763. tunnel_push_pop - action (tunnel-push-pop.at:3): ok     (0m0.020s 0m0.004s)
786. connect backs off - Python2 (reconnect.at:169): ok     (0m0.028s 0m0.000s)
791. brief connection preserves backoff - C (reconnect.at:532): ok     (0m0.000s 0m0.000s)
784. slow connect, idle disconnect - Python3 (reconnect.at:99): ok     (0m0.060s 0m0.004s)
765. tunnel_push_pop_ipv6 - action (tunnel-push-pop-ipv6.at:3): ok     (0m0.012s 0m0.000s)
794. brief connection with data preserves backoff - C (reconnect.at:663): ok     (0m0.000s 0m0.000s)
789. connections with no data preserve backoff - Python2 (reconnect.at:368): ok     (0m0.024s 0m0.004s)
787. connect backs off - Python3 (reconnect.at:169): ok     (0m0.064s 0m0.000s)
792. brief connection preserves backoff - Python2 (reconnect.at:532): ok     (0m0.024s 0m0.004s)
797. long connection resets backoff - C (reconnect.at:824): ok     (0m0.000s 0m0.000s)
790. connections with no data preserve backoff - Python3 (reconnect.at:368): ok     (0m0.064s 0m0.000s)
800. connection attempt fails quickly - C (reconnect.at:985): ok     (0m0.000s 0m0.000s)
795. brief connection with data preserves backoff - Python2 (reconnect.at:663): ok     (0m0.016s 0m0.012s)
798. long connection resets backoff - Python2 (reconnect.at:824): ok     (0m0.028s 0m0.000s)
793. brief connection preserves backoff - Python3 (reconnect.at:532): ok     (0m0.060s 0m0.004s)
803. max-tries of 1 honored - C (reconnect.at:1040): ok     (0m0.000s 0m0.000s)
796. brief connection with data preserves backoff - Python3 (reconnect.at:663): ok     (0m0.056s 0m0.008s)
801. connection attempt fails quickly - Python2 (reconnect.at:985): ok     (0m0.028s 0m0.000s)
806. max-tries of 0 honored - C (reconnect.at:1100): ok     (0m0.000s 0m0.000s)
799. long connection resets backoff - Python3 (reconnect.at:824): ok     (0m0.052s 0m0.012s)
804. max-tries of 1 honored - Python2 (reconnect.at:1040): ok     (0m0.020s 0m0.008s)
809. passive mode - C (reconnect.at:1116): ok     (0m0.000s 0m0.000s)
802. connection attempt fails quickly - Python3 (reconnect.at:985): ok     (0m0.064s 0m0.000s)
807. max-tries of 0 honored - Python2 (reconnect.at:1100): ok     (0m0.028s 0m0.000s)
805. max-tries of 1 honored - Python3 (reconnect.at:1040): ok     (0m0.064s 0m0.000s)
810. passive mode - Python2 (reconnect.at:1116): ok     (0m0.020s 0m0.008s)
808. max-tries of 0 honored - Python3 (reconnect.at:1100): ok     (0m0.060s 0m0.004s)
812. ovs-vswitchd detaches correctly with empty db (ovs-vswitchd.at:7): ok     (0m0.000s 0m0.000s)
811. passive mode - Python3 (reconnect.at:1116): ok     (0m0.064s 0m0.000s)
817. ovs-vswitchd -- set service controller (ovs-vswitchd.at:159): ok     (0m0.000s 0m0.000s)
819. ovs-vswitchd - do not create sockets with unsafe names (ovs-vswitchd.at:197): ok     (0m0.000s 0m0.000s)
820. ofproto - echo request (ofproto.at:3): ok     (0m0.000s 0m0.000s)
821. ofproto - handling messages with bad version (ofproto.at:9): ok     (0m0.000s 0m0.000s)
400. ovs-ofctl diff-flows (ovs-ofctl.at:2732): ok     (0m0.260s 0m0.324s)
822. ofproto - feature request, config request (ofproto.at:33): ok     (0m0.000s 0m0.000s)
818. ovs-vswitchd -- Compatible with OVSDB server - w/o monitor_cond (ovs-vswitchd.at:176): ok     (0m0.000s 0m0.000s)
823. ofproto - set OpenFlow port number (ofproto.at:50): ok     (0m0.000s 0m0.000s)
824. ofproto - port stats - (OpenFlow 1.0) (ofproto.at:83): ok     (0m0.000s 0m0.000s)
826. ofproto - port stats - (OpenFlow 1.4) (ofproto.at:105): ok     (0m0.000s 0m0.000s)
825. ofproto - port stats - (OpenFlow 1.2) (ofproto.at:94): ok     (0m0.000s 0m0.000s)
813. ovs-vswitchd -- stats-update-interval (ovs-vswitchd.at:36): ok     (0m0.000s 0m0.000s)
827. ofproto - port-desc stats (OpenFlow 1.0) (ofproto.at:120): ok     (0m0.000s 0m0.000s)
828. ofproto - port-desc stats (OpenFlow 1.2) (ofproto.at:135): ok     (0m0.000s 0m0.000s)
829. ofproto - port-desc stats (OpenFlow 1.5) (ofproto.at:148): ok     (0m0.000s 0m0.000s)
830. ofproto - queue stats - (OpenFlow 1.0) (ofproto.at:224): ok     (0m0.000s 0m0.000s)
831. ofproto - queue stats - (OpenFlow 1.1) (ofproto.at:225): ok     (0m0.000s 0m0.000s)
832. ofproto - queue stats - (OpenFlow 1.2) (ofproto.at:226): ok     (0m0.000s 0m0.000s)
833. ofproto - queue stats - (OpenFlow 1.3) (ofproto.at:227): ok     (0m0.000s 0m0.000s)
834. ofproto - queue stats - (OpenFlow 1.4) (ofproto.at:228): ok     (0m0.000s 0m0.000s)
835. ofproto - queue configuration - (OpenFlow 1.0) (ofproto.at:232): ok     (0m0.000s 0m0.000s)
836. ofproto - queue configuration - (OpenFlow 1.1) (ofproto.at:254): ok     (0m0.000s 0m0.000s)
837. ofproto - queue configuration - (OpenFlow 1.2) (ofproto.at:269): ok     (0m0.000s 0m0.000s)
838. ofproto - queue configuration - (OpenFlow 1.4) (ofproto.at:291): ok     (0m0.000s 0m0.000s)
839. ofproto - no group support (OpenFlow 1.0) (ofproto.at:324): ok     (0m0.000s 0m0.000s)
841. ofproto - add indirect group (ofproto.at:384): ok     (0m0.000s 0m0.000s)
840. ofproto - del group (OpenFlow 1.1) (ofproto.at:343): ok     (0m0.000s 0m0.000s)
842. ofproto - group mod with mod and add_or_mod command (ofproto.at:397): ok     (0m0.000s 0m0.000s)
843. ofproto - del group (OpenFlow 1.5) (ofproto.at:426): ok     (0m0.000s 0m0.000s)
844. ofproto - del group deletes flows (ofproto.at:463): ok     (0m0.000s 0m0.000s)
814. ovs-vswitchd -- start additional ovs-vswitchd process (ovs-vswitchd.at:69): ok     (0m0.000s 0m0.000s)
847. ofproto - bundle del group (OpenFlow 1.3) (ofproto.at:654): ok     (0m0.000s 0m0.000s)
846. ofproto - remove group buckets (ofproto.at:600): ok     (0m0.000s 0m0.000s)
845. ofproto - insert group buckets (ofproto.at:504): ok     (0m0.000s 0m0.000s)
848. ofproto - bundle add indirect group (ofproto.at:692): ok     (0m0.000s 0m0.000s)
849. ofproto - bundle group mod with mod and add_or_mod command (ofproto.at:707): ok     (0m0.000s 0m0.000s)
850. ofproto - bundle del group (OpenFlow 1.5) (ofproto.at:733): ok     (0m0.000s 0m0.000s)
851. ofproto - bundle del group deletes flows (ofproto.at:768): ok     (0m0.000s 0m0.000s)
854. ofproto - flow mod checks group availability (ofproto.at:963): ok     (0m0.000s 0m0.000s)
853. ofproto - bundle remove group buckets (ofproto.at:906): ok     (0m0.000s 0m0.000s)
855. ofproto - bundle flow mod checks group availability (ofproto.at:989): ok     (0m0.000s 0m0.000s)
856. ofproto - group description (ofproto.at:1018): ok     (0m0.000s 0m0.000s)
852. ofproto - bundle insert group buckets (ofproto.at:809): ok     (0m0.000s 0m0.000s)
857. ofproto - group description (ofproto.at:1031): ok     (0m0.000s 0m0.000s)
858. ofproto - group features (ofproto.at:1044): ok     (0m0.000s 0m0.000s)
862. ofproto - group add then bridge delete (OpenFlow 1.3) (ofproto.at:1142): ok     (0m0.000s 0m0.000s)
859. ofproto - group stats (OpenFlow 1.1) (ofproto.at:1070): ok     (0m0.004s 0m0.000s)
860. ofproto - group stats (OpenFlow 1.3) (ofproto.at:1094): ok     (0m0.000s 0m0.004s)
861. ofproto - group stats (OpenFlow 1.5) (ofproto.at:1118): ok     (0m0.000s 0m0.000s)
866. ofproto - basic flow_mod commands (NXM) (ofproto.at:1254): ok     (0m0.000s 0m0.000s)
864. ofproto - mod-port (OpenFlow 1.2) (ofproto.at:1191): ok     (0m0.000s 0m0.000s)
867. ofproto - basic flow_mod commands (OpenFlow 1.0) (ofproto.at:1276): ok     (0m0.004s 0m0.004s)
868. ofproto - add-flow and flags (ofproto.at:1301): ok     (0m0.000s 0m0.000s)
863. ofproto - mod-port (OpenFlow 1.0) (ofproto.at:1157): ok     (0m0.000s 0m0.000s)
865. ofproto - mod-port (OpenFlow 1.4) (ofproto.at:1222): ok     (0m0.000s 0m0.000s)
870. ofproto - flow_mod negative test (OpenFlow 1.1) (ofproto.at:1356): ok     (0m0.000s 0m0.000s)
869. ofproto - basic flow_mod commands (OpenFlow 1.1) (ofproto.at:1333): ok     (0m0.000s 0m0.000s)
871. ofproto - set-field flow_mod commands (NXM) (ofproto.at:1370): ok     (0m0.000s 0m0.000s)
873. ofproto - set-field flow_mod commands (OF1.2) (ofproto.at:1402): ok     (0m0.000s 0m0.000s)
872. ofproto - basic flow_mod commands (OpenFlow 1.2) (ofproto.at:1383): ok     (0m0.000s 0m0.000s)
874. ofproto - dump flows with cookie (ofproto.at:1415): ok     (0m0.000s 0m0.000s)
875. ofproto - mod flow with cookie change (OpenFlow 1.0) (ofproto.at:1439): ok     (0m0.000s 0m0.000s)
876. ofproto - mod flow with cookie change (NXM) (ofproto.at:1455): ok     (0m0.000s 0m0.000s)
816. ovs-vswitchd -- invalid database path (ovs-vswitchd.at:134): ok     (0m0.000s 0m0.000s)
877. ofproto - no mod flow with cookie change (OpenFlow 1.1) (ofproto.at:1471): ok     (0m0.000s 0m0.000s)
879. ofproto - mod flows based on cookie mask (OpenFlow 1.0) (ofproto.at:1503): ok     (0m0.000s 0m0.000s)
880. ofproto - mod flows based on cookie mask (OpenFlow 1.1) (ofproto.at:1525): ok     (0m0.000s 0m0.000s)
878. ofproto - no mod flow with cookie change (OpenFlow 1.2) (ofproto.at:1487): ok     (0m0.000s 0m0.000s)
815. ovs-vswitchd -- switch over to another ovs-vswitchd process (ovs-vswitchd.at:94): ok     (0m0.012s 0m0.000s)
881. ofproto - mod flows based on cookie mask (OpenFlow 1.2) (ofproto.at:1547): ok     (0m0.000s 0m0.000s)
882. ofproto - mod flows based on cookie mask with cookie change (ofproto.at:1570): ok     (0m0.000s 0m0.000s)
883. ofproto - mod flow with cookie miss (mask==0) - NXM (ofproto.at:1592): ok     (0m0.000s 0m0.000s)
884. ofproto - mod flow with cookie miss (mask==0) - OF1.1 (ofproto.at:1602): ok     (0m0.000s 0m0.000s)
885. ofproto - mod flow with cookie miss (mask==0) - OF1.2 (ofproto.at:1612): ok     (0m0.000s 0m0.000s)
886. ofproto - mod flow with cookie miss (mask!=0) - NXM (ofproto.at:1621): ok     (0m0.000s 0m0.000s)
887. ofproto - mod flow with cookie miss (mask!=0) - OF1.1 (ofproto.at:1630): ok     (0m0.000s 0m0.000s)
888. ofproto - mod flow with cookie miss (mask!=0) - OF1.2 (ofproto.at:1639): ok     (0m0.000s 0m0.000s)
889. ofproto - del flows with cookies (ofproto.at:1648): ok     (0m0.000s 0m0.000s)
890. ofproto - del flows based on cookie (ofproto.at:1667): ok     (0m0.000s 0m0.000s)
891. ofproto - del flows based on cookie mask (ofproto.at:1688): ok     (0m0.000s 0m0.000s)
892. ofproto - del flows based on table id (NXM) (ofproto.at:1707): ok     (0m0.000s 0m0.000s)
893. ofproto - del flows based on table id (OpenFlow 1.1) (ofproto.at:1739): ok     (0m0.000s 0m0.000s)
894. ofproto - del flows based on table id (OpenFlow 1.2) (ofproto.at:1772): ok     (0m0.000s 0m0.000s)
895. ofproto - flow_mod with out_port matching (OpenFlow 1.0) (ofproto.at:1804): ok     (0m0.000s 0m0.000s)
896. ofproto - flow_mod with out_port matching (OpenFlow 1.1) (ofproto.at:1840): ok     (0m0.000s 0m0.000s)
897. ofproto - flow_mod with out_group matching (OpenFlow 1.1) (ofproto.at:1876): ok     (0m0.000s 0m0.000s)
898. ofproto - bundle flow_mod with out group matching (OpenFlow 1.4) (ofproto.at:1918): ok     (0m0.000s 0m0.000s)
904. ofproto - hard limits on flow table size (OpenFlow 1.0) (ofproto.at:2440): ok     (0m0.004s 0m0.000s)
905. ofproto - hard limits on flow table size (OpenFlow 1.2) (ofproto.at:2484): ok     (0m0.000s 0m0.000s)
906. ofproto - eviction upon table overflow (OpenFlow 1.0) (ofproto.at:2523): ok     (0m0.000s 0m0.000s)
907. ofproto - eviction upon table overflow (OpenFlow 1.2) (ofproto.at:2581): ok     (0m0.000s 0m0.000s)
909. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.0) (ofproto.at:2704): ok     (0m0.000s 0m0.000s)
908. ofproto - eviction using importance upon table overflow (OpenFlow 1.4) (ofproto.at:2640): ok     (0m0.004s 0m0.000s)
910. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.2) (ofproto.at:2786): ok     (0m0.000s 0m0.000s)
912. ofproto - eviction upon table overflow, with modified idle timeout (ofproto.at:2912): ok     (0m0.000s 0m0.000s)
911. ofproto - eviction upon table overflow, with modified hard timeout (ofproto.at:2868): ok     (0m0.000s 0m0.000s)
900. ofproto - hidden rules not in table stats (ofproto.at:2027): ok     (0m0.020s 0m0.012s)
903. ofproto - table description (OpenFlow 1.4) (ofproto.at:2410): ok     (0m0.024s 0m0.016s)
913. ofproto - asynchronous message control (OpenFlow 1.0) (ofproto.at:2956): ok     (0m0.000s 0m0.000s)
917. ofproto - asynchronous message control (OpenFlow 1.5) (ofproto.at:3471): ok     (0m0.000s 0m0.000s)
915. ofproto - asynchronous message control (OpenFlow 1.3) (ofproto.at:3162): ok     (0m0.000s 0m0.000s)
918. ofproto - controller role (OpenFlow 1.2) (ofproto.at:3546): ok     (0m0.000s 0m0.000s)
916. ofproto - asynchronous message control (OpenFlow 1.4) (ofproto.at:3271): ok     (0m0.008s 0m0.000s)
919. ofproto - controller role (OpenFlow 1.4) (ofproto.at:3611): ok     (0m0.000s 0m0.000s)
899. ofproto - flow table configuration (OpenFlow 1.0) (ofproto.at:1968): ok     (0m0.024s 0m0.040s)
920. ofproto - requestforward (OpenFlow 1.4) (ofproto.at:3676): ok     (0m0.000s 0m0.000s)
901. ofproto - flow table configuration (OpenFlow 1.2) (ofproto.at:2078): ok     (0m0.036s 0m0.028s)
922. ofproto - packet-out from controller (OpenFlow 1.2) (ofproto.at:3804): ok     (0m0.000s 0m0.000s)
921. ofproto - packet-out from controller (OpenFlow 1.0) (ofproto.at:3768): ok     (0m0.000s 0m0.000s)
923. ofproto - packet-out from controller (OpenFlow 1.1) (ofproto.at:3837): ok     (0m0.000s 0m0.000s)
925. ofproto - packet-out with metadata (NXM) (ofproto.at:3896): ok     (0m0.000s 0m0.000s)
924. ofproto - packet-out with metadata and userdata (NXT_PACKET_IN2) (ofproto.at:3867): ok     (0m0.000s 0m0.000s)
927. ofproto - packet-out with metadata and dual set_field (OpenFlow 1.3) (ofproto.at:3952): ok     (0m0.000s 0m0.000s)
926. ofproto - packet-out with metadata (OpenFlow 1.2) (ofproto.at:3924): ok     (0m0.000s 0m0.000s)
928. ofproto - packet-out with tunnel metadata (OpenFlow 1.2) (ofproto.at:3979): ok     (0m0.000s 0m0.000s)
932. ofproto - flow monitoring pause and resume (ofproto.at:4257): skipped (ofproto.at:4277)
929. ofproto - flow monitoring (ofproto.at:4027): ok     (0m0.000s 0m0.000s)
930. ofproto - flow monitoring with !own (ofproto.at:4164): ok     (0m0.000s 0m0.000s)
931. ofproto - flow monitoring with out_port (ofproto.at:4205): ok     (0m0.000s 0m0.000s)
933. ofproto - event filtering (OpenFlow 1.3) (ofproto.at:4363): ok     (0m0.000s 0m0.000s)
935. ofproto - bundle open (OpenFlow 1.4) (ofproto.at:4459): ok     (0m0.000s 0m0.000s)
936. ofproto - bundle double open (OpenFlow 1.4) (ofproto.at:4483): ok     (0m0.000s 0m0.000s)
937. ofproto - bundle close without open (OpenFlow 1.4) (ofproto.at:4515): ok     (0m0.000s 0m0.000s)
938. ofproto - bundle double close (OpenFlow 1.4) (ofproto.at:4539): ok     (0m0.000s 0m0.000s)
939. ofproto - bundle close, different flags (OpenFlow 1.4) (ofproto.at:4578): ok     (0m0.000s 0m0.000s)
940. ofproto - bundle commit without open (OpenFlow 1.4) (ofproto.at:4610): ok     (0m0.000s 0m0.000s)
941. ofproto - bundle commit, different flags (OpenFlow 1.4) (ofproto.at:4635): ok     (0m0.000s 0m0.000s)
942. ofproto - bundle discard without open (OpenFlow 1.4) (ofproto.at:4667): ok     (0m0.000s 0m0.000s)
944. ofproto - failing bundle commit (OpenFlow 1.4) (ofproto.at:4896): ok     (0m0.000s 0m0.000s)
945. ofproto - bundle timeout (OpenFlow 1.4) (ofproto.at:4943): ok     (0m0.000s 0m0.000s)
943. ofproto - bundle with multiple flow mods (OpenFlow 1.4) (ofproto.at:4693): ok     (0m0.000s 0m0.004s)
947. ofproto - bundle double open (OpenFlow 1.3) (ofproto.at:5033): ok     (0m0.000s 0m0.000s)
946. ofproto - bundle open (OpenFlow 1.3) (ofproto.at:5006): ok     (0m0.000s 0m0.000s)
948. ofproto - bundle close without open (OpenFlow 1.3) (ofproto.at:5068): ok     (0m0.000s 0m0.000s)
950. ofproto - bundle close, different flags (OpenFlow 1.3) (ofproto.at:5131): ok     (0m0.000s 0m0.000s)
949. ofproto - bundle double close (OpenFlow 1.3) (ofproto.at:5092): ok     (0m0.000s 0m0.000s)
951. ofproto - bundle commit without open (OpenFlow 1.3) (ofproto.at:5163): ok     (0m0.000s 0m0.000s)
952. ofproto - bundle commit, different flags (OpenFlow 1.3) (ofproto.at:5188): ok     (0m0.000s 0m0.000s)
953. ofproto - bundle discard without open (OpenFlow 1.3) (ofproto.at:5220): ok     (0m0.000s 0m0.000s)
955. ofproto - failing bundle add message (OpenFlow 1.3) (ofproto.at:5442): ok     (0m0.000s 0m0.000s)
954. ofproto - bundle with multiple flow mods (OpenFlow 1.3) (ofproto.at:5246): ok     (0m0.000s 0m0.000s)
956. ofproto - failing bundle commit (OpenFlow 1.3) (ofproto.at:5489): ok     (0m0.000s 0m0.000s)
914. ofproto - asynchronous message control (OpenFlow 1.2) (ofproto.at:3059): ok     (0m0.000s 0m0.000s)
957. dpif-netdev - dummy interface (dpif-netdev.at:79): ok     (0m0.000s 0m0.000s)
902. ofproto - table features (OpenFlow 1.3) (ofproto.at:2182): ok     (0m0.100s 0m0.092s)
963. PMD - creating a thread/add-port (pmd.at:58): ok     (0m0.000s 0m0.000s)
958. dpif-netdev - dummy-pmd interface (dpif-netdev.at:80): ok     (0m0.000s 0m0.000s)
959. dpif-netdev - miss upcall key matches flow_install - dummy (dpif-netdev.at:118): ok     (0m0.000s 0m0.000s)
960. dpif-netdev - miss upcall key matches flow_install - dummy-pmd (dpif-netdev.at:119): ok     (0m0.000s 0m0.000s)
961. dpif-netdev - miss upcall key matches flow_dump - dummy (dpif-netdev.at:161): ok     (0m0.004s 0m0.000s)
962. dpif-netdev - miss upcall key matches flow_dump - dummy-pmd (dpif-netdev.at:162): ok     (0m0.000s 0m0.000s)
964. PMD - multiqueue support (pmd.at:80): ok     (0m0.000s 0m0.000s)
965. PMD - pmd-cpu-mask/distribution of rx queues (pmd.at:105): ok     (0m0.000s 0m0.000s)
968. PMD - same flow multiple threads (pmd.at:268): ok     (0m0.000s 0m0.000s)
971. PMD - add remove ports (pmd.at:423): ok     (0m0.000s 0m0.004s)
967. PMD - reconfigure n_rxq (pmd.at:212): ok     (0m0.000s 0m0.004s)
970. PMD - non pmd device (pmd.at:373): ok     (0m0.044s 0m0.016s)
973. dpctl - add-dp del-dp (dpctl.at:3): ok     (0m0.000s 0m0.000s)
969. PMD - change numa node (pmd.at:311): ok     (0m0.000s 0m0.000s)
966. PMD - stats (pmd.at:152): ok     (0m0.008s 0m0.004s)
974. dpctl - add-if set-if del-if (dpctl.at:19): ok     (0m0.000s 0m0.000s)
975. ofproto-dpif - revalidator/wait (ofproto-dpif.at:3): ok     (0m0.000s 0m0.000s)
980. ofproto-dpif - resubmit (ofproto-dpif.at:210): ok     (0m0.000s 0m0.000s)
979. ofproto-dpif - balance-tcp bonding, different recirc flow  (ofproto-dpif.at:152): ok     (0m0.000s 0m0.000s)
976. ofproto-dpif - active-backup bonding (ofproto-dpif.at:9): ok     (0m0.000s 0m0.000s)
972. PMD - rxq affinity (pmd.at:467): ok     (0m0.004s 0m0.004s)
982. ofproto-dpif - write actions (ofproto-dpif.at:243): ok     (0m0.000s 0m0.000s)
983. ofproto-dpif - modify IPv6 Neighbor Solitication (ND) (ofproto-dpif.at:260): ok     (0m0.000s 0m0.000s)
981. ofproto-dpif - goto table (ofproto-dpif.at:229): ok     (0m0.000s 0m0.008s)
984. ofproto-dpif - clear actions (ofproto-dpif.at:279): ok     (0m0.000s 0m0.000s)
977. ofproto-dpif - balance-slb bonding (ofproto-dpif.at:56): ok     (0m0.024s 0m0.028s)
985. ofproto-dpif - group chaining (ofproto-dpif.at:295): ok     (0m0.000s 0m0.000s)
986. ofproto-dpif - all group in action list (ofproto-dpif.at:308): ok     (0m0.000s 0m0.000s)
987. ofproto-dpif - indirect group in action list (ofproto-dpif.at:323): ok     (0m0.000s 0m0.000s)
988. ofproto-dpif - group actions have no effect afterwards (ofproto-dpif.at:335): ok     (0m0.000s 0m0.000s)
989. ofproto-dpif - all group in action set (ofproto-dpif.at:347): ok     (0m0.000s 0m0.000s)
990. ofproto-dpif - indirect group in action set (ofproto-dpif.at:362): ok     (0m0.000s 0m0.000s)
993. ofproto-dpif - select group with weight (ofproto-dpif.at:406): ok     (0m0.000s 0m0.000s)
992. ofproto-dpif - select group with watch port (ofproto-dpif.at:394): ok     (0m0.000s 0m0.000s)
991. ofproto-dpif - select group (ofproto-dpif.at:374): ok     (0m0.000s 0m0.000s)
995. ofproto-dpif - fast failover group (ofproto-dpif.at:465): ok     (0m0.000s 0m0.000s)
996. ofproto-dpif - group stats single bucket (ofproto-dpif.at:477): ok     (0m0.000s 0m0.000s)
998. ofproto-dpif - registers (ofproto-dpif.at:519): ok     (0m0.000s 0m0.000s)
999. ofproto-dpif - extended registers (ofproto-dpif.at:556): ok     (0m0.000s 0m0.000s)
997. ofproto-dpif - group stats all buckets (ofproto-dpif.at:498): ok     (0m0.000s 0m0.004s)
994. ofproto-dpif - select group with hash selection method (ofproto-dpif.at:418): ok     (0m0.000s 0m0.000s)
1000. ofproto-dpif - extended-extended registers (ofproto-dpif.at:577): ok     (0m0.000s 0m0.000s)
1001. ofproto-dpif - load and move order (ofproto-dpif.at:596): ok     (0m0.000s 0m0.000s)
1003. ofproto-dpif - masked set-field into metadata (ofproto-dpif.at:630): ok     (0m0.000s 0m0.000s)
1002. ofproto-dpif - copy-field into extended registers (ofproto-dpif.at:610): ok     (0m0.000s 0m0.000s)
1004. ofproto-dpif - actset_output (ofproto-dpif.at:652): ok     (0m0.000s 0m0.000s)
1005. ofproto-dpif - push-pop (ofproto-dpif.at:696): ok     (0m0.000s 0m0.000s)
1006. ofproto-dpif - output (ofproto-dpif.at:715): ok     (0m0.000s 0m0.000s)
1007. ofproto-dpif - dec_ttl (ofproto-dpif.at:736): ok     (0m0.000s 0m0.000s)
1011. ofproto-dpif - note action deep inside ofpacts (ofproto-dpif.at:828): ok     (0m0.000s 0m0.000s)
1012. ofproto-dpif - output, OFPP_NONE ingress port (ofproto-dpif.at:834): ok     (0m0.000s 0m0.000s)
1013. ofproto-dpif - DSCP (ofproto-dpif.at:852): ok     (0m0.000s 0m0.000s)
1014. ofproto-dpif - output/flood flags (ofproto-dpif.at:879): ok     (0m0.000s 0m0.000s)
1015. ofproto-dpif - Default Table Miss - OF1.0 (OFPTC_TABLE_MISS_CONTROLLER) (ofproto-dpif.at:937): ok     (0m0.000s 0m0.000s)
1016. ofproto-dpif - Default Table Miss - OF1.3 (OFPTC_TABLE_MISS_DROP) (ofproto-dpif.at:971): ok     (0m0.000s 0m0.000s)
1017. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:999): ok     (0m0.000s 0m0.000s)
1018. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:1035): ok     (0m0.000s 0m0.000s)
934. ofproto - ofport_request (ofproto.at:4403): ok     (0m0.000s 0m0.000s)
978. ofproto-dpif - balance-tcp bonding (ofproto-dpif.at:99): ok     (0m0.092s 0m0.060s)
1019. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1063): ok     (0m0.000s 0m0.000s)
1021. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1186): ok     (0m0.000s 0m0.000s)
1020. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1122): ok     (0m0.000s 0m0.000s)
1008. ofproto-dpif - dec_ttl without arguments at offset 32 in ofpacts (ofproto-dpif.at:780): ok     (0m0.016s 0m0.024s)
1009. ofproto-dpif - dec_ttl with arguments at offset 32 in ofpacts (ofproto-dpif.at:797): ok     (0m0.012s 0m0.024s)
1010. ofproto-dpif - note at offset 24 in ofpacts (ofproto-dpif.at:814): ok     (0m0.024s 0m0.012s)
1022. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1232): ok     (0m0.000s 0m0.000s)
1023. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1260): ok     (0m0.000s 0m0.000s)
1024. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1291): ok     (0m0.000s 0m0.000s)
1027. ofproto-dpif - MPLS handling with goto_table (ofproto-dpif.at:2642): ok     (0m0.000s 0m0.000s)
1028. ofproto-dpif - MPLS handling with write_actions (ofproto-dpif.at:2690): ok     (0m0.000s 0m0.000s)
1029. ofproto-dpif - table-miss flow (OpenFlow 1.0) (ofproto-dpif.at:2738): ok     (0m0.000s 0m0.000s)
1030. ofproto-dpif - table-miss flow (OpenFlow 1.3) (ofproto-dpif.at:2778): ok     (0m0.000s 0m0.000s)
1031. ofproto-dpif - table-miss flow with async config (OpenFlow 1.3) (ofproto-dpif.at:2819): ok     (0m0.000s 0m0.000s)
1032. ofproto-dpif - table-miss flow (OpenFlow 1.4) (ofproto-dpif.at:2893): ok     (0m0.000s 0m0.000s)
1025. ofproto-dpif - controller (ofproto-dpif.at:1322): ok     (0m0.000s 0m0.000s)
1033. ofproto-dpif - packet-in reasons (Openflow 1.3) (ofproto-dpif.at:2935): ok     (0m0.000s 0m0.000s)
1034. ofproto-dpif - packet-in reasons (Openflow 1.4) (ofproto-dpif.at:3003): ok     (0m0.000s 0m0.000s)
1035. ofproto-dpif - ARP modification slow-path (ofproto-dpif.at:3071): ok     (0m0.000s 0m0.000s)
1037. ofproto-dpif - MPLS handling (ofproto-dpif.at:3234): ok     (0m0.000s 0m0.000s)
1039. ofproto-dpif - fragment handling - trace (ofproto-dpif.at:3718): ok     (0m0.000s 0m0.000s)
1042. ofproto-dpif - exit (ofproto-dpif.at:3947): ok     (0m0.000s 0m0.000s)
1040. ofproto-dpif - fragment handling - upcall (ofproto-dpif.at:3767): ok     (0m0.000s 0m0.000s)
1038. ofproto-dpif - VLAN+MPLS handling (ofproto-dpif.at:3339): ok     (0m0.000s 0m0.000s)
1043. ofproto-dpif - mirroring, select_all (ofproto-dpif.at:3972): ok     (0m0.000s 0m0.000s)
1041. ofproto-dpif - fragment handling - actions (ofproto-dpif.at:3842): ok     (0m0.000s 0m0.000s)
1044. ofproto-dpif - mirroring, select_src (ofproto-dpif.at:4003): ok     (0m0.000s 0m0.000s)
1045. ofproto-dpif - mirroring, OFPP_NONE ingress port (ofproto-dpif.at:4032): ok     (0m0.000s 0m0.000s)
1046. ofproto-dpif - mirroring, select_dst (ofproto-dpif.at:4054): ok     (0m0.000s 0m0.000s)
1047. ofproto-dpif - mirroring, select_vlan (ofproto-dpif.at:4085): ok     (0m0.000s 0m0.000s)
1048. ofproto-dpif - mirroring, output_port (ofproto-dpif.at:4121): ok     (0m0.000s 0m0.000s)
1050. ofproto-dpif - multiple VLAN output mirrors (ofproto-dpif.at:4188): ok     (0m0.000s 0m0.000s)
1049. ofproto-dpif - mirroring, output_vlan (ofproto-dpif.at:4151): ok     (0m0.000s 0m0.000s)
1051. ofproto-dpif - mirroring with recirculation (ofproto-dpif.at:4217): ok     (0m0.000s 0m0.000s)
1052. ofproto-dpif - mirroring, select_all with snaplen (ofproto-dpif.at:4243): ok     (0m0.000s 0m0.000s)
1053. ofproto-dpif - mirroring, select_src with snaplen (ofproto-dpif.at:4273): ok     (0m0.000s 0m0.000s)
1054. ofproto-dpif - mirroring, OFPP_NONE ingress port with snaplen (ofproto-dpif.at:4302): ok     (0m0.000s 0m0.000s)
1055. ofproto-dpif - mirroring, select_dst with snaplen (ofproto-dpif.at:4323): ok     (0m0.000s 0m0.000s)
1056. ofproto-dpif - mirroring, select_vlan with snaplen (ofproto-dpif.at:4353): ok     (0m0.000s 0m0.000s)
1026. ofproto-dpif - MPLS handling (ofproto-dpif.at:1592): ok     (0m0.004s 0m0.000s)
1057. ofproto-dpif - mirroring, output_port with snaplen (ofproto-dpif.at:4388): ok     (0m0.000s 0m0.000s)
1058. ofproto-dpif - mirroring, output_vlan with snaplen (ofproto-dpif.at:4418): ok     (0m0.000s 0m0.000s)
1059. ofproto-dpif - multiple VLAN output mirrors with snaplen (ofproto-dpif.at:4446): ok     (0m0.000s 0m0.000s)
1060. ofproto-dpif - resubmit with recirculation (ofproto-dpif.at:4469): ok     (0m0.000s 0m0.000s)
1061. ofproto-dpif - recirculation after resubmit (ofproto-dpif.at:4494): ok     (0m0.000s 0m0.000s)
1065. ofproto-dpif - continuation - action set (ofproto-dpif.at:4643): ok     (0m0.000s 0m0.000s)
1036. ofproto-dpif - VLAN handling (ofproto-dpif.at:3100): ok     (0m0.000s 0m0.000s)
1062. ofproto-dpif - continuation - pause at end of pipeline (ofproto-dpif.at:4624): ok     (0m0.000s 0m0.000s)
1069. ofproto-dpif - ofproto/trace command 1 (ofproto-dpif.at:4694): ok     (0m0.000s 0m0.000s)
1070. ofproto-dpif - ofproto/trace command 2 (ofproto-dpif.at:4835): ok     (0m0.000s 0m0.000s)
1072. ofproto-dpif - ofproto/trace-packet-out (ofproto-dpif.at:4999): ok     (0m0.000s 0m0.000s)
1073. ofproto-dpif - MAC learning (ofproto-dpif.at:5029): ok     (0m0.000s 0m0.000s)
1071. ofproto-dpif - ofproto/trace from dpctl output (ofproto-dpif.at:4952): ok     (0m0.000s 0m0.000s)
1074. ofproto-dpif - MAC table overflow (ofproto-dpif.at:5118): ok     (0m0.000s 0m0.000s)
1076. ofproto-dpif - basic truncate action (ofproto-dpif.at:5567): ok     (0m0.000s 0m0.000s)
1067. ofproto-dpif - continuation - mirroring (ofproto-dpif.at:4667): ok     (0m0.000s 0m0.000s)
1075. ofproto-dpif - MAC table overflow fairness (ofproto-dpif.at:5178): ok     (0m0.000s 0m0.004s)
1068. ofproto-dpif - continuation - patch ports (ofproto-dpif.at:4678): ok     (0m0.000s 0m0.000s)
1077. ofproto-dpif - truncate and output to patch port (ofproto-dpif.at:5643): ok     (0m0.000s 0m0.000s)
1078. ofproto-dpif - truncate and output to gre tunnel (ofproto-dpif.at:5664): ok     (0m0.000s 0m0.000s)
1063. ofproto-dpif - continuation - actions (ofproto-dpif.at:4627): ok     (0m0.000s 0m0.000s)
1081. ofproto-dpif - sFlow packet sampling - LACP structures (ofproto-dpif.at:5701): ok     (0m0.000s 0m0.000s)
1066. ofproto-dpif - continuation - data stack (ofproto-dpif.at:4649): ok     (0m0.000s 0m0.000s)
1082. ofproto-dpif - sFlow packet sampling - tunnel set (ofproto-dpif.at:5758): ok     (0m0.004s 0m0.000s)
1083. ofproto-dpif - sFlow packet sampling - tunnel push (ofproto-dpif.at:5827): ok     (0m0.004s 0m0.000s)
1084. ofproto-dpif - sFlow packet sampling - MPLS (ofproto-dpif.at:5929): ok     (0m0.004s 0m0.000s)
1089. ofproto-dpif - Bridge IPFIX sanity check (ofproto-dpif.at:6161): ok     (0m0.000s 0m0.000s)
1064. ofproto-dpif - continuation - resubmit (ofproto-dpif.at:4635): ok     (0m0.012s 0m0.000s)
1090. ofproto-dpif - Bridge IPFIX statistics check (ofproto-dpif.at:6196): ok     (0m0.000s 0m0.000s)
1091. ofproto-dpif - Flow IPFIX sanity check (ofproto-dpif.at:6240): ok     (0m0.000s 0m0.000s)
1092. ofproto-dpif - Flow IPFIX sanity check - tunnel set (ofproto-dpif.at:6281): ok     (0m0.004s 0m0.000s)
1079. ofproto-dpif - sFlow packet sampling - IPv4 collector (ofproto-dpif.at:5691): ok     (0m0.000s 0m0.000s)
1087. ofproto-dpif - NetFlow active expiration - IPv4 collector (ofproto-dpif.at:6149): ok     (0m0.000s 0m0.000s)
1080. ofproto-dpif - sFlow packet sampling - IPv6 collector (ofproto-dpif.at:5695): ok     (0m0.000s 0m0.000s)
1094. ofproto-dpif - flow stats (ofproto-dpif.at:6404): ok     (0m0.000s 0m0.000s)
1093. ofproto-dpif - Flow IPFIX statistics check (ofproto-dpif.at:6354): ok     (0m0.000s 0m0.000s)
1088. ofproto-dpif - NetFlow active expiration - IPv6 collector (ofproto-dpif.at:6153): ok     (0m0.000s 0m0.000s)
1085. ofproto-dpif - NetFlow flow expiration - IPv4 collector (ofproto-dpif.at:6065): ok     (0m0.000s 0m0.000s)
1086. ofproto-dpif - NetFlow flow expiration - IPv6 collector (ofproto-dpif.at:6069): ok     (0m0.000s 0m0.000s)
1098. ofproto-dpif - ovs-appctl dpif/dump-dps (ofproto-dpif.at:6572): ok     (0m0.000s 0m0.000s)
1097. ofproto-dpif - fin_timeout (ofproto-dpif.at:6538): ok     (0m0.000s 0m0.000s)
1095. ofproto-dpif - flow stats, set-n-threads (ofproto-dpif.at:6425): ok     (0m0.000s 0m0.000s)
1101. ofproto-dpif - ovs-appctl dpif/get-flow (ofproto-dpif.at:6661): ok     (0m0.000s 0m0.000s)
1099. ofproto-dpif - ovs-appctl dpif/show (ofproto-dpif.at:6584): ok     (0m0.000s 0m0.000s)
1096. ofproto-dpif - idle_age and hard_age increase over time (ofproto-dpif.at:6448): ok     (0m0.000s 0m0.000s)
1106. ofproto-dpif - patch ports - stack (ofproto-dpif.at:6813): ok     (0m0.000s 0m0.000s)
1107. ofproto-dpif - port duration (ofproto-dpif.at:6862): ok     (0m0.000s 0m0.000s)
1103. ofproto-dpif - MPLS actions that result in a userspace action (ofproto-dpif.at:6664): ok     (0m0.000s 0m0.000s)
1104. ofproto-dpif - MPLS actions that result in a drop (ofproto-dpif.at:6700): ok     (0m0.000s 0m0.000s)
1100. ofproto-dpif - ovs-appctl dpif/dump-flows (ofproto-dpif.at:6603): ok     (0m0.000s 0m0.000s)
1102. ofproto-dpif - ovs-appctl dpif/get-flow - pmd (ofproto-dpif.at:6662): ok     (0m0.000s 0m0.000s)
1109. ofproto-dpif megaflow - L2 classification (ofproto-dpif.at:6900): ok     (0m0.000s 0m0.004s)
1110. ofproto-dpif megaflow - L3 classification (ofproto-dpif.at:6918): ok     (0m0.000s 0m0.000s)
1111. ofproto-dpif megaflow - IPv6 classification (ofproto-dpif.at:6937): ok     (0m0.000s 0m0.000s)
1113. ofproto-dpif megaflow - normal (ofproto-dpif.at:6991): ok     (0m0.000s 0m0.000s)
1114. ofproto-dpif megaflow - normal - pmd (ofproto-dpif.at:6992): ok     (0m0.000s 0m0.000s)
1108. ofproto-dpif megaflow - port classification (ofproto-dpif.at:6882): ok     (0m0.000s 0m0.000s)
1105. ofproto-dpif - patch ports (ofproto-dpif.at:6738): ok     (0m0.000s 0m0.000s)
1112. ofproto-dpif megaflow - L4 classification (ofproto-dpif.at:6956): ok     (0m0.000s 0m0.000s)
1115. ofproto-dpif megaflow - mpls (ofproto-dpif.at:6994): ok     (0m0.000s 0m0.000s)
1116. ofproto-dpif megaflow - netflow - IPv4 collector (ofproto-dpif.at:7040): ok     (0m0.000s 0m0.000s)
1117. ofproto-dpif megaflow - netflow - IPv6 collector (ofproto-dpif.at:7044): ok     (0m0.000s 0m0.000s)
1118. ofproto-dpif megaflow - normal, active-backup bonding - dummy (ofproto-dpif.at:7072): ok     (0m0.000s 0m0.000s)
1119. ofproto-dpif megaflow - normal, active-backup bonding - dummy-pmd (ofproto-dpif.at:7073): ok     (0m0.000s 0m0.000s)
1120. ofproto-dpif megaflow - normal, balance-slb bonding (ofproto-dpif.at:7075): ok     (0m0.000s 0m0.000s)
1121. ofproto-dpif megaflow - normal, balance-tcp bonding (ofproto-dpif.at:7096): ok     (0m0.000s 0m0.000s)
1122. ofproto-dpif megaflow - resubmit port action (ofproto-dpif.at:7134): ok     (0m0.000s 0m0.000s)
1123. ofproto-dpif megaflow - resubmit table action (ofproto-dpif.at:7153): ok     (0m0.000s 0m0.000s)
1124. ofproto-dpif megaflow - goto_table action (ofproto-dpif.at:7173): ok     (0m0.000s 0m0.000s)
1126. ofproto-dpif megaflow - mirroring, select_vlan (ofproto-dpif.at:7216): ok     (0m0.000s 0m0.000s)
1127. ofproto-dpif megaflow - move action (ofproto-dpif.at:7239): ok     (0m0.000s 0m0.000s)
1128. ofproto-dpif megaflow - push action (ofproto-dpif.at:7259): ok     (0m0.000s 0m0.000s)
1129. ofproto-dpif megaflow - learning (ofproto-dpif.at:7277): ok     (0m0.000s 0m0.000s)
1135. ofproto-dpif - datapath port number change (ofproto-dpif.at:7415): ok     (0m0.000s 0m0.000s)
1131. ofproto-dpif megaflow - dec_ttl (ofproto-dpif.at:7337): ok     (0m0.000s 0m0.000s)
1125. ofproto-dpif megaflow - mirroring, select_all (ofproto-dpif.at:7192): ok     (0m0.000s 0m0.000s)
1132. ofproto-dpif megaflow - set dl_dst (ofproto-dpif.at:7356): ok     (0m0.000s 0m0.000s)
1137. ofproto-dpif - ofproto-dpif-monitor 1 (ofproto-dpif.at:7515): ok     (0m0.000s 0m0.000s)
1141. ofproto-dpif - infinite resubmit (ofproto-dpif.at:7614): ok     (0m0.000s 0m0.000s)
1140. ofproto-dpif - backward resubmit (ofproto-dpif.at:7594): ok     (0m0.000s 0m0.016s)
1133. ofproto-dpif megaflow - disabled (ofproto-dpif.at:7412): ok     (0m0.004s 0m0.000s)
1130. ofproto-dpif megaflow - tunnels (ofproto-dpif.at:7304): ok     (0m0.000s 0m0.000s)
1136. ofproto - bundle with variable bfd/cfm config (ofproto-dpif.at:7437): ok     (0m0.000s 0m0.000s)
1134. ofproto-dpif megaflow - disabled - pmd (ofproto-dpif.at:7413): ok     (0m0.000s 0m0.004s)
1139. ofproto-dpif - forward resubmit (ofproto-dpif.at:7577): ok     (0m0.004s 0m0.024s)
1144. ofproto-dpif - stack too deep (ofproto-dpif.at:7664): ok     (0m0.000s 0m0.004s)
1149. ofproto-dpif - ICMPv6 (ofproto-dpif.at:7890): ok     (0m0.000s 0m0.000s)
1150. ofproto-dpif - ICMPv6 type match (ofproto-dpif.at:7910): ok     (0m0.000s 0m0.000s)
1145. ofproto-dpif packet-out controller (ofproto-dpif.at:7684): ok     (0m0.020s 0m0.016s)
1151. ofproto-dpif - Neighbor Discovery set-field with checksum update (ofproto-dpif.at:7940): ok     (0m0.000s 0m0.000s)
1147. ofproto-dpif packet-out goto_table (ofproto-dpif.at:7785): ok     (0m0.008s 0m0.028s)
1148. ofproto-dpif packet-out table-miss (continue) (ofproto-dpif.at:7839): ok     (0m0.012s 0m0.020s)
1152. ofproto-dpif - vlan matching (ofproto-dpif.at:7962): ok     (0m0.000s 0m0.000s)
1155. ofproto-dpif - trace (unchanged) (ofproto-dpif.at:8106): ok     (0m0.000s 0m0.000s)
1153. ofproto-dpif - in place modification (ofproto-dpif.at:7980): ok     (0m0.000s 0m0.000s)
1154. ofproto-dpif - in place modification (vlan) (ofproto-dpif.at:8025): ok     (0m0.000s 0m0.000s)
1157. ofproto-dpif - conntrack - ipv6 (ofproto-dpif.at:8193): ok     (0m0.000s 0m0.000s)
1156. ofproto-dpif - conntrack - controller (ofproto-dpif.at:8118): ok     (0m0.000s 0m0.000s)
1158. ofproto-dpif - conntrack - output action (ofproto-dpif.at:8243): ok     (0m0.000s 0m0.000s)
1159. ofproto-dpif - conntrack - expiration (ofproto-dpif.at:8302): ok     (0m0.000s 0m0.000s)
1160. ofproto-dpif - conntrack - untrackable traffic (ofproto-dpif.at:8356): ok     (0m0.000s 0m0.000s)
1161. ofproto-dpif - conntrack - zones (ofproto-dpif.at:8388): ok     (0m0.000s 0m0.000s)
1162. ofproto-dpif - conntrack - recirc,commit (ofproto-dpif.at:8453): ok     (0m0.000s 0m0.000s)
1146. ofproto-dpif packet-out controller (patch port) (ofproto-dpif.at:7729): ok     (0m0.024s 0m0.040s)
1163. ofproto-dpif - conntrack - ICMP related (ofproto-dpif.at:8503): ok     (0m0.000s 0m0.000s)
1166. ofproto-dpif - conntrack - ct_label datapath flow (ofproto-dpif.at:8662): ok     (0m0.000s 0m0.000s)
1165. ofproto-dpif - conntrack - ct_label (ofproto-dpif.at:8614): ok     (0m0.000s 0m0.000s)
1164. ofproto-dpif - conntrack - ct_mark (ofproto-dpif.at:8553): ok     (0m0.000s 0m0.000s)
1167. ofproto-dpif - conntrack - no output (ofproto-dpif.at:8707): ok     (0m0.000s 0m0.000s)
1168. ofproto-dpif - conntrack - tcp port reuse (ofproto-dpif.at:8731): ok     (0m0.000s 0m0.000s)
1169. ofproto-dpif - conntrack - tcp pick up (ofproto-dpif.at:8795): ok     (0m0.000s 0m0.000s)
1172. bridge - ports that disappear get added back (bridge.at:7): ok     (0m0.000s 0m0.000s)
1171. ofproto - fragment prerequisites (ofproto-dpif.at:8930): ok     (0m0.000s 0m0.000s)
1170. ofproto - set mtu (ofproto-dpif.at:8880): ok     (0m0.000s 0m0.000s)
1173. bridge - set MAC address of internal port (netdev-type.at:4): ok     (0m0.000s 0m0.000s)
1174. create empty, reread (ovsdb-log.at:3): ok     (0m0.000s 0m0.000s)
1175. write one, reread (ovsdb-log.at:18): ok     (0m0.000s 0m0.000s)
1176. check that create fails if file exists (ovsdb-log.at:35): ok     (0m0.000s 0m0.000s)
1177. write one, reread (ovsdb-log.at:55): ok     (0m0.000s 0m0.000s)
1178. write one, reread, append (ovsdb-log.at:76): ok     (0m0.000s 0m0.000s)
1179. write, reread one, overwrite (ovsdb-log.at:106): ok     (0m0.000s 0m0.000s)
1180. write, add corrupted data, read (ovsdb-log.at:132): ok     (0m0.000s 0m0.000s)
1181. write, add corrupted data, read, overwrite (ovsdb-log.at:154): ok     (0m0.000s 0m0.000s)
1182. write, corrupt some data, read, overwrite (ovsdb-log.at:186): ok     (0m0.000s 0m0.000s)
1185. integer - C (ovsdb-types.at:3): ok     (0m0.000s 0m0.000s)
1183. write, truncate file, read, overwrite (ovsdb-log.at:219): ok     (0m0.000s 0m0.000s)
1184. write bad JSON, read, overwrite (ovsdb-log.at:252): ok     (0m0.000s 0m0.000s)
1188. real - C (ovsdb-types.at:5): ok     (0m0.000s 0m0.000s)
1191. boolean - C (ovsdb-types.at:7): ok     (0m0.000s 0m0.000s)
1186. integer - Python2 (ovsdb-types.at:3): ok     (0m0.084s 0m0.016s)
1189. real - Python2 (ovsdb-types.at:5): ok     (0m0.092s 0m0.004s)
1138. ofproto-dpif - ofproto-dpif-monitor 2 (ofproto-dpif.at:7562): ok     (0m0.820s 0m0.052s)
1187. integer - Python3 (ovsdb-types.at:3): ok     (0m0.128s 0m0.012s)
1194. string - C (ovsdb-types.at:9): ok     (0m0.000s 0m0.000s)
1190. real - Python3 (ovsdb-types.at:5): ok     (0m0.124s 0m0.008s)
1192. boolean - Python2 (ovsdb-types.at:7): ok     (0m0.084s 0m0.012s)
1197. uuid - C (ovsdb-types.at:11): ok     (0m0.000s 0m0.000s)
1200. void is not a valid atomic-type - C (ovsdb-types.at:13): ok     (0m0.000s 0m0.000s)
1193. boolean - Python3 (ovsdb-types.at:7): ok     (0m0.132s 0m0.012s)
1195. string - Python2 (ovsdb-types.at:9): ok     (0m0.080s 0m0.028s)
1198. uuid - Python2 (ovsdb-types.at:11): ok     (0m0.096s 0m0.016s)
1202. integer enum - C (ovsdb-types.at:18): ok     (0m0.000s 0m0.000s)
1196. string - Python3 (ovsdb-types.at:9): ok     (0m0.136s 0m0.012s)
1205. integer >= 5 - C (ovsdb-types.at:21): ok     (0m0.000s 0m0.000s)
1199. uuid - Python3 (ovsdb-types.at:11): ok     (0m0.148s 0m0.012s)
1208. integer <= 7 - C (ovsdb-types.at:24): ok     (0m0.000s 0m0.000s)
1201. void is not a valid atomic-type - Python2 (ovsdb-types.at:13): ok     (0m0.132s 0m0.020s)
1203. integer enum - Python2 (ovsdb-types.at:18): ok     (0m0.092s 0m0.016s)
1206. integer >= 5 - Python2 (ovsdb-types.at:21): ok     (0m0.096s 0m0.008s)
1211. integer between -5 and 10 - C (ovsdb-types.at:27): ok     (0m0.000s 0m0.000s)
1204. integer enum - Python3 (ovsdb-types.at:18): ok     (0m0.136s 0m0.008s)
1214. integer max may not be less than min - C (ovsdb-types.at:30): ok     (0m0.000s 0m0.000s)
1207. integer >= 5 - Python3 (ovsdb-types.at:21): ok     (0m0.140s 0m0.004s)
1209. integer <= 7 - Python2 (ovsdb-types.at:24): ok     (0m0.088s 0m0.012s)
1216. real enum - C (ovsdb-types.at:34): ok     (0m0.000s 0m0.000s)
1210. integer <= 7 - Python3 (ovsdb-types.at:24): ok     (0m0.128s 0m0.012s)
1212. integer between -5 and 10 - Python2 (ovsdb-types.at:27): ok     (0m0.072s 0m0.028s)
1219. real >= -1.5 - C (ovsdb-types.at:37): ok     (0m0.000s 0m0.000s)
1213. integer between -5 and 10 - Python3 (ovsdb-types.at:27): ok     (0m0.120s 0m0.024s)
1222. real <= 1e5 - C (ovsdb-types.at:40): ok     (0m0.000s 0m0.000s)
1217. real enum - Python2 (ovsdb-types.at:34): ok     (0m0.096s 0m0.004s)
1215. integer max may not be less than min - Python2 (ovsdb-types.at:30): ok     (0m0.132s 0m0.008s)
1225. real between -2.5 and 3.75 - C (ovsdb-types.at:43): ok     (0m0.000s 0m0.000s)
1220. real >= -1.5 - Python2 (ovsdb-types.at:37): ok     (0m0.104s 0m0.000s)
1218. real enum - Python3 (ovsdb-types.at:34): ok     (0m0.132s 0m0.012s)
1228. real max may not be less than min - C (ovsdb-types.at:46): ok     (0m0.000s 0m0.000s)
1221. real >= -1.5 - Python3 (ovsdb-types.at:37): ok     (0m0.136s 0m0.004s)
1223. real <= 1e5 - Python2 (ovsdb-types.at:40): ok     (0m0.072s 0m0.024s)
1224. real <= 1e5 - Python3 (ovsdb-types.at:40): ok     (0m0.128s 0m0.004s)
1230. boolean - C (ovsdb-types.at:50): ok     (0m0.000s 0m0.000s)
1226. real between -2.5 and 3.75 - Python2 (ovsdb-types.at:43): ok     (0m0.080s 0m0.012s)
1233. boolean enum - C (ovsdb-types.at:52): ok     (0m0.000s 0m0.000s)
1227. real between -2.5 and 3.75 - Python3 (ovsdb-types.at:43): ok     (0m0.124s 0m0.004s)
1236. string enum - C (ovsdb-types.at:56): ok     (0m0.000s 0m0.000s)
1143. ofproto-dpif - too many output actions (ofproto-dpif.at:7646): ok     (0m0.740s 0m0.160s)
1229. real max may not be less than min - Python2 (ovsdb-types.at:46): ok     (0m0.120s 0m0.008s)
1231. boolean - Python2 (ovsdb-types.at:50): ok     (0m0.072s 0m0.016s)
1234. boolean enum - Python2 (ovsdb-types.at:52): ok     (0m0.076s 0m0.012s)
1239. string minLength - C (ovsdb-types.at:59): ok     (0m0.000s 0m0.000s)
1232. boolean - Python3 (ovsdb-types.at:50): ok     (0m0.120s 0m0.012s)
1242. string maxLength - C (ovsdb-types.at:62): ok     (0m0.000s 0m0.000s)
1235. boolean enum - Python3 (ovsdb-types.at:52): ok     (0m0.132s 0m0.000s)
1237. string enum - Python2 (ovsdb-types.at:56): ok     (0m0.084s 0m0.008s)
1240. string minLength - Python2 (ovsdb-types.at:59): ok     (0m0.076s 0m0.016s)
1245. string minLength and maxLength - C (ovsdb-types.at:65): ok     (0m0.000s 0m0.000s)
1238. string enum - Python3 (ovsdb-types.at:56): ok     (0m0.116s 0m0.016s)
1248. maxLength must not be less than minLength - C (ovsdb-types.at:68): ok     (0m0.000s 0m0.000s)
1241. string minLength - Python3 (ovsdb-types.at:59): ok     (0m0.128s 0m0.004s)
1243. string maxLength - Python2 (ovsdb-types.at:62): ok     (0m0.088s 0m0.004s)
1250. maxLength must not be negative - C (ovsdb-types.at:71): ok     (0m0.000s 0m0.000s)
1252. uuid enum - C (ovsdb-types.at:75): ok     (0m0.000s 0m0.000s)
1244. string maxLength - Python3 (ovsdb-types.at:62): ok     (0m0.116s 0m0.016s)
1246. string minLength and maxLength - Python2 (ovsdb-types.at:65): ok     (0m0.088s 0m0.004s)
1255. uuid refTable - C (ovsdb-types.at:78): ok     (0m0.000s 0m0.000s)
1247. string minLength and maxLength - Python3 (ovsdb-types.at:65): ok     (0m0.120s 0m0.012s)
1249. maxLength must not be less than minLength - Python2 (ovsdb-types.at:68): ok     (0m0.128s 0m0.008s)
1253. uuid enum - Python2 (ovsdb-types.at:75): ok     (0m0.084s 0m0.008s)
1258. uuid refTable must be valid id - C (ovsdb-types.at:81): ok     (0m0.000s 0m0.000s)
1251. maxLength must not be negative - Python2 (ovsdb-types.at:71): ok     (0m0.116s 0m0.016s)
1260. void is not a valid base-type - C (ovsdb-types.at:85): ok     (0m0.000s 0m0.000s)
1256. uuid refTable - Python2 (ovsdb-types.at:78): ok     (0m0.092s 0m0.004s)
1142. ofproto-dpif - exponential resubmit chain (ofproto-dpif.at:7628): ok     (0m0.932s 0m0.172s)
1262. "type" member must be present - C (ovsdb-types.at:87): ok     (0m0.000s 0m0.000s)
1254. uuid enum - Python3 (ovsdb-types.at:75): ok     (0m0.132s 0m0.004s)
1264. simple integer - C (ovsdb-types.at:92): ok     (0m0.000s 0m0.000s)
1267. simple real - C (ovsdb-types.at:94): ok     (0m0.000s 0m0.000s)
1257. uuid refTable - Python3 (ovsdb-types.at:78): ok     (0m0.112s 0m0.020s)
1270. simple boolean - C (ovsdb-types.at:96): ok     (0m0.000s 0m0.000s)
1261. void is not a valid base-type - Python2 (ovsdb-types.at:85): ok     (0m0.124s 0m0.008s)
1259. uuid refTable must be valid id - Python2 (ovsdb-types.at:81): ok     (0m0.124s 0m0.008s)
1265. simple integer - Python2 (ovsdb-types.at:92): ok     (0m0.076s 0m0.016s)
1268. simple real - Python2 (ovsdb-types.at:94): ok     (0m0.092s 0m0.000s)
1263. "type" member must be present - Python2 (ovsdb-types.at:87): ok     (0m0.132s 0m0.000s)
1273. simple string - C (ovsdb-types.at:98): ok     (0m0.000s 0m0.000s)
1266. simple integer - Python3 (ovsdb-types.at:92): ok     (0m0.116s 0m0.016s)
1276. simple uuid - C (ovsdb-types.at:100): ok     (0m0.000s 0m0.000s)
1269. simple real - Python3 (ovsdb-types.at:94): ok     (0m0.124s 0m0.008s)
1271. simple boolean - Python2 (ovsdb-types.at:96): ok     (0m0.092s 0m0.000s)
1279. integer in object - C (ovsdb-types.at:102): ok     (0m0.000s 0m0.000s)
1274. simple string - Python2 (ovsdb-types.at:98): ok     (0m0.076s 0m0.016s)
1282. real in object with explicit min and max - C (ovsdb-types.at:104): ok     (0m0.000s 0m0.000s)
1277. simple uuid - Python2 (ovsdb-types.at:100): ok     (0m0.088s 0m0.004s)
1272. simple boolean - Python3 (ovsdb-types.at:96): ok     (0m0.116s 0m0.016s)
1275. simple string - Python3 (ovsdb-types.at:98): ok     (0m0.124s 0m0.008s)
1285. key type is required - C (ovsdb-types.at:107): ok     (0m0.000s 0m0.000s)
1280. integer in object - Python2 (ovsdb-types.at:102): ok     (0m0.088s 0m0.004s)
1278. simple uuid - Python3 (ovsdb-types.at:100): ok     (0m0.128s 0m0.000s)
1287. void is not a valid type - C (ovsdb-types.at:109): ok     (0m0.000s 0m0.000s)
1289. optional boolean - C (ovsdb-types.at:114): ok     (0m0.000s 0m0.000s)
1281. integer in object - Python3 (ovsdb-types.at:102): ok     (0m0.132s 0m0.000s)
1283. real in object with explicit min and max - Python2 (ovsdb-types.at:104): ok     (0m0.092s 0m0.000s)
1292. set of 1 to 3 uuids - C (ovsdb-types.at:118): ok     (0m0.000s 0m0.000s)
1284. real in object with explicit min and max - Python3 (ovsdb-types.at:104): ok     (0m0.120s 0m0.008s)
1295. set of 0 to 3 strings - C (ovsdb-types.at:121): ok     (0m0.000s 0m0.000s)
1286. key type is required - Python2 (ovsdb-types.at:107): ok     (0m0.132s 0m0.000s)
1290. optional boolean - Python2 (ovsdb-types.at:114): ok     (0m0.088s 0m0.004s)
1298. set of 0 or more integers - C (ovsdb-types.at:124): ok     (0m0.000s 0m0.000s)
1288. void is not a valid type - Python2 (ovsdb-types.at:109): ok     (0m0.108s 0m0.020s)
1293. set of 1 to 3 uuids - Python2 (ovsdb-types.at:118): ok     (0m0.080s 0m0.012s)
1291. optional boolean - Python3 (ovsdb-types.at:114): ok     (0m0.124s 0m0.008s)
1301. set of 1 or more reals - C (ovsdb-types.at:127): ok     (0m0.000s 0m0.000s)
1296. set of 0 to 3 strings - Python2 (ovsdb-types.at:121): ok     (0m0.088s 0m0.004s)
1294. set of 1 to 3 uuids - Python3 (ovsdb-types.at:118): ok     (0m0.132s 0m0.000s)
1304. set max cannot be less than min - C (ovsdb-types.at:131): ok     (0m0.000s 0m0.000s)
1306. set max cannot be negative - C (ovsdb-types.at:134): ok     (0m0.000s 0m0.000s)
1299. set of 0 or more integers - Python2 (ovsdb-types.at:124): ok     (0m0.076s 0m0.016s)
1297. set of 0 to 3 strings - Python3 (ovsdb-types.at:121): ok     (0m0.116s 0m0.016s)
1308. set min cannot be negative - C (ovsdb-types.at:137): ok     (0m0.000s 0m0.000s)
1302. set of 1 or more reals - Python2 (ovsdb-types.at:127): ok     (0m0.080s 0m0.012s)
1310. set min cannot be greater than one - C (ovsdb-types.at:140): ok     (0m0.000s 0m0.000s)
1300. set of 0 or more integers - Python3 (ovsdb-types.at:124): ok     (0m0.128s 0m0.004s)
1312. map of 1 integer to boolean - C (ovsdb-types.at:146): ok     (0m0.000s 0m0.000s)
1303. set of 1 or more reals - Python3 (ovsdb-types.at:127): ok     (0m0.116s 0m0.012s)
1315. map of 1 boolean to integer, explicit min and max - C (ovsdb-types.at:149): ok     (0m0.000s 0m0.000s)
1305. set max cannot be less than min - Python2 (ovsdb-types.at:131): ok     (0m0.120s 0m0.012s)
1307. set max cannot be negative - Python2 (ovsdb-types.at:134): ok     (0m0.128s 0m0.004s)
1318. map of 1 to 5 uuid to real - C (ovsdb-types.at:152): ok     (0m0.000s 0m0.000s)
1309. set min cannot be negative - Python2 (ovsdb-types.at:137): ok     (0m0.116s 0m0.012s)
1313. map of 1 integer to boolean - Python2 (ovsdb-types.at:146): ok     (0m0.088s 0m0.004s)
1321. map of 0 to 10 string to uuid - C (ovsdb-types.at:155): ok     (0m0.000s 0m0.000s)
1311. set min cannot be greater than one - Python2 (ovsdb-types.at:140): ok     (0m0.124s 0m0.004s)
1316. map of 1 boolean to integer, explicit min and max - Python2 (ovsdb-types.at:149): ok     (0m0.088s 0m0.004s)
1314. map of 1 integer to boolean - Python3 (ovsdb-types.at:146): ok     (0m0.128s 0m0.000s)
1324. map of 1 to 20 real to string - C (ovsdb-types.at:158): ok     (0m0.000s 0m0.000s)
1317. map of 1 boolean to integer, explicit min and max - Python3 (ovsdb-types.at:149): ok     (0m0.124s 0m0.004s)
1327. map of 0 or more string to real - C (ovsdb-types.at:161): ok     (0m0.000s 0m0.000s)
1319. map of 1 to 5 uuid to real - Python2 (ovsdb-types.at:152): ok     (0m0.080s 0m0.012s)
1322. map of 0 to 10 string to uuid - Python2 (ovsdb-types.at:155): ok     (0m0.080s 0m0.012s)
1330. map key type is required - C (ovsdb-types.at:165): ok     (0m0.000s 0m0.000s)
1320. map of 1 to 5 uuid to real - Python3 (ovsdb-types.at:152): ok     (0m0.128s 0m0.004s)
1325. map of 1 to 20 real to string - Python2 (ovsdb-types.at:158): ok     (0m0.072s 0m0.020s)
1332. default atoms - C (ovsdb-data.at:3): ok     (0m0.000s 0m0.000s)
1323. map of 0 to 10 string to uuid - Python3 (ovsdb-types.at:155): ok     (0m0.120s 0m0.008s)
1335. default data - C (ovsdb-data.at:11): ok     (0m0.000s 0m0.000s)
1326. map of 1 to 20 real to string - Python3 (ovsdb-types.at:158): ok     (0m0.108s 0m0.024s)
1328. map of 0 or more string to real - Python2 (ovsdb-types.at:161): ok     (0m0.080s 0m0.012s)
1338. integer atom from JSON - C (ovsdb-data.at:76): ok     (0m0.000s 0m0.000s)
1329. map of 0 or more string to real - Python3 (ovsdb-types.at:161): ok     (0m0.120s 0m0.012s)
1333. default atoms - Python2 (ovsdb-data.at:3): ok     (0m0.084s 0m0.004s)
1341. integer atom from string (ovsdb-data.at:89): ok     (0m0.000s 0m0.000s)
1331. map key type is required - Python2 (ovsdb-types.at:165): ok     (0m0.124s 0m0.008s)
1342. real atom from JSON - C (ovsdb-data.at:102): ok     (0m0.000s 0m0.000s)
1336. default data - Python2 (ovsdb-data.at:11): ok     (0m0.076s 0m0.016s)
1334. default atoms - Python3 (ovsdb-data.at:3): ok     (0m0.120s 0m0.008s)
1345. real atom from string (ovsdb-data.at:119): ok     (0m0.000s 0m0.000s)
1339. integer atom from JSON - Python2 (ovsdb-data.at:76): ok     (0m0.080s 0m0.012s)
1346. boolean atom from JSON - C (ovsdb-data.at:136): ok     (0m0.000s 0m0.000s)
1337. default data - Python3 (ovsdb-data.at:11): ok     (0m0.132s 0m0.000s)
1349. boolean atom from string (ovsdb-data.at:141): ok     (0m0.000s 0m0.000s)
1350. string atom from JSON - C (ovsdb-data.at:146): ok     (0m0.000s 0m0.000s)
1340. integer atom from JSON - Python3 (ovsdb-data.at:76): ok     (0m0.112s 0m0.020s)
1353. string atom from string (ovsdb-data.at:152): ok     (0m0.000s 0m0.000s)
1343. real atom from JSON - Python2 (ovsdb-data.at:102): ok     (0m0.092s 0m0.000s)
1354. uuid atom from JSON - C (ovsdb-data.at:167): ok     (0m0.000s 0m0.000s)
1347. boolean atom from JSON - Python2 (ovsdb-data.at:136): ok     (0m0.088s 0m0.004s)
1344. real atom from JSON - Python3 (ovsdb-data.at:102): ok     (0m0.124s 0m0.008s)
1357. uuid atom from string (ovsdb-data.at:171): ok     (0m0.000s 0m0.000s)
1358. integer atom sorting - C (ovsdb-data.at:175): ok     (0m0.000s 0m0.000s)
1351. string atom from JSON - Python2 (ovsdb-data.at:146): ok     (0m0.076s 0m0.016s)
1348. boolean atom from JSON - Python3 (ovsdb-data.at:136): ok     (0m0.132s 0m0.000s)
1361. real atom sorting - C (ovsdb-data.at:179): ok     (0m0.000s 0m0.000s)
1352. string atom from JSON - Python3 (ovsdb-data.at:146): ok     (0m0.116s 0m0.016s)
1355. uuid atom from JSON - Python2 (ovsdb-data.at:167): ok     (0m0.080s 0m0.008s)
1364. boolean atom sorting - C (ovsdb-data.at:183): ok     (0m0.000s 0m0.000s)
1359. integer atom sorting - Python2 (ovsdb-data.at:175): ok     (0m0.080s 0m0.012s)
1356. uuid atom from JSON - Python3 (ovsdb-data.at:167): ok     (0m0.120s 0m0.008s)
1367. string atom sorting - C (ovsdb-data.at:187): ok     (0m0.000s 0m0.000s)
1362. real atom sorting - Python2 (ovsdb-data.at:179): ok     (0m0.084s 0m0.004s)
1370. uuid atom sorting - C (ovsdb-data.at:191): ok     (0m0.000s 0m0.000s)
1360. integer atom sorting - Python3 (ovsdb-data.at:175): ok     (0m0.112s 0m0.016s)
1365. boolean atom sorting - Python2 (ovsdb-data.at:183): ok     (0m0.080s 0m0.008s)
1363. real atom sorting - Python3 (ovsdb-data.at:179): ok     (0m0.128s 0m0.000s)
1373. real not acceptable integer JSON atom - C (ovsdb-data.at:228): ok     (0m0.000s 0m0.000s)
1366. boolean atom sorting - Python3 (ovsdb-data.at:183): ok     (0m0.116s 0m0.012s)
1376. no invalid UTF-8 sequences in strings (ovsdb-data.at:234): ok     (0m0.000s 0m0.000s)
1368. string atom sorting - Python2 (ovsdb-data.at:187): ok     (0m0.084s 0m0.004s)
1378. real not acceptable integer string atom (ovsdb-data.at:257): ok     (0m0.000s 0m0.000s)
1379. string "true" not acceptable boolean JSON atom - C (ovsdb-data.at:261): ok     (0m0.000s 0m0.000s)
1369. string atom sorting - Python3 (ovsdb-data.at:187): ok     (0m0.116s 0m0.012s)
1371. uuid atom sorting - Python2 (ovsdb-data.at:191): ok     (0m0.076s 0m0.016s)
1383. integer not acceptable string JSON atom - C (ovsdb-data.at:269): ok     (0m0.000s 0m0.000s)
1382. string "true" not acceptable boolean string atom (ovsdb-data.at:265): ok     (0m0.000s 0m0.000s)
1374. real not acceptable integer JSON atom - Python2 (ovsdb-data.at:228): ok     (0m0.080s 0m0.008s)
1372. uuid atom sorting - Python3 (ovsdb-data.at:191): ok     (0m0.124s 0m0.008s)
1386. uuid atom must be expressed as JSON array - C (ovsdb-data.at:273): ok     (0m0.000s 0m0.000s)
1377. no invalid UTF-8 sequences in strings - Python (ovsdb-data.at:249): ok     (0m0.084s 0m0.004s)
1375. real not acceptable integer JSON atom - Python3 (ovsdb-data.at:228): ok     (0m0.116s 0m0.012s)
1389. named-uuid requires symbol table - C (ovsdb-data.at:277): ok     (0m0.000s 0m0.000s)
1380. string "true" not acceptable boolean JSON atom - Python2 (ovsdb-data.at:261): ok     (0m0.084s 0m0.004s)
1392. empty string atom must be quoted (ovsdb-data.at:281): ok     (0m0.000s 0m0.000s)
1384. integer not acceptable string JSON atom - Python2 (ovsdb-data.at:269): ok     (0m0.080s 0m0.008s)
1381. string "true" not acceptable boolean JSON atom - Python3 (ovsdb-data.at:261): ok     (0m0.120s 0m0.008s)
1387. uuid atom must be expressed as JSON array - Python2 (ovsdb-data.at:273): ok     (0m0.080s 0m0.012s)
1393. quotes must be balanced (ovsdb-data.at:285): ok     (0m0.000s 0m0.000s)
1394. quoted string must not contain unescaped quote (ovsdb-data.at:289): ok     (0m0.000s 0m0.000s)
1395. quoted string must not end with backslash (ovsdb-data.at:293): ok     (0m0.000s 0m0.000s)
1396. uuids must be valid (ovsdb-data.at:297): ok     (0m0.000s 0m0.000s)
1385. integer not acceptable string JSON atom - Python3 (ovsdb-data.at:269): ok     (0m0.124s 0m0.004s)
1390. named-uuid requires symbol table - Python2 (ovsdb-data.at:277): ok     (0m0.076s 0m0.016s)
1397. integer atom enum - C (ovsdb-data.at:303): ok     (0m0.000s 0m0.000s)
1400. real atom enum - C (ovsdb-data.at:326): ok     (0m0.000s 0m0.000s)
1388. uuid atom must be expressed as JSON array - Python3 (ovsdb-data.at:273): ok     (0m0.128s 0m0.000s)
1403. boolean atom enum - C (ovsdb-data.at:343): ok     (0m0.000s 0m0.000s)
1391. named-uuid requires symbol table - Python3 (ovsdb-data.at:277): ok     (0m0.120s 0m0.008s)
1406. string atom enum - C (ovsdb-data.at:350): ok     (0m0.000s 0m0.000s)
1398. integer atom enum - Python2 (ovsdb-data.at:303): ok     (0m0.088s 0m0.004s)
1401. real atom enum - Python2 (ovsdb-data.at:326): ok     (0m0.068s 0m0.024s)
1409. uuid atom enum - C (ovsdb-data.at:365): ok     (0m0.000s 0m0.000s)
1404. boolean atom enum - Python2 (ovsdb-data.at:343): ok     (0m0.072s 0m0.016s)
1399. integer atom enum - Python3 (ovsdb-data.at:303): ok     (0m0.120s 0m0.012s)
1402. real atom enum - Python3 (ovsdb-data.at:326): ok     (0m0.112s 0m0.020s)
1412. integers >= 5 - C (ovsdb-data.at:376): ok     (0m0.000s 0m0.000s)
1405. boolean atom enum - Python3 (ovsdb-data.at:343): ok     (0m0.120s 0m0.008s)
1407. string atom enum - Python2 (ovsdb-data.at:350): ok     (0m0.080s 0m0.012s)
1415. integers <= -1 - C (ovsdb-data.at:389): ok     (0m0.000s 0m0.000s)
1410. uuid atom enum - Python2 (ovsdb-data.at:365): ok     (0m0.080s 0m0.012s)
1408. string atom enum - Python3 (ovsdb-data.at:350): ok     (0m0.120s 0m0.008s)
1418. integers in range -10 to 10 - C (ovsdb-data.at:400): ok     (0m0.000s 0m0.000s)
1413. integers >= 5 - Python2 (ovsdb-data.at:376): ok     (0m0.072s 0m0.016s)
1421. reals >= 5 - C (ovsdb-data.at:421): ok     (0m0.000s 0m0.000s)
1411. uuid atom enum - Python3 (ovsdb-data.at:365): ok     (0m0.120s 0m0.008s)
1416. integers <= -1 - Python2 (ovsdb-data.at:389): ok     (0m0.088s 0m0.004s)
1414. integers >= 5 - Python3 (ovsdb-data.at:376): ok     (0m0.124s 0m0.004s)
1424. reals <= -1 - C (ovsdb-data.at:434): ok     (0m0.000s 0m0.000s)
1417. integers <= -1 - Python3 (ovsdb-data.at:389): ok     (0m0.128s 0m0.004s)
1427. reals in range -10 to 10 - C (ovsdb-data.at:445): ok     (0m0.000s 0m0.000s)
1419. integers in range -10 to 10 - Python2 (ovsdb-data.at:400): ok     (0m0.080s 0m0.012s)
1422. reals >= 5 - Python2 (ovsdb-data.at:421): ok     (0m0.092s 0m0.000s)
1430. strings at least 2 characters long - C (ovsdb-data.at:466): ok     (0m0.000s 0m0.000s)
1420. integers in range -10 to 10 - Python3 (ovsdb-data.at:400): ok     (0m0.120s 0m0.012s)
1425. reals <= -1 - Python2 (ovsdb-data.at:434): ok     (0m0.076s 0m0.016s)
1423. reals >= 5 - Python3 (ovsdb-data.at:421): ok     (0m0.128s 0m0.004s)
1433. strings no more than 2 characters long - C (ovsdb-data.at:484): ok     (0m0.000s 0m0.000s)
1428. reals in range -10 to 10 - Python2 (ovsdb-data.at:445): ok     (0m0.072s 0m0.020s)
1426. reals <= -1 - Python3 (ovsdb-data.at:434): ok     (0m0.116s 0m0.016s)
1436. integer JSON datum - C (ovsdb-data.at:499): ok     (0m0.000s 0m0.000s)
1439. integer string datum (ovsdb-data.at:505): ok     (0m0.000s 0m0.000s)
1431. strings at least 2 characters long - Python2 (ovsdb-data.at:466): ok     (0m0.080s 0m0.020s)
1429. reals in range -10 to 10 - Python3 (ovsdb-data.at:445): ok     (0m0.128s 0m0.004s)
1440. real JSON datum - C (ovsdb-data.at:512): ok     (0m0.000s 0m0.000s)
1434. strings no more than 2 characters long - Python2 (ovsdb-data.at:484): ok     (0m0.080s 0m0.012s)
1432. strings at least 2 characters long - Python3 (ovsdb-data.at:466): ok     (0m0.120s 0m0.012s)
1443. real string datum (ovsdb-data.at:518): ok     (0m0.000s 0m0.000s)
1444. boolean JSON datum - C (ovsdb-data.at:524): ok     (0m0.000s 0m0.000s)
1437. integer JSON datum - Python2 (ovsdb-data.at:499): ok     (0m0.076s 0m0.016s)
1435. strings no more than 2 characters long - Python3 (ovsdb-data.at:484): ok     (0m0.112s 0m0.016s)
1447. boolean string datum (ovsdb-data.at:529): ok     (0m0.000s 0m0.000s)
1448. string JSON datum - C (ovsdb-data.at:534): ok     (0m0.000s 0m0.000s)
1438. integer JSON datum - Python3 (ovsdb-data.at:499): ok     (0m0.116s 0m0.016s)
1441. real JSON datum - Python2 (ovsdb-data.at:512): ok     (0m0.084s 0m0.008s)
1451. string string datum (ovsdb-data.at:540): ok     (0m0.000s 0m0.000s)
1452. JSON optional boolean - C (ovsdb-data.at:549): ok     (0m0.000s 0m0.000s)
1445. boolean JSON datum - Python2 (ovsdb-data.at:524): ok     (0m0.072s 0m0.020s)
1442. real JSON datum - Python3 (ovsdb-data.at:512): ok     (0m0.116s 0m0.016s)
1455. string optional boolean (ovsdb-data.at:559): ok     (0m0.000s 0m0.000s)
1456. JSON set of 0 or more integers - C (ovsdb-data.at:569): ok     (0m0.000s 0m0.000s)
1449. string JSON datum - Python2 (ovsdb-data.at:534): ok     (0m0.068s 0m0.024s)
1446. boolean JSON datum - Python3 (ovsdb-data.at:524): ok     (0m0.136s 0m0.000s)
1459. string set of 0 or more integers (ovsdb-data.at:586): ok     (0m0.000s 0m0.000s)
1460. JSON set of 1 to 3 uuids - C (ovsdb-data.at:601): ok     (0m0.000s 0m0.000s)
1453. JSON optional boolean - Python2 (ovsdb-data.at:549): ok     (0m0.084s 0m0.008s)
1450. string JSON datum - Python3 (ovsdb-data.at:534): ok     (0m0.108s 0m0.024s)
1463. string set of 1 to 3 uuids (ovsdb-data.at:612): ok     (0m0.000s 0m0.000s)
1464. JSON set of 0 to 3 strings - C (ovsdb-data.at:621): ok     (0m0.000s 0m0.000s)
1457. JSON set of 0 or more integers - Python2 (ovsdb-data.at:569): ok     (0m0.096s 0m0.000s)
1454. JSON optional boolean - Python3 (ovsdb-data.at:549): ok     (0m0.124s 0m0.008s)
1467. string set of 0 to 3 strings (ovsdb-data.at:634): ok     (0m0.000s 0m0.000s)
1468. duplicate boolean not allowed in JSON set - C (ovsdb-data.at:645): ok     (0m0.000s 0m0.000s)
1458. JSON set of 0 or more integers - Python3 (ovsdb-data.at:569): ok     (0m0.128s 0m0.008s)
1461. JSON set of 1 to 3 uuids - Python2 (ovsdb-data.at:601): ok     (0m0.088s 0m0.008s)
1470. duplicate boolean not allowed in string set (ovsdb-data.at:649): ok     (0m0.000s 0m0.000s)
1471. duplicate integer not allowed in JSON set - C (ovsdb-data.at:653): ok     (0m0.000s 0m0.000s)
1473. duplicate integer not allowed in string set (ovsdb-data.at:657): ok     (0m0.000s 0m0.000s)
1465. JSON set of 0 to 3 strings - Python2 (ovsdb-data.at:621): ok     (0m0.072s 0m0.020s)
1474. duplicate real not allowed in JSON set - C (ovsdb-data.at:661): ok     (0m0.000s 0m0.000s)
1462. JSON set of 1 to 3 uuids - Python3 (ovsdb-data.at:601): ok     (0m0.128s 0m0.008s)
1477. duplicate string not allowed in JSON set - C (ovsdb-data.at:669): ok     (0m0.000s 0m0.000s)
1476. duplicate real not allowed in string set (ovsdb-data.at:665): ok     (0m0.000s 0m0.000s)
1479. duplicate string not allowed in string set (ovsdb-data.at:673): ok     (0m0.000s 0m0.000s)
1466. JSON set of 0 to 3 strings - Python3 (ovsdb-data.at:621): ok     (0m0.132s 0m0.000s)
1480. duplicate uuid not allowed in JSON set - C (ovsdb-data.at:677): ok     (0m0.000s 0m0.000s)
1469. duplicate boolean not allowed in JSON set - Python2 (ovsdb-data.at:645): ok     (0m0.136s 0m0.000s)
1482. duplicate uuid not allowed in string set (ovsdb-data.at:684): ok     (0m0.000s 0m0.000s)
1483. JSON map of 1 integer to boolean - C (ovsdb-data.at:693): ok     (0m0.000s 0m0.000s)
1472. duplicate integer not allowed in JSON set - Python2 (ovsdb-data.at:653): ok     (0m0.116s 0m0.016s)
1486. string map of 1 integer to boolean (ovsdb-data.at:698): ok     (0m0.000s 0m0.000s)
1487. JSON map of at least 1 integer to boolean - C (ovsdb-data.at:703): ok     (0m0.000s 0m0.000s)
1475. duplicate real not allowed in JSON set - Python2 (ovsdb-data.at:661): ok     (0m0.120s 0m0.012s)
1490. string map of at least 1 integer to boolean (ovsdb-data.at:712): ok     (0m0.000s 0m0.000s)
1478. duplicate string not allowed in JSON set - Python2 (ovsdb-data.at:669): ok     (0m0.120s 0m0.012s)
1491. JSON map of 1 boolean to integer - C (ovsdb-data.at:721): ok     (0m0.000s 0m0.000s)
1484. JSON map of 1 integer to boolean - Python2 (ovsdb-data.at:693): ok     (0m0.084s 0m0.008s)
1481. duplicate uuid not allowed in JSON set - Python2 (ovsdb-data.at:677): ok     (0m0.128s 0m0.004s)
1494. string map of 1 boolean to integer (ovsdb-data.at:726): ok     (0m0.000s 0m0.000s)
1495. JSON map of 1 uuid to real - C (ovsdb-data.at:731): ok     (0m0.000s 0m0.000s)
1488. JSON map of at least 1 integer to boolean - Python2 (ovsdb-data.at:703): ok     (0m0.080s 0m0.016s)
1485. JSON map of 1 integer to boolean - Python3 (ovsdb-data.at:693): ok     (0m0.124s 0m0.008s)
1498. string map of 1 uuid to real (ovsdb-data.at:740): ok     (0m0.000s 0m0.000s)
1499. JSON map of 10 string to string - C (ovsdb-data.at:749): ok     (0m0.000s 0m0.000s)
1489. JSON map of at least 1 integer to boolean - Python3 (ovsdb-data.at:703): ok     (0m0.120s 0m0.016s)
1492. JSON map of 1 boolean to integer - Python2 (ovsdb-data.at:721): ok     (0m0.092s 0m0.004s)
1502. string map of 10 string to string (ovsdb-data.at:763): ok     (0m0.000s 0m0.000s)
1503. duplicate integer key not allowed in JSON map - C (ovsdb-data.at:777): ok     (0m0.000s 0m0.000s)
1496. JSON map of 1 uuid to real - Python2 (ovsdb-data.at:731): ok     (0m0.072s 0m0.020s)
1493. JSON map of 1 boolean to integer - Python3 (ovsdb-data.at:721): ok     (0m0.128s 0m0.004s)
1505. duplicate integer key not allowed in string map (ovsdb-data.at:782): ok     (0m0.000s 0m0.000s)
1506. generate and apply diff -- integer (ovsdb-data.at:787): ok     (0m0.000s 0m0.000s)
1507. generate and apply diff -- boolean (ovsdb-data.at:793): ok     (0m0.000s 0m0.000s)
1500. JSON map of 10 string to string - Python2 (ovsdb-data.at:749): ok     (0m0.080s 0m0.016s)
1508. generate and apply diff -- string (ovsdb-data.at:799): ok     (0m0.000s 0m0.000s)
1509. generate and apply diff -- set (ovsdb-data.at:806): ok     (0m0.000s 0m0.000s)
1497. JSON map of 1 uuid to real - Python3 (ovsdb-data.at:731): ok     (0m0.128s 0m0.004s)
1510. generate and apply diff -- set -- size error (ovsdb-data.at:827): ok     (0m0.000s 0m0.000s)
1511. generate and apply diff -- map (ovsdb-data.at:833): ok     (0m0.000s 0m0.000s)
1512. generate and apply diff with map -- size error (ovsdb-data.at:857): ok     (0m0.000s 0m0.000s)
1513. ordinary column - C (ovsdb-column.at:3): ok     (0m0.000s 0m0.000s)
1516. immutable column - C (ovsdb-column.at:7): ok     (0m0.000s 0m0.000s)
1501. JSON map of 10 string to string - Python3 (ovsdb-data.at:749): ok     (0m0.124s 0m0.008s)
1519. ephemeral column - C (ovsdb-column.at:11): ok     (0m0.000s 0m0.000s)
1504. duplicate integer key not allowed in JSON map - Python2 (ovsdb-data.at:777): ok     (0m0.132s 0m0.000s)
1522. non-root table with one column - C (ovsdb-table.at:3): ok     (0m0.000s 0m0.000s)
1514. ordinary column - Python2 (ovsdb-column.at:3): ok     (0m0.092s 0m0.000s)
1517. immutable column - Python2 (ovsdb-column.at:7): ok     (0m0.088s 0m0.004s)
1525. immutable table with one column - C (ovsdb-table.at:7): ok     (0m0.000s 0m0.000s)
1520. ephemeral column - Python2 (ovsdb-column.at:11): ok     (0m0.084s 0m0.008s)
1515. ordinary column - Python3 (ovsdb-column.at:3): ok     (0m0.120s 0m0.012s)
1518. immutable column - Python3 (ovsdb-column.at:7): ok     (0m0.128s 0m0.004s)
1523. non-root table with one column - Python2 (ovsdb-table.at:3): ok     (0m0.084s 0m0.008s)
1528. root table with one column - C (ovsdb-table.at:13): ok     (0m0.000s 0m0.000s)
1521. ephemeral column - Python3 (ovsdb-column.at:11): ok     (0m0.124s 0m0.008s)
1531. non-root table with default_is_root=true - C (ovsdb-table.at:19): ok     (0m0.000s 0m0.000s)
1524. non-root table with one column - Python3 (ovsdb-table.at:3): ok     (0m0.132s 0m0.000s)
1526. immutable table with one column - Python2 (ovsdb-table.at:7): ok     (0m0.080s 0m0.012s)
1534. root table with default_is_root=true - C (ovsdb-table.at:23): ok     (0m0.000s 0m0.000s)
1529. root table with one column - Python2 (ovsdb-table.at:13): ok     (0m0.076s 0m0.016s)
1537. table with maxRows of 2 - C (ovsdb-table.at:29): ok     (0m0.000s 0m0.000s)
1527. immutable table with one column - Python3 (ovsdb-table.at:7): ok     (0m0.128s 0m0.004s)
1532. non-root table with default_is_root=true - Python2 (ovsdb-table.at:19): ok     (0m0.084s 0m0.008s)
1530. root table with one column - Python3 (ovsdb-table.at:13): ok     (0m0.132s 0m0.000s)
1540. table with index - C (ovsdb-table.at:34): ok     (0m0.000s 0m0.000s)
1533. non-root table with default_is_root=true - Python3 (ovsdb-table.at:19): ok     (0m0.132s 0m0.000s)
1535. root table with default_is_root=true - Python2 (ovsdb-table.at:23): ok     (0m0.092s 0m0.004s)
1543. table with syntax error in index - C (ovsdb-table.at:40): ok     (0m0.000s 0m0.000s)
1538. table with maxRows of 2 - Python2 (ovsdb-table.at:29): ok     (0m0.072s 0m0.020s)
1545. table with empty index - C (ovsdb-table.at:46): ok     (0m0.000s 0m0.000s)
1536. root table with default_is_root=true - Python3 (ovsdb-table.at:23): ok     (0m0.124s 0m0.008s)
1541. table with index - Python2 (ovsdb-table.at:34): ok     (0m0.084s 0m0.008s)
1547. table with index of ephemeral column - C (ovsdb-table.at:52): ok     (0m0.000s 0m0.000s)
1539. table with maxRows of 2 - Python3 (ovsdb-table.at:29): ok     (0m0.128s 0m0.004s)
1549. column names may not begin with _ - C (ovsdb-table.at:59): ok     (0m0.000s 0m0.000s)
1551. table must have at least one column (1) - C (ovsdb-table.at:65): ok     (0m0.000s 0m0.000s)
1542. table with index - Python3 (ovsdb-table.at:34): ok     (0m0.132s 0m0.000s)
1553. table must have at least one column (2) - C (ovsdb-table.at:69): ok     (0m0.000s 0m0.000s)
1544. table with syntax error in index - Python2 (ovsdb-table.at:40): ok     (0m0.128s 0m0.004s)
1555. table maxRows must be positive - C (ovsdb-table.at:73): ok     (0m0.000s 0m0.000s)
1546. table with empty index - Python2 (ovsdb-table.at:46): ok     (0m0.116s 0m0.016s)
1557. row with one string column (ovsdb-row.at:3): ok     (0m0.000s 0m0.000s)
1558. row with one integer column (ovsdb-row.at:19): ok     (0m0.000s 0m0.000s)
1548. table with index of ephemeral column - Python2 (ovsdb-table.at:52): ok     (0m0.120s 0m0.012s)
1559. row with one real column (ovsdb-row.at:35): ok     (0m0.000s 0m0.000s)
1560. row with one boolean column (ovsdb-row.at:51): ok     (0m0.000s 0m0.000s)
1561. row with one uuid column (ovsdb-row.at:64): ok     (0m0.000s 0m0.000s)
1550. column names may not begin with _ - Python2 (ovsdb-table.at:59): ok     (0m0.116s 0m0.016s)
1562. row with set of 1 to 2 elements (ovsdb-row.at:77): ok     (0m0.000s 0m0.000s)
1563. row with map of 1 to 2 elements (ovsdb-row.at:84): ok     (0m0.000s 0m0.000s)
1552. table must have at least one column (1) - Python2 (ovsdb-table.at:65): ok     (0m0.120s 0m0.012s)
1564. row with several columns (ovsdb-row.at:91): ok     (0m0.000s 0m0.000s)
1565. row hashing (scalars) (ovsdb-row.at:113): ok     (0m0.000s 0m0.000s)
1566. row hashing (sets) (ovsdb-row.at:182): ok     (0m0.000s 0m0.000s)
1567. row hashing (maps) (ovsdb-row.at:235): ok     (0m0.000s 0m0.000s)
1554. table must have at least one column (2) - Python2 (ovsdb-table.at:69): ok     (0m0.132s 0m0.000s)
1568. schema with valid refTables - C (ovsdb-schema.at:3): ok     (0m0.000s 0m0.000s)
1556. table maxRows must be positive - Python2 (ovsdb-table.at:73): ok     (0m0.128s 0m0.004s)
1571. schema with ephemeral strong references - C (ovsdb-schema.at:30): ok     (0m0.000s 0m0.000s)
1574. schema with immutable weak references - C (ovsdb-schema.at:60): ok     (0m0.000s 0m0.000s)
1577. schema without version number - C (ovsdb-schema.at:78): ok     (0m0.000s 0m0.000s)
1569. schema with valid refTables - Python2 (ovsdb-schema.at:3): ok     (0m0.076s 0m0.016s)
1572. schema with ephemeral strong references - Python2 (ovsdb-schema.at:30): ok     (0m0.092s 0m0.000s)
1575. schema with immutable weak references - Python2 (ovsdb-schema.at:60): ok     (0m0.092s 0m0.000s)
1580. schema with invalid refTables - C (ovsdb-schema.at:88): ok     (0m0.000s 0m0.000s)
1570. schema with valid refTables - Python3 (ovsdb-schema.at:3): ok     (0m0.132s 0m0.000s)
1573. schema with ephemeral strong references - Python3 (ovsdb-schema.at:30): ok     (0m0.124s 0m0.008s)
1578. schema without version number - Python2 (ovsdb-schema.at:78): ok     (0m0.088s 0m0.004s)
1582. schema with invalid version number - C (ovsdb-schema.at:111): ok     (0m0.000s 0m0.000s)
1576. schema with immutable weak references - Python3 (ovsdb-schema.at:60): ok     (0m0.132s 0m0.000s)
1584. null condition (ovsdb-condition.at:3): ok     (0m0.000s 0m0.000s)
1586. disallowed conditions on scalars (ovsdb-condition.at:75): ok     (0m0.000s 0m0.000s)
1585. conditions on scalars (ovsdb-condition.at:9): ok     (0m0.000s 0m0.000s)
1587. conditions on sets (ovsdb-condition.at:112): ok     (0m0.000s 0m0.000s)
1588. condition sorting (ovsdb-condition.at:173): ok     (0m0.000s 0m0.000s)
1589. boolean condition (ovsdb-condition.at:187): ok     (0m0.000s 0m0.000s)
1579. schema without version number - Python3 (ovsdb-schema.at:78): ok     (0m0.120s 0m0.012s)
1591. evaluating null condition (ovsdb-condition.at:199): ok     (0m0.000s 0m0.000s)
1590. boolean condition (ovsdb-condition.at:193): ok     (0m0.000s 0m0.000s)
1592. evaluating conditions on integers (ovsdb-condition.at:208): ok     (0m0.000s 0m0.000s)
1593. evaluating conditions on reals (ovsdb-condition.at:233): ok     (0m0.000s 0m0.000s)
1594. evaluating conditions on booleans (ovsdb-condition.at:258): ok     (0m0.000s 0m0.000s)
1595. evaluating conditions on strings (ovsdb-condition.at:282): ok     (0m0.000s 0m0.000s)
1596. evaluating conditions on UUIDs (ovsdb-condition.at:307): ok     (0m0.000s 0m0.000s)
1597. evaluating conditions on sets (ovsdb-condition.at:333): ok     (0m0.000s 0m0.000s)
1598. evaluating conditions on maps (1) (ovsdb-condition.at:415): ok     (0m0.000s 0m0.000s)
1599. evaluating conditions on maps (2) (ovsdb-condition.at:500): ok     (0m0.000s 0m0.000s)
1600. evaluating conditions on optional integers (ovsdb-condition.at:592): ok     (0m0.000s 0m0.000s)
1581. schema with invalid refTables - Python2 (ovsdb-schema.at:88): ok     (0m0.128s 0m0.004s)
1601. evaluating conditions on optional strings (ovsdb-condition.at:619): ok     (0m0.000s 0m0.000s)
1602. evaluating conditions on optional reals (ovsdb-condition.at:646): ok     (0m0.000s 0m0.000s)
1603. evaluating false boolean condition (ovsdb-condition.at:673): ok     (0m0.000s 0m0.000s)
1583. schema with invalid version number - Python2 (ovsdb-schema.at:111): ok     (0m0.124s 0m0.008s)
1604. evaluating true boolean condition (ovsdb-condition.at:682): ok     (0m0.000s 0m0.000s)
1605. compare condition (ovsdb-condition.at:691): ok     (0m0.000s 0m0.000s)
1606. null mutation (ovsdb-mutation.at:3): ok     (0m0.000s 0m0.000s)
1607. mutations on scalars (ovsdb-mutation.at:9): ok     (0m0.000s 0m0.000s)
1608. disallowed mutations on scalars (ovsdb-mutation.at:37): ok     (0m0.000s 0m0.000s)
1609. disallowed mutations on immutable columns (ovsdb-mutation.at:102): ok     (0m0.000s 0m0.000s)
1610. mutations on sets (ovsdb-mutation.at:114): ok     (0m0.000s 0m0.000s)
1611. executing null mutation (ovsdb-mutation.at:166): ok     (0m0.000s 0m0.000s)
1612. executing mutations on integers (ovsdb-mutation.at:179): ok     (0m0.000s 0m0.000s)
1613. integer overflow detection (ovsdb-mutation.at:216): ok     (0m0.000s 0m0.000s)
1615. executing mutations on reals (ovsdb-mutation.at:336): ok     (0m0.000s 0m0.000s)
1614. executing mutations on integers with constraints (ovsdb-mutation.at:297): ok     (0m0.000s 0m0.000s)
1616. real overflow detection (ovsdb-mutation.at:367): ok     (0m0.000s 0m0.000s)
1617. executing mutations on reals with constraints (ovsdb-mutation.at:410): ok     (0m0.000s 0m0.000s)
1618. executing mutations on integer sets (ovsdb-mutation.at:443): ok     (0m0.000s 0m0.000s)
1619. executing mutations on integer sets with constraints (ovsdb-mutation.at:517): ok     (0m0.000s 0m0.000s)
1620. executing mutations on real sets (ovsdb-mutation.at:556): ok     (0m0.000s 0m0.000s)
1621. executing mutations on boolean sets (ovsdb-mutation.at:629): ok     (0m0.000s 0m0.000s)
1622. executing mutations on string sets (ovsdb-mutation.at:679): ok     (0m0.000s 0m0.000s)
1623. executing mutations on uuid sets (ovsdb-mutation.at:729): ok     (0m0.000s 0m0.000s)
1624. executing mutations on integer maps (ovsdb-mutation.at:779): ok     (0m0.000s 0m0.000s)
1626. queries on sets (ovsdb-query.at:95): ok     (0m0.000s 0m0.000s)
1625. queries on scalars (ovsdb-query.at:3): ok     (0m0.000s 0m0.000s)
1627. queries on maps (1) (ovsdb-query.at:176): ok     (0m0.000s 0m0.000s)
1628. queries on maps (2) (ovsdb-query.at:260): ok     (0m0.000s 0m0.000s)
1629. UUID-distinct queries on scalars (ovsdb-query.at:351): ok     (0m0.000s 0m0.000s)
1630. Boolean-distinct queries on scalars (ovsdb-query.at:444): ok     (0m0.000s 0m0.000s)
1631. parse colunn set containing bad name (ovsdb-query.at:537): ok     (0m0.000s 0m0.000s)
1632. empty table, empty transaction (ovsdb-transaction.at:3): ok     (0m0.000s 0m0.000s)
1633. nonempty table, empty transaction (ovsdb-transaction.at:17): ok     (0m0.000s 0m0.000s)
1634. insert, commit (ovsdb-transaction.at:41): ok     (0m0.000s 0m0.000s)
1635. insert, abort (ovsdb-transaction.at:70): ok     (0m0.000s 0m0.000s)
1636. modify, commit (ovsdb-transaction.at:98): ok     (0m0.000s 0m0.000s)
1637. modify, abort (ovsdb-transaction.at:127): ok     (0m0.000s 0m0.000s)
1638. delete, commit (ovsdb-transaction.at:156): ok     (0m0.000s 0m0.000s)
1639. delete, abort (ovsdb-transaction.at:181): ok     (0m0.000s 0m0.000s)
1640. modify, delete, commit (ovsdb-transaction.at:207): ok     (0m0.000s 0m0.000s)
1642. insert, delete, commit (ovsdb-transaction.at:262): ok     (0m0.000s 0m0.000s)
1641. modify, delete, abort (ovsdb-transaction.at:234): ok     (0m0.000s 0m0.000s)
1643. insert, delete, abort (ovsdb-transaction.at:291): ok     (0m0.000s 0m0.000s)
1644. insert, modify, delete, commit (ovsdb-transaction.at:322): ok     (0m0.000s 0m0.000s)
1645. insert, modify, delete, abort (ovsdb-transaction.at:353): ok     (0m0.000s 0m0.000s)
1646. deletes are aborted cleanly (ovsdb-transaction.at:385): ok     (0m0.000s 0m0.000s)
1647. block insert on read only DB (ovsdb-execution.at:147): ok     (0m0.004s 0m0.000s)
1648. allow select on read only DB (ovsdb-execution.at:156): ok     (0m0.000s 0m0.000s)
1649. uuid-name must be <id> (ovsdb-execution.at:185): ok     (0m0.000s 0m0.000s)
1650. named-uuid must be <id> (ovsdb-execution.at:195): ok     (0m0.000s 0m0.000s)
1651. duplicate uuid-name not allowed (ovsdb-execution.at:204): ok     (0m0.000s 0m0.000s)
1652. insert default row, query table (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1653. insert row, query table (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1654. insert rows, query by value (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1656. insert rows, update rows by value (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1655. insert rows, query by named-uuid (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1657. insert rows, mutate rows (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1658. insert rows, delete by named-uuid (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1659. insert rows, delete rows by value (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1660. insert rows, delete by (non-matching) value (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1661. insert rows, delete all (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1662. insert row, query table, commit (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1663. insert row, query table, commit durably (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1664. equality wait with correct rows (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1665. equality wait with extra row (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1666. equality wait with missing row (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1667. inequality wait with correct rows (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1668. inequality wait with extra row (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1669. inequality wait with missing row (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1670. insert and update constraints (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1671. index uniqueness checking (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1673. referential integrity -- mutual references (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1672. referential integrity -- simple (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1674. weak references (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1675. immutable columns (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1676. garbage collection (ovsdb-execution.at:1140): ok     (0m0.000s 0m0.000s)
1677. trigger fires immediately (ovsdb-trigger.at:15): ok     (0m0.000s 0m0.000s)
1678. trigger times out (ovsdb-trigger.at:38): ok     (0m0.000s 0m0.000s)
1679. trigger fires after delay (ovsdb-trigger.at:61): ok     (0m0.000s 0m0.000s)
1680. delayed trigger modifies database (ovsdb-trigger.at:92): ok     (0m0.000s 0m0.000s)
1681. one delayed trigger wakes up another (ovsdb-trigger.at:132): ok     (0m0.000s 0m0.000s)
1682. insert default row, query table (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1683. insert row, query table (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1685. insert rows, query by named-uuid (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1684. insert rows, query by value (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1688. insert rows, delete by named-uuid (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1686. insert rows, update rows by value (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1687. insert rows, mutate rows (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1689. insert rows, delete rows by value (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1691. insert rows, delete all (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1690. insert rows, delete by (non-matching) value (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1692. insert row, query table, commit (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1693. insert row, query table, commit durably (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1694. equality wait with correct rows (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1695. equality wait with extra row (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1696. equality wait with missing row (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1697. inequality wait with correct rows (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1699. inequality wait with missing row (ovsdb-tool.at:29): ok     (0m0.004s 0m0.000s)
1698. inequality wait with extra row (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1700. insert and update constraints (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1701. index uniqueness checking (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1707. transaction comments (ovsdb-tool.at:31): ok     (0m0.000s 0m0.000s)
1702. referential integrity -- simple (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1705. immutable columns (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1703. referential integrity -- mutual references (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1711. ovsdb-tool schema-version (ovsdb-tool.at:289): ok     (0m0.000s 0m0.000s)
1704. weak references (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1713. ovsdb-tool schema-cksum (ovsdb-tool.at:305): ok     (0m0.000s 0m0.000s)
1712. ovsdb-tool db-version (ovsdb-tool.at:296): ok     (0m0.000s 0m0.000s)
1706. garbage collection (ovsdb-tool.at:29): ok     (0m0.000s 0m0.000s)
1708. ovsdb-tool compact (ovsdb-tool.at:49): ok     (0m0.000s 0m0.000s)
1715. ovsdb-tool needs-conversion (no conversion needed) (ovsdb-tool.at:321): ok     (0m0.000s 0m0.000s)
1714. ovsdb-tool db-cksum (ovsdb-tool.at:312): ok     (0m0.000s 0m0.000s)
1716. ovsdb-tool needs-conversion (conversion needed) (ovsdb-tool.at:330): ok     (0m0.000s 0m0.000s)
1709. ovsdb-tool convert -- removing a column (ovsdb-tool.at:156): ok     (0m0.000s 0m0.000s)
1710. ovsdb-tool convert -- adding a column (ovsdb-tool.at:223): ok     (0m0.000s 0m0.000s)
1717. insert default row, query table (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1718. insert row, query table (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1720. insert rows, query by named-uuid (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1719. insert rows, query by value (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1721. insert rows, update rows by value (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1723. insert rows, delete by named-uuid (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1722. insert rows, mutate rows (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1724. insert rows, delete rows by value (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1725. insert rows, delete by (non-matching) value (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1726. insert rows, delete all (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1727. insert row, query table, commit (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1728. insert row, query table, commit durably (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1729. equality wait with correct rows (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1731. equality wait with missing row (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1730. equality wait with extra row (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1732. inequality wait with correct rows (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1733. inequality wait with extra row (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1734. inequality wait with missing row (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1735. insert and update constraints (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1736. index uniqueness checking (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1737. referential integrity -- simple (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1738. referential integrity -- mutual references (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1742. truncating corrupted database log (ovsdb-server.at:45): ok     (0m0.000s 0m0.000s)
1740. immutable columns (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1739. weak references (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1743. truncating database log with bad transaction (ovsdb-server.at:92): ok     (0m0.000s 0m0.000s)
1744. ovsdb-client get-schema-version (ovsdb-server.at:140): ok     (0m0.000s 0m0.000s)
1741. garbage collection (ovsdb-server.at:41): ok     (0m0.000s 0m0.000s)
1745. database multiplexing implementation (ovsdb-server.at:150): ok     (0m0.000s 0m0.000s)
1753. SSL db: implementation (ovsdb-server.at:500): skipped (ovsdb-server.at:502)
1749. --remote=db: implementation (ovsdb-server.at:317): ok     (0m0.000s 0m0.000s)
1750. ovsdb-server/add-remote and remove-remote (ovsdb-server.at:381): ok     (0m0.000s 0m0.000s)
1746. ovsdb-server/add-db and remove-db (ovsdb-server.at:169): ok     (0m0.000s 0m0.000s)
1755. ovsdb-server combines updates on backlogged connections (ovsdb-server.at:688): skipped (ovsdb-server.at:710)
1756. insert default row, query table (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1757. insert row, query table (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1758. insert rows, query by value (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1759. insert rows, query by named-uuid (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1760. insert rows, update rows by value (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1761. insert rows, mutate rows (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1762. insert rows, delete by named-uuid (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1763. insert rows, delete rows by value (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1747. ovsdb-server/add-db with --monitor (ovsdb-server.at:253): ok     (0m0.000s 0m0.000s)
1748. ovsdb-server/add-db and remove-db with --monitor (ovsdb-server.at:286): ok     (0m0.000s 0m0.000s)
1765. insert rows, delete all (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1764. insert rows, delete by (non-matching) value (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1766. insert row, query table, commit (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1767. insert row, query table, commit durably (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1754. compacting online (ovsdb-server.at:556): ok     (0m0.000s 0m0.000s)
1768. equality wait with correct rows (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1770. equality wait with missing row (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1769. equality wait with extra row (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1771. inequality wait with correct rows (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1772. inequality wait with extra row (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1773. inequality wait with missing row (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1751. ovsdb-server/add-remote with --monitor (ovsdb-server.at:434): ok     (0m0.000s 0m0.000s)
1774. insert and update constraints (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1775. index uniqueness checking (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1776. referential integrity -- simple (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1752. ovsdb-server/add-remote and remove-remote with --monitor (ovsdb-server.at:465): ok     (0m0.000s 0m0.000s)
1777. referential integrity -- mutual references (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1778. weak references (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1779. immutable columns (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1780. garbage collection (ovsdb-server.at:821): skipped (ovsdb-server.at:821)
1781. insert default row, query table (ovsdb-server.at:859): skipped (ovsdb-server.at:859)
1782. ovsdb-client get-schema-version - tcp socket (ovsdb-server.at:863): ok     (0m0.000s 0m0.000s)
1783. insert default row, query table (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1784. insert row, query table (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1789. insert rows, delete by named-uuid (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1786. insert rows, query by named-uuid (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1785. insert rows, query by value (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1788. insert rows, mutate rows (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1787. insert rows, update rows by value (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1790. insert rows, delete rows by value (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1792. insert rows, delete all (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1793. insert row, query table, commit (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1791. insert rows, delete by (non-matching) value (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1794. insert row, query table, commit durably (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1795. equality wait with correct rows (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1796. equality wait with extra row (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1797. equality wait with missing row (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1798. inequality wait with correct rows (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1800. inequality wait with missing row (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1799. inequality wait with extra row (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1801. insert and update constraints (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1803. referential integrity -- simple (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1804. referential integrity -- mutual references (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1802. index uniqueness checking (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1806. immutable columns (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1805. weak references (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1808. insert default row, query table (ovsdb-server.at:943): ok     (0m0.000s 0m0.000s)
1812. insert rows, query by named-uuid (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1809. insert default row, query table (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1810. insert row, query table (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1811. insert rows, query by value (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1813. insert rows, update rows by value (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1815. insert rows, delete by named-uuid (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1807. garbage collection (ovsdb-server.at:906): ok     (0m0.000s 0m0.000s)
1818. insert rows, delete all (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1814. insert rows, mutate rows (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1819. insert row, query table, commit (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1817. insert rows, delete by (non-matching) value (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1816. insert rows, delete rows by value (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1820. insert row, query table, commit durably (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1821. equality wait with correct rows (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1823. equality wait with missing row (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1822. equality wait with extra row (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1824. inequality wait with correct rows (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1825. inequality wait with extra row (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1826. inequality wait with missing row (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1827. insert and update constraints (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1828. index uniqueness checking (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1830. referential integrity -- mutual references (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1832. immutable columns (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1829. referential integrity -- simple (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1834. insert default row, query table (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1835. insert row, query table (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1831. weak references (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1837. insert rows, query by named-uuid (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1836. insert rows, query by value (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1833. garbage collection (ovsdb-server.at:979): ok     (0m0.000s 0m0.000s)
1838. insert rows, update rows by value (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1839. insert rows, mutate rows (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1840. insert rows, delete by named-uuid (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1841. insert rows, delete rows by value (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1842. insert rows, delete by (non-matching) value (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1843. insert rows, delete all (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1845. insert row, query table, commit durably (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1844. insert row, query table, commit (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1846. equality wait with correct rows (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1847. equality wait with extra row (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1848. equality wait with missing row (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1849. inequality wait with correct rows (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1850. inequality wait with extra row (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1851. inequality wait with missing row (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1852. insert and update constraints (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1853. index uniqueness checking (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1855. referential integrity -- mutual references (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1854. referential integrity -- simple (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1857. immutable columns (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1856. weak references (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1858. garbage collection (ovsdb-server.at:1019): ok     (0m0.000s 0m0.000s)
1859. insert monitored table, insert excluded table (ovsdb-server.at:1072): ok     (0m0.000s 0m0.000s)
1865. ovsdb-server/get-active-ovsdb-server (ovsdb-server.at:1077): ok     (0m0.000s 0m0.000s)
1860. insert monitored table, update excluded table (ovsdb-server.at:1072): ok     (0m0.000s 0m0.000s)
1866. ovsdb-server/set-active-ovsdb-server (ovsdb-server.at:1090): ok     (0m0.000s 0m0.000s)
1867. ovsdb-server/get-sync-exclude-tables (ovsdb-server.at:1104): ok     (0m0.000s 0m0.000s)
1861. update monitored table, insert excluded table (ovsdb-server.at:1072): ok     (0m0.000s 0m0.000s)
1862. update monitored table, update excluded table (ovsdb-server.at:1072): ok     (0m0.000s 0m0.000s)
1863. delete monitored table, insert excluded table (ovsdb-server.at:1072): ok     (0m0.000s 0m0.000s)
1864. delete monitored table, update excluded table (ovsdb-server.at:1072): ok     (0m0.000s 0m0.000s)
1868. ovsdb-server/set-sync-exclude-tables (ovsdb-server.at:1117): ok     (0m0.000s 0m0.000s)
1872. monitor insert into empty table (ovsdb-monitor.at:96): ok     (0m0.000s 0m0.000s)
1869. ovsdb-server/connect-active-server (ovsdb-server.at:1165): ok     (0m0.000s 0m0.000s)
1873. monitor insert into populated table (ovsdb-monitor.at:108): ok     (0m0.000s 0m0.000s)
1875. monitor row update (ovsdb-monitor.at:144): ok     (0m0.000s 0m0.000s)
1874. monitor delete (ovsdb-monitor.at:126): ok     (0m0.000s 0m0.000s)
1876. monitor no-op row updates (ovsdb-monitor.at:164): ok     (0m0.000s 0m0.000s)
1877. monitor insert-and-update transaction (ovsdb-monitor.at:187): ok     (0m0.000s 0m0.000s)
1878. monitor insert-update-and-delete transaction (ovsdb-monitor.at:210): ok     (0m0.000s 0m0.000s)
1879. monitor weak reference change (ovsdb-monitor.at:239): ok     (0m0.000s 0m0.000s)
1880. monitor insert-update-and-delete transaction (ovsdb-monitor.at:274): ok     (0m0.000s 0m0.000s)
1881. monitor all operations (ovsdb-monitor.at:325): ok     (0m0.000s 0m0.000s)
1882. monitor initial only (ovsdb-monitor.at:345): ok     (0m0.000s 0m0.000s)
1883. monitor insert only (ovsdb-monitor.at:352): ok     (0m0.000s 0m0.000s)
1886. monitor-cond empty condition (ovsdb-monitor.at:377): ok     (0m0.000s 0m0.000s)
1887. monitor-cond multiple conditions (ovsdb-monitor.at:408): ok     (0m0.000s 0m0.000s)
1888. monitor-cond delete from populated table (ovsdb-monitor.at:436): ok     (0m0.000s 0m0.000s)
1884. monitor delete only (ovsdb-monitor.at:359): ok     (0m0.000s 0m0.000s)
1885. monitor modify only (ovsdb-monitor.at:367): ok     (0m0.000s 0m0.000s)
1870. ovsdb-server/disconnect-active-server (ovsdb-server.at:1204): ok     (0m0.000s 0m0.000s)
1889. monitor-cond insert due to modify (ovsdb-monitor.at:461): ok     (0m0.000s 0m0.000s)
1890. monitor-cond delete due to modify (ovsdb-monitor.at:485): ok     (0m0.000s 0m0.000s)
1891. monitor-cond condition non-monitored columns (ovsdb-monitor.at:509): ok     (0m0.000s 0m0.000s)
1892. monitor-cond-change (ovsdb-monitor.at:538): ok     (0m0.000s 0m0.000s)
1894. simple idl, initially empty, no ops - C (ovsdb-idl.at:175): ok     (0m0.000s 0m0.000s)
1871. ovsdb-server/active-backup-role-switching (ovsdb-server.at:1288): ok     (0m0.000s 0m0.000s)
1895. simple idl, initially empty, no ops - Python2 (ovsdb-idl.at:175): ok     (0m0.088s 0m0.008s)
1897. simple idl, initially empty, no ops - Python2 - register_columns (ovsdb-idl.at:175): ok     (0m0.076s 0m0.020s)
1893. simple passive idl, initially empty, select empty - Python ptcp (ovsdb-idl.at:167): ok     (0m0.088s 0m0.008s)
1896. simple idl, initially empty, no ops - Python3 (ovsdb-idl.at:175): ok     (0m0.120s 0m0.016s)
1899. simple idl, initially empty, no ops - Python2 - tcp (ovsdb-idl.at:175): ok     (0m0.096s 0m0.000s)
1898. simple idl, initially empty, no ops - Python3 - register_columns (ovsdb-idl.at:175): ok     (0m0.120s 0m0.016s)
1900. simple idl, initially empty, no ops - Python3 - tcp (ovsdb-idl.at:175): ok     (0m0.128s 0m0.008s)
1901. simple idl, initially empty, no ops - Python2 - tcp6 (ovsdb-idl.at:175): ok     (0m0.084s 0m0.012s)
1902. simple idl, initially empty, no ops - Python3 - tcp6 (ovsdb-idl.at:175): ok     (0m0.128s 0m0.008s)
1903. simple idl, initially empty, various ops - C (ovsdb-idl.at:182): ok     (0m0.000s 0m0.000s)
1904. simple idl, initially empty, various ops - Python2 (ovsdb-idl.at:182): ok     (0m0.108s 0m0.004s)
1906. simple idl, initially empty, various ops - Python2 - register_columns (ovsdb-idl.at:182): ok     (0m0.092s 0m0.020s)
1912. simple idl, initially populated - C (ovsdb-idl.at:260): ok     (0m0.000s 0m0.000s)
1905. simple idl, initially empty, various ops - Python3 (ovsdb-idl.at:182): ok     (0m0.148s 0m0.000s)
1908. simple idl, initially empty, various ops - Python2 - tcp (ovsdb-idl.at:182): ok     (0m0.100s 0m0.012s)
1907. simple idl, initially empty, various ops - Python3 - register_columns (ovsdb-idl.at:182): ok     (0m0.140s 0m0.008s)
1909. simple idl, initially empty, various ops - Python3 - tcp (ovsdb-idl.at:182): ok     (0m0.136s 0m0.008s)
1910. simple idl, initially empty, various ops - Python2 - tcp6 (ovsdb-idl.at:182): ok     (0m0.100s 0m0.008s)
1911. simple idl, initially empty, various ops - Python3 - tcp6 (ovsdb-idl.at:182): ok     (0m0.128s 0m0.016s)
1913. simple idl, initially populated - Python2 (ovsdb-idl.at:260): ok     (0m0.076s 0m0.024s)
1914. simple idl, initially populated - Python3 (ovsdb-idl.at:260): ok     (0m0.140s 0m0.004s)
1921. simple idl, writing via IDL - C (ovsdb-idl.at:291): ok     (0m0.000s 0m0.000s)
1915. simple idl, initially populated - Python2 - register_columns (ovsdb-idl.at:260): ok     (0m0.092s 0m0.012s)
1917. simple idl, initially populated - Python2 - tcp (ovsdb-idl.at:260): ok     (0m0.088s 0m0.016s)
1916. simple idl, initially populated - Python3 - register_columns (ovsdb-idl.at:260): ok     (0m0.140s 0m0.000s)
1919. simple idl, initially populated - Python2 - tcp6 (ovsdb-idl.at:260): ok     (0m0.100s 0m0.004s)
1918. simple idl, initially populated - Python3 - tcp (ovsdb-idl.at:260): ok     (0m0.136s 0m0.008s)
1920. simple idl, initially populated - Python3 - tcp6 (ovsdb-idl.at:260): ok     (0m0.132s 0m0.012s)
1922. simple idl, writing via IDL - Python2 (ovsdb-idl.at:291): ok     (0m0.092s 0m0.012s)
1924. simple idl, writing via IDL - Python2 - register_columns (ovsdb-idl.at:291): ok     (0m0.096s 0m0.008s)
1923. simple idl, writing via IDL - Python3 (ovsdb-idl.at:291): ok     (0m0.136s 0m0.008s)
1926. simple idl, writing via IDL - Python2 - tcp (ovsdb-idl.at:291): ok     (0m0.084s 0m0.020s)
1925. simple idl, writing via IDL - Python3 - register_columns (ovsdb-idl.at:291): ok     (0m0.136s 0m0.008s)
1930. simple idl, handling verification failure - C (ovsdb-idl.at:322): ok     (0m0.000s 0m0.000s)
1928. simple idl, writing via IDL - Python2 - tcp6 (ovsdb-idl.at:291): ok     (0m0.104s 0m0.000s)
1927. simple idl, writing via IDL - Python3 - tcp (ovsdb-idl.at:291): ok     (0m0.120s 0m0.024s)
1929. simple idl, writing via IDL - Python3 - tcp6 (ovsdb-idl.at:291): ok     (0m0.136s 0m0.008s)
1931. simple idl, handling verification failure - Python2 (ovsdb-idl.at:322): ok     (0m0.088s 0m0.016s)
1933. simple idl, handling verification failure - Python2 - register_columns (ovsdb-idl.at:322): ok     (0m0.084s 0m0.020s)
1932. simple idl, handling verification failure - Python3 (ovsdb-idl.at:322): ok     (0m0.128s 0m0.012s)
1935. simple idl, handling verification failure - Python2 - tcp (ovsdb-idl.at:322): ok     (0m0.104s 0m0.000s)
1934. simple idl, handling verification failure - Python3 - register_columns (ovsdb-idl.at:322): ok     (0m0.132s 0m0.008s)
1939. simple idl, increment operation - C (ovsdb-idl.at:353): ok     (0m0.000s 0m0.000s)
1937. simple idl, handling verification failure - Python2 - tcp6 (ovsdb-idl.at:322): ok     (0m0.092s 0m0.012s)
1936. simple idl, handling verification failure - Python3 - tcp (ovsdb-idl.at:322): ok     (0m0.136s 0m0.004s)
1938. simple idl, handling verification failure - Python3 - tcp6 (ovsdb-idl.at:322): ok     (0m0.132s 0m0.008s)
1940. simple idl, increment operation - Python2 (ovsdb-idl.at:353): ok     (0m0.088s 0m0.012s)
1942. simple idl, increment operation - Python2 - register_columns (ovsdb-idl.at:353): ok     (0m0.084s 0m0.016s)
1941. simple idl, increment operation - Python3 (ovsdb-idl.at:353): ok     (0m0.124s 0m0.012s)
1944. simple idl, increment operation - Python2 - tcp (ovsdb-idl.at:353): ok     (0m0.100s 0m0.000s)
1943. simple idl, increment operation - Python3 - register_columns (ovsdb-idl.at:353): ok     (0m0.124s 0m0.012s)
1946. simple idl, increment operation - Python2 - tcp6 (ovsdb-idl.at:353): ok     (0m0.084s 0m0.016s)
1948. simple idl, aborting - C (ovsdb-idl.at:365): ok     (0m0.000s 0m0.000s)
1945. simple idl, increment operation - Python3 - tcp (ovsdb-idl.at:353): ok     (0m0.132s 0m0.004s)
1947. simple idl, increment operation - Python3 - tcp6 (ovsdb-idl.at:353): ok     (0m0.136s 0m0.004s)
1949. simple idl, aborting - Python2 (ovsdb-idl.at:365): ok     (0m0.100s 0m0.000s)
1951. simple idl, aborting - Python2 - register_columns (ovsdb-idl.at:365): ok     (0m0.080s 0m0.020s)
1950. simple idl, aborting - Python3 (ovsdb-idl.at:365): ok     (0m0.128s 0m0.012s)
1953. simple idl, aborting - Python2 - tcp (ovsdb-idl.at:365): ok     (0m0.096s 0m0.004s)
1955. simple idl, aborting - Python2 - tcp6 (ovsdb-idl.at:365): ok     (0m0.100s 0m0.000s)
1952. simple idl, aborting - Python3 - register_columns (ovsdb-idl.at:365): ok     (0m0.136s 0m0.000s)
1957. simple idl, destroy without commit or abort - C (ovsdb-idl.at:379): ok     (0m0.000s 0m0.000s)
1954. simple idl, aborting - Python3 - tcp (ovsdb-idl.at:365): ok     (0m0.136s 0m0.000s)
1956. simple idl, aborting - Python3 - tcp6 (ovsdb-idl.at:365): ok     (0m0.128s 0m0.008s)
1958. simple idl, destroy without commit or abort - Python2 (ovsdb-idl.at:379): ok     (0m0.080s 0m0.016s)
1960. simple idl, destroy without commit or abort - Python2 - register_columns (ovsdb-idl.at:379): ok     (0m0.076s 0m0.024s)
1959. simple idl, destroy without commit or abort - Python3 (ovsdb-idl.at:379): ok     (0m0.124s 0m0.012s)
1962. simple idl, destroy without commit or abort - Python2 - tcp (ovsdb-idl.at:379): ok     (0m0.092s 0m0.008s)
1964. simple idl, destroy without commit or abort - Python2 - tcp6 (ovsdb-idl.at:379): ok     (0m0.088s 0m0.012s)
1966. simple idl, conditional, false condition - C (ovsdb-idl.at:393): ok     (0m0.000s 0m0.000s)
1961. simple idl, destroy without commit or abort - Python3 - register_columns (ovsdb-idl.at:379): ok     (0m0.136s 0m0.000s)
1963. simple idl, destroy without commit or abort - Python3 - tcp (ovsdb-idl.at:379): ok     (0m0.140s 0m0.000s)
1965. simple idl, destroy without commit or abort - Python3 - tcp6 (ovsdb-idl.at:379): ok     (0m0.128s 0m0.012s)
1967. simple idl, conditional, false condition - Python2 (ovsdb-idl.at:393): ok     (0m0.096s 0m0.004s)
1969. simple idl, conditional, false condition - Python2 - register_columns (ovsdb-idl.at:393): ok     (0m0.088s 0m0.012s)
1968. simple idl, conditional, false condition - Python3 (ovsdb-idl.at:393): ok     (0m0.132s 0m0.008s)
1971. simple idl, conditional, false condition - Python2 - tcp (ovsdb-idl.at:393): ok     (0m0.096s 0m0.004s)
1973. simple idl, conditional, false condition - Python2 - tcp6 (ovsdb-idl.at:393): ok     (0m0.088s 0m0.012s)
1970. simple idl, conditional, false condition - Python3 - register_columns (ovsdb-idl.at:393): ok     (0m0.124s 0m0.016s)
1975. simple idl, conditional, true condition - C (ovsdb-idl.at:409): ok     (0m0.000s 0m0.000s)
1972. simple idl, conditional, false condition - Python3 - tcp (ovsdb-idl.at:393): ok     (0m0.128s 0m0.012s)
1976. simple idl, conditional, true condition - Python2 (ovsdb-idl.at:409): ok     (0m0.096s 0m0.008s)
1974. simple idl, conditional, false condition - Python3 - tcp6 (ovsdb-idl.at:393): ok     (0m0.132s 0m0.008s)
1978. simple idl, conditional, true condition - Python2 - register_columns (ovsdb-idl.at:409): ok     (0m0.096s 0m0.004s)
1980. simple idl, conditional, true condition - Python2 - tcp (ovsdb-idl.at:409): ok     (0m0.100s 0m0.000s)
1977. simple idl, conditional, true condition - Python3 (ovsdb-idl.at:409): ok     (0m0.128s 0m0.012s)
1982. simple idl, conditional, true condition - Python2 - tcp6 (ovsdb-idl.at:409): ok     (0m0.096s 0m0.004s)
1979. simple idl, conditional, true condition - Python3 - register_columns (ovsdb-idl.at:409): ok     (0m0.140s 0m0.000s)
1984. simple idl, conditional, multiple clauses in condition - C (ovsdb-idl.at:425): ok     (0m0.000s 0m0.000s)
1981. simple idl, conditional, true condition - Python3 - tcp (ovsdb-idl.at:409): ok     (0m0.140s 0m0.000s)
1985. simple idl, conditional, multiple clauses in condition - Python2 (ovsdb-idl.at:425): ok     (0m0.088s 0m0.008s)
1983. simple idl, conditional, true condition - Python3 - tcp6 (ovsdb-idl.at:409): ok     (0m0.120s 0m0.012s)
1987. simple idl, conditional, multiple clauses in condition - Python2 - register_columns (ovsdb-idl.at:425): ok     (0m0.088s 0m0.008s)
1986. simple idl, conditional, multiple clauses in condition - Python3 (ovsdb-idl.at:425): ok     (0m0.124s 0m0.008s)
1989. simple idl, conditional, multiple clauses in condition - Python2 - tcp (ovsdb-idl.at:425): ok     (0m0.092s 0m0.004s)
1991. simple idl, conditional, multiple clauses in condition - Python2 - tcp6 (ovsdb-idl.at:425): ok     (0m0.088s 0m0.008s)
1988. simple idl, conditional, multiple clauses in condition - Python3 - register_columns (ovsdb-idl.at:425): ok     (0m0.132s 0m0.000s)
1993. simple idl, conditional, modify as insert due to condition - C (ovsdb-idl.at:447): ok     (0m0.000s 0m0.000s)
1990. simple idl, conditional, multiple clauses in condition - Python3 - tcp (ovsdb-idl.at:425): ok     (0m0.132s 0m0.004s)
1992. simple idl, conditional, multiple clauses in condition - Python3 - tcp6 (ovsdb-idl.at:425): ok     (0m0.120s 0m0.012s)
1994. simple idl, conditional, modify as insert due to condition - Python2 (ovsdb-idl.at:447): ok     (0m0.084s 0m0.012s)
1996. simple idl, conditional, modify as insert due to condition - Python2 - register_columns (ovsdb-idl.at:447): ok     (0m0.084s 0m0.012s)
1998. simple idl, conditional, modify as insert due to condition - Python2 - tcp (ovsdb-idl.at:447): ok     (0m0.084s 0m0.012s)
1995. simple idl, conditional, modify as insert due to condition - Python3 (ovsdb-idl.at:447): ok     (0m0.120s 0m0.012s)
2000. simple idl, conditional, modify as insert due to condition - Python2 - tcp6 (ovsdb-idl.at:447): ok     (0m0.092s 0m0.004s)
1997. simple idl, conditional, modify as insert due to condition - Python3 - register_columns (ovsdb-idl.at:447): ok     (0m0.116s 0m0.016s)
2002. simple idl, conditional, modify as delete due to condition - C (ovsdb-idl.at:463): ok     (0m0.000s 0m0.000s)
1999. simple idl, conditional, modify as insert due to condition - Python3 - tcp (ovsdb-idl.at:447): ok     (0m0.116s 0m0.016s)
2003. simple idl, conditional, modify as delete due to condition - Python2 (ovsdb-idl.at:463): ok     (0m0.096s 0m0.004s)
2001. simple idl, conditional, modify as insert due to condition - Python3 - tcp6 (ovsdb-idl.at:447): ok     (0m0.124s 0m0.012s)
2005. simple idl, conditional, modify as delete due to condition - Python2 - register_columns (ovsdb-idl.at:463): ok     (0m0.096s 0m0.004s)
2007. simple idl, conditional, modify as delete due to condition - Python2 - tcp (ovsdb-idl.at:463): ok     (0m0.088s 0m0.012s)
2004. simple idl, conditional, modify as delete due to condition - Python3 (ovsdb-idl.at:463): ok     (0m0.136s 0m0.000s)
2009. simple idl, conditional, modify as delete due to condition - Python2 - tcp6 (ovsdb-idl.at:463): ok     (0m0.080s 0m0.020s)
2006. simple idl, conditional, modify as delete due to condition - Python3 - register_columns (ovsdb-idl.at:463): ok     (0m0.136s 0m0.000s)
2011. simple idl, conditional, multiple tables - C (ovsdb-idl.at:490): ok     (0m0.000s 0m0.000s)
2008. simple idl, conditional, modify as delete due to condition - Python3 - tcp (ovsdb-idl.at:463): ok     (0m0.124s 0m0.012s)
2012. simple idl, conditional, multiple tables - Python2 (ovsdb-idl.at:490): ok     (0m0.080s 0m0.020s)
2010. simple idl, conditional, modify as delete due to condition - Python3 - tcp6 (ovsdb-idl.at:463): ok     (0m0.136s 0m0.000s)
2014. simple idl, conditional, multiple tables - Python2 - register_columns (ovsdb-idl.at:490): ok     (0m0.096s 0m0.004s)
2013. simple idl, conditional, multiple tables - Python3 (ovsdb-idl.at:490): ok     (0m0.136s 0m0.000s)
2016. simple idl, conditional, multiple tables - Python2 - tcp (ovsdb-idl.at:490): ok     (0m0.092s 0m0.008s)
2018. simple idl, conditional, multiple tables - Python2 - tcp6 (ovsdb-idl.at:490): ok     (0m0.100s 0m0.004s)
2015. simple idl, conditional, multiple tables - Python3 - register_columns (ovsdb-idl.at:490): ok     (0m0.136s 0m0.000s)
2020. self-linking idl, consistent ops - C (ovsdb-idl.at:529): ok     (0m0.000s 0m0.000s)
2017. simple idl, conditional, multiple tables - Python3 - tcp (ovsdb-idl.at:490): ok     (0m0.124s 0m0.012s)
2021. self-linking idl, consistent ops - Python2 (ovsdb-idl.at:529): ok     (0m0.096s 0m0.008s)
2019. simple idl, conditional, multiple tables - Python3 - tcp6 (ovsdb-idl.at:490): ok     (0m0.140s 0m0.000s)
2023. self-linking idl, consistent ops - Python2 - register_columns (ovsdb-idl.at:529): ok     (0m0.092s 0m0.008s)
2025. self-linking idl, consistent ops - Python2 - tcp (ovsdb-idl.at:529): ok     (0m0.084s 0m0.016s)
2022. self-linking idl, consistent ops - Python3 (ovsdb-idl.at:529): ok     (0m0.132s 0m0.008s)
2027. self-linking idl, consistent ops - Python2 - tcp6 (ovsdb-idl.at:529): ok     (0m0.088s 0m0.016s)
2024. self-linking idl, consistent ops - Python3 - register_columns (ovsdb-idl.at:529): ok     (0m0.136s 0m0.004s)
2029. self-linking idl, inconsistent ops - C (ovsdb-idl.at:573): ok     (0m0.000s 0m0.000s)
2026. self-linking idl, consistent ops - Python3 - tcp (ovsdb-idl.at:529): ok     (0m0.128s 0m0.008s)
2030. self-linking idl, inconsistent ops - Python2 (ovsdb-idl.at:573): ok     (0m0.084s 0m0.016s)
2028. self-linking idl, consistent ops - Python3 - tcp6 (ovsdb-idl.at:529): ok     (0m0.132s 0m0.008s)
2032. self-linking idl, inconsistent ops - Python2 - register_columns (ovsdb-idl.at:573): ok     (0m0.076s 0m0.024s)
2034. self-linking idl, inconsistent ops - Python2 - tcp (ovsdb-idl.at:573): ok     (0m0.096s 0m0.004s)
2031. self-linking idl, inconsistent ops - Python3 (ovsdb-idl.at:573): ok     (0m0.132s 0m0.004s)
2036. self-linking idl, inconsistent ops - Python2 - tcp6 (ovsdb-idl.at:573): ok     (0m0.088s 0m0.012s)
2035. self-linking idl, inconsistent ops - Python3 - tcp (ovsdb-idl.at:573): ok     (0m0.124s 0m0.012s)
2033. self-linking idl, inconsistent ops - Python3 - register_columns (ovsdb-idl.at:573): ok     (0m0.128s 0m0.008s)
2038. self-linking idl, sets - C (ovsdb-idl.at:621): ok     (0m0.000s 0m0.000s)
2037. self-linking idl, inconsistent ops - Python3 - tcp6 (ovsdb-idl.at:573): ok     (0m0.132s 0m0.008s)
2039. self-linking idl, sets - Python2 (ovsdb-idl.at:621): ok     (0m0.104s 0m0.004s)
2041. self-linking idl, sets - Python2 - register_columns (ovsdb-idl.at:621): ok     (0m0.104s 0m0.004s)
2040. self-linking idl, sets - Python3 (ovsdb-idl.at:621): ok     (0m0.136s 0m0.008s)
2043. self-linking idl, sets - Python2 - tcp (ovsdb-idl.at:621): ok     (0m0.092s 0m0.016s)
2045. self-linking idl, sets - Python2 - tcp6 (ovsdb-idl.at:621): ok     (0m0.096s 0m0.008s)
2042. self-linking idl, sets - Python3 - register_columns (ovsdb-idl.at:621): ok     (0m0.144s 0m0.000s)
2047. external-linking idl, consistent ops - C (ovsdb-idl.at:671): ok     (0m0.000s 0m0.000s)
2044. self-linking idl, sets - Python3 - tcp (ovsdb-idl.at:621): ok     (0m0.132s 0m0.012s)
2048. external-linking idl, consistent ops - Python2 (ovsdb-idl.at:671): ok     (0m0.088s 0m0.012s)
2046. self-linking idl, sets - Python3 - tcp6 (ovsdb-idl.at:621): ok     (0m0.140s 0m0.004s)
2050. external-linking idl, consistent ops - Python2 - register_columns (ovsdb-idl.at:671): ok     (0m0.092s 0m0.008s)
2049. external-linking idl, consistent ops - Python3 (ovsdb-idl.at:671): ok     (0m0.140s 0m0.000s)
2052. external-linking idl, consistent ops - Python2 - tcp (ovsdb-idl.at:671): ok     (0m0.100s 0m0.004s)
2054. external-linking idl, consistent ops - Python2 - tcp6 (ovsdb-idl.at:671): ok     (0m0.104s 0m0.000s)
2051. external-linking idl, consistent ops - Python3 - register_columns (ovsdb-idl.at:671): ok     (0m0.128s 0m0.016s)
2053. external-linking idl, consistent ops - Python3 - tcp (ovsdb-idl.at:671): ok     (0m0.132s 0m0.012s)
2056. external-linking idl, insert ops - Python2 (ovsdb-idl.at:689): ok     (0m0.072s 0m0.032s)
2062. idl handling of missing tables and columns - C (ovsdb-idl.at:725): ok     (0m0.004s 0m0.000s)
2055. external-linking idl, consistent ops - Python3 - tcp6 (ovsdb-idl.at:671): ok     (0m0.136s 0m0.008s)
2058. getattr idl, insert ops - Python2 (ovsdb-idl.at:699): ok     (0m0.100s 0m0.004s)
2057. external-linking idl, insert ops - Python3 (ovsdb-idl.at:689): ok     (0m0.136s 0m0.008s)
2060. row-from-json idl, whats this - Python2 (ovsdb-idl.at:708): ok     (0m0.092s 0m0.016s)
2059. getattr idl, insert ops - Python3 (ovsdb-idl.at:699): ok     (0m0.136s 0m0.008s)
2061. row-from-json idl, whats this - Python3 (ovsdb-idl.at:708): ok     (0m0.124s 0m0.020s)
2065. track, simple idl, initially populated - C (ovsdb-idl.at:964): ok     (0m0.000s 0m0.000s)
2067. map, simple2 idl-partial-update-map-column, initially populated - C (ovsdb-idl.at:1093): ok     (0m0.000s 0m0.000s)
2063. simple idl, initially populated - Python fetch (ovsdb-idl.at:820): ok     (0m0.088s 0m0.008s)
2070. set, simple3 idl-partial-update-set-column, initially populated - C (ovsdb-idl.at:1142): ok     (0m0.000s 0m0.000s)
2068. partial-map idl - Python2 (ovsdb-idl.at:1111): ok     (0m0.096s 0m0.004s)
2074. ovsdb lock -- lock (ovsdb-lock.at:21): ok     (0m0.000s 0m0.000s)
2066. track, simple idl, initially empty, various ops - C (ovsdb-idl.at:996): ok     (0m0.000s 0m0.000s)
2071. partial-set idl - Python2 (ovsdb-idl.at:1162): ok     (0m0.092s 0m0.012s)
2069. partial-map idl - Python3 (ovsdb-idl.at:1111): ok     (0m0.132s 0m0.008s)
2075. ovsdb lock -- unlock (ovsdb-lock.at:37): ok     (0m0.000s 0m0.000s)
2076. ovsdb lock -- steal (ovsdb-lock.at:57): ok     (0m0.000s 0m0.000s)
2072. partial-set idl - Python3 (ovsdb-idl.at:1162): ok     (0m0.144s 0m0.000s)
2064. simple idl disable monitor-cond - Python (ovsdb-idl.at:868): ok     (0m0.104s 0m0.012s)
2079. add-br a, add-br a (ovs-vsctl.at:199): ok     (0m0.000s 0m0.000s)
2078. add-br a (ovs-vsctl.at:189): ok     (0m0.000s 0m0.000s)
2081. add-br a, add-br b, del-br a (ovs-vsctl.at:226): ok     (0m0.000s 0m0.000s)
2082. add-br a, del-br a, add-br a (ovs-vsctl.at:237): ok     (0m0.000s 0m0.000s)
2084. add-br a, add-port a a1, add-port a a1 (ovs-vsctl.at:271): ok     (0m0.000s 0m0.000s)
2080. add-br a, add-br b (ovs-vsctl.at:209): ok     (0m0.000s 0m0.000s)
2083. add-br a, add-port a a1, add-port a a2 (ovs-vsctl.at:257): ok     (0m0.000s 0m0.000s)
2073. simple idl verify notify - Python (ovsdb-idl.at:1206): ok     (0m0.112s 0m0.008s)
2085. add-br a b, add-port a a1, add-port b b1, del-br a (ovs-vsctl.at:283): ok     (0m0.000s 0m0.000s)
2090. controllers (ovs-vsctl.at:427): ok     (0m0.000s 0m0.000s)
2088. add-br a, add-bond a bond0 a1 a2 a3, del-port bond0 (ovs-vsctl.at:354): ok     (0m0.000s 0m0.000s)
2086. add-br a, add-bond a bond0 a1 a2 a3 (ovs-vsctl.at:305): ok     (0m0.000s 0m0.000s)
2077. ovs-vsctl connection retry (ovs-vsctl.at:145): ok     (0m0.000s 0m0.000s)
2092. list bridges -- real and fake (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.000s 0m0.000s)
2087. add-br a b, add-port a a1, add-port b b1, del-port a a1 (ovs-vsctl.at:323): ok     (0m0.000s 0m0.000s)
2089. external IDs (ovs-vsctl.at:371): ok     (0m0.000s 0m0.000s)
2094. simple fake bridge + del-br real bridge (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.000s 0m0.000s)
2091. simple fake bridge (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.000s 0m0.000s)
2093. simple fake bridge + del-br fake bridge (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.000s 0m0.000s)
2097. list bridges -- real and fake (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.000s 0m0.000s)
2099. simple fake bridge + del-br real bridge (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.000s 0m0.000s)
2095. simple fake bridge + external IDs (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.000s 0m0.000s)
2098. simple fake bridge + del-br fake bridge (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.000s 0m0.000s)
2096. simple fake bridge (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.000s 0m0.000s)
2103. fake bridge on bond + del-br real bridge (ovs-vsctl.at:594): ok     (0m0.000s 0m0.000s)
2104. managers (ovs-vsctl.at:606): ok     (0m0.000s 0m0.000s)
2102. fake bridge on bond + del-br fake bridge (ovs-vsctl.at:582): ok     (0m0.000s 0m0.000s)
2100. simple fake bridge + external IDs (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.000s 0m0.000s)
2101. fake bridge on bond (ovs-vsctl.at:570): ok     (0m0.000s 0m0.000s)
2108. database commands -- wait-until immediately true (ovs-vsctl.at:1005): ok     (0m0.000s 0m0.000s)
2105. database commands -- positive checks (ovs-vsctl.at:632): ok     (0m0.000s 0m0.000s)
2111. unreferenced record warnings (ovs-vsctl.at:1107): ok     (0m0.000s 0m0.000s)
2110. --id option on create, get commands (ovs-vsctl.at:1058): ok     (0m0.000s 0m0.000s)
2112. created row UUID is wrong in same execution (ovs-vsctl.at:1141): ok     (0m0.000s 0m0.000s)
2117. bootstrap ca cert (ovs-vsctl.at:1311): skipped (ovs-vsctl.at:1313)
2106. database commands -- negative checks (ovs-vsctl.at:745): ok     (0m0.000s 0m0.000s)
2118. peer ca cert (ovs-vsctl.at:1338): skipped (ovs-vsctl.at:1340)
2116. naming in db commands (ovs-vsctl.at:1293): ok     (0m0.000s 0m0.000s)
2109. database commands -- wait-until must wait (ovs-vsctl.at:1024): ok     (0m0.000s 0m0.000s)
2113. --all option on destroy command (ovs-vsctl.at:1178): ok     (0m0.000s 0m0.000s)
2114. add-port -- reserved names 1 (ovs-vsctl.at:1227): ok     (0m0.000s 0m0.000s)
2115. add-port -- reserved names 2 (ovs-vsctl.at:1257): ok     (0m0.000s 0m0.000s)
2125. Re-create port with different types (interface-reconfigure.at:1040): ok     (0m0.000s 0m0.000s)
2122. VLAN, non-bond (interface-reconfigure.at:774): ok     (0m0.076s 0m0.004s)
2121. non-VLAN, non-bond (interface-reconfigure.at:697): ok     (0m0.072s 0m0.012s)
2126. STP example from IEEE 802.1D-1998 (stp.at:3): ok     (0m0.000s 0m0.000s)
2127. STP example from IEEE 802.1D-2004 figures 17.4 and 17.5 (stp.at:27): ok     (0m0.004s 0m0.000s)
2120. ovs-xapi-sync (ovs-xapi-sync.at:3): ok     (0m0.000s 0m0.000s)
2128. STP example from IEEE 802.1D-2004 figure 17.6 (stp.at:70): ok     (0m0.000s 0m0.000s)
2123. Bond, non-VLAN (interface-reconfigure.at:849): ok     (0m0.064s 0m0.016s)
2107. database commands -- conditions (ovs-vsctl.at:870): ok     (0m0.000s 0m0.000s)
2129. STP example from IEEE 802.1D-2004 figure 17.7 (stp.at:96): ok     (0m0.000s 0m0.000s)
2124. VLAN on bond (interface-reconfigure.at:939): ok     (0m0.072s 0m0.008s)
2130. STP.io.1.1: Link Failure (stp.at:125): ok     (0m0.000s 0m0.000s)
2131. STP.io.1.2: Repeated Network (stp.at:164): ok     (0m0.000s 0m0.000s)
2132. STP.io.1.4: Network Initialization (stp.at:188): ok     (0m0.000s 0m0.000s)
2133. STP.io.1.5: Topology Change (stp.at:214): ok     (0m0.004s 0m0.000s)
2134. STP.op.1.1 and STP.op.1.2 (stp.at:267): ok     (0m0.000s 0m0.000s)
2135. STP.op.1.4: All Ports Initialized to Designated Ports (stp.at:281): ok     (0m0.000s 0m0.000s)
2136. STP.op.3.1: Root Bridge Selection: Root ID Values (stp.at:302): ok     (0m0.000s 0m0.000s)
2137. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:322): ok     (0m0.000s 0m0.000s)
2138. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:345): ok     (0m0.000s 0m0.000s)
2140. RSTP Single bridge (rstp.at:3): ok     (0m0.000s 0m0.000s)
2141. RSTP Link failure (rstp.at:13): ok     (0m0.000s 0m0.000s)
2142. RSTP Double link Failure (rstp.at:32): ok     (0m0.008s 0m0.000s)
2143. RSTP example from IEEE 802.1D-2004 figures 17.4 and 17.5 (rstp.at:74): ok     (0m0.008s 0m0.000s)
2144. RSTP example from IEEE 802.1D-2004 figure 17.6 (rstp.at:111): ok     (0m0.000s 0m0.000s)
2145. RSTP example from IEEE 802.1D-2004 figure 17.7 (rstp.at:131): ok     (0m0.004s 0m0.000s)
2147. vlog - Python2 (vlog.at:105): ok     (0m0.036s 0m0.004s)
2149. vlog - vlog/reopen - C (vlog.at:115): ok     (0m0.000s 0m0.000s)
2139. STP - dummy interface (stp.at:380): ok     (0m0.000s 0m0.000s)
2148. vlog - Python3 (vlog.at:106): ok     (0m0.076s 0m0.000s)
2152. vlog - vlog/reopen without log file - C (vlog.at:181): ok     (0m0.000s 0m0.000s)
2150. vlog - vlog/reopen - Python2 (vlog.at:178): ok     (0m0.064s 0m0.008s)
2146. RSTP - dummy interface (rstp.at:156): ok     (0m0.000s 0m0.000s)
2155. vlog - vlog/reopen can't reopen log file - C (vlog.at:210): ok     (0m0.000s 0m0.000s)
2151. vlog - vlog/reopen - Python3 (vlog.at:179): ok     (0m0.096s 0m0.008s)
2153. vlog - vlog/reopen without log file - Python2 (vlog.at:205): ok     (0m0.068s 0m0.004s)
2154. vlog - vlog/reopen without log file - Python3 (vlog.at:206): ok     (0m0.092s 0m0.012s)
2158. vlog - vlog/close - C (vlog.at:278): ok     (0m0.000s 0m0.000s)
2156. vlog - vlog/reopen can't reopen log file - Python2 (vlog.at:275): ok     (0m0.068s 0m0.004s)
2161. vlog - vlog/set and vlog/list - C (vlog.at:357): ok     (0m0.000s 0m0.000s)
2157. vlog - vlog/reopen can't reopen log file - Python3 (vlog.at:276): ok     (0m0.096s 0m0.008s)
2159. vlog - vlog/close - Python2 (vlog.at:354): ok     (0m0.064s 0m0.012s)
2160. vlog - vlog/close - Python3 (vlog.at:355): ok     (0m0.104s 0m0.004s)
2164. vlog - RFC5424 facility (vlog.at:458): ok     (0m0.000s 0m0.000s)
2162. vlog - vlog/set and vlog/list - Python2 (vlog.at:455): ok     (0m0.064s 0m0.012s)
2167. add-ps a (vtep-ctl.at:135): ok     (0m0.000s 0m0.000s)
2163. vlog - vlog/set and vlog/list - Python3 (vlog.at:456): ok     (0m0.096s 0m0.012s)
2168. add-ps a, add-ps a (vtep-ctl.at:143): ok     (0m0.000s 0m0.000s)
2165. vlog - RFC5424 facility - Python2 (vlog.at:514): ok     (0m0.136s 0m0.012s)
2169. add-ps a, add-ps b (vtep-ctl.at:153): ok     (0m0.000s 0m0.000s)
2170. add-ps a, add-ps b, del-ps a (vtep-ctl.at:162): ok     (0m0.000s 0m0.000s)
2171. add-ps a, del-ps a, add-ps a (vtep-ctl.at:171): ok     (0m0.000s 0m0.000s)
2172. add-ps a, add-port a a1, add-port a a2 (vtep-ctl.at:185): ok     (0m0.000s 0m0.000s)
2173. add-ps a, add-port a a1, add-port a a1 (vtep-ctl.at:198): ok     (0m0.000s 0m0.000s)
2166. vlog - RFC5424 facility - Python3 (vlog.at:515): ok     (0m0.192s 0m0.016s)
2174. add-ps a b, add-port a a1, add-port b b1, del-ps a (vtep-ctl.at:210): ok     (0m0.000s 0m0.000s)
2175. add-ps a b, add-port a a1, add-port b b1, del-port a a1 (vtep-ctl.at:231): ok     (0m0.000s 0m0.000s)
2178. add-ls a, add-ls a (vtep-ctl.at:279): ok     (0m0.000s 0m0.000s)
2179. add-ls a, add-ls b (vtep-ctl.at:289): ok     (0m0.000s 0m0.000s)
2177. add-ls a (vtep-ctl.at:271): ok     (0m0.000s 0m0.000s)
2176. add-ps a b, add-port a p1, add-port b p1, del-port a p1 (vtep-ctl.at:248): ok     (0m0.000s 0m0.000s)
2180. add-ls a, add-ls b, del-ls a (vtep-ctl.at:298): ok     (0m0.000s 0m0.000s)
2181. add-ls a, del-ls a, add-ls a (vtep-ctl.at:307): ok     (0m0.000s 0m0.000s)
2182. add-ls a, get-replication-mode a (vtep-ctl.at:321): ok     (0m0.000s 0m0.000s)
2183. add-ls a, set-replication-mode a source_node (vtep-ctl.at:332): ok     (0m0.000s 0m0.000s)
2184. add-ls a, set-replication-mode a service_node (vtep-ctl.at:343): ok     (0m0.000s 0m0.000s)
2185. bind-ls ps1 pp1 300 ls1 (vtep-ctl.at:357): ok     (0m0.000s 0m0.000s)
2186. bind-ls ps1 pp1 300 ls1, bind-ls ps1 pp1 400 ls2 (vtep-ctl.at:375): ok     (0m0.000s 0m0.000s)
2188. add-ucast-local ls1 (vtep-ctl.at:428): ok     (0m0.000s 0m0.000s)
2191. add-ucast-remote ls1 (vtep-ctl.at:506): ok     (0m0.000s 0m0.000s)
2189. add-ucast-local ls1, overwrite (vtep-ctl.at:455): ok     (0m0.000s 0m0.000s)
2187. bind-ls ps1 pp1 300, bind-ls ps2 pp2 300 ls2 (vtep-ctl.at:397): ok     (0m0.000s 0m0.000s)
2190. add-ucast-local ls1, del-ucast-local ls1 (vtep-ctl.at:475): ok     (0m0.000s 0m0.000s)
2192. add-ucast-remote ls1, overwrite (vtep-ctl.at:533): ok     (0m0.000s 0m0.000s)
2193. add-ucast-remote ls1, del-ucast-remote ls1 (vtep-ctl.at:553): ok     (0m0.000s 0m0.000s)
2194. add-ucast-local ls1, add-ucast-remote ls1 (vtep-ctl.at:584): ok     (0m0.000s 0m0.000s)
2195. add-mcast-local ls1 (vtep-ctl.at:615): ok     (0m0.000s 0m0.000s)
2196. add-mcast-local ls1, del-mcast-local ls1 (vtep-ctl.at:644): ok     (0m0.000s 0m0.000s)
2197. add-mcast-remote ls1 (vtep-ctl.at:681): ok     (0m0.000s 0m0.000s)
2198. add-mcast-remote ls1, del-mcast-remote ls1 (vtep-ctl.at:710): ok     (0m0.000s 0m0.000s)
2199. add-mcast-local ls1, add-mcast-remote ls1 (vtep-ctl.at:747): ok     (0m0.000s 0m0.000s)
2204. auto-attach - packets (auto-attach.at:3): ok     (0m0.000s 0m0.000s)
2205. ovn -- lexer (ovn.at:36): ok     (0m0.000s 0m0.000s)
2202. managers (vtep-ctl.at:899): ok     (0m0.000s 0m0.000s)
2201. add local and remote macs, clear-remote-macs (vtep-ctl.at:839): ok     (0m0.000s 0m0.000s)
2200. add local and remote macs, clear-local-macs (vtep-ctl.at:782): ok     (0m0.000s 0m0.000s)
2206. ovn -- registers (ovn.at:140): ok     (0m0.000s 0m0.000s)
2207. ovn -- conntrack fields (ovn.at:163): ok     (0m0.000s 0m0.000s)
2203. show command (vtep-ctl.at:922): ok     (0m0.000s 0m0.000s)
2208. ovn -- expression parser (ovn.at:177): ok     (0m0.000s 0m0.000s)
2209. ovn -- expression annotation (ovn.at:354): ok     (0m0.000s 0m0.000s)
2210. ovn -- 1-term expression conversion (ovn.at:391): ok     (0m0.000s 0m0.000s)
2211. ovn -- 2-term expression conversion (ovn.at:397): ok     (0m0.008s 0m0.000s)
2217. ovn -- 4-term string expression normalization (ovn.at:433): ok     (0m0.036s 0m0.000s)
2214. ovn -- 4-term string expression simplification (ovn.at:415): ok     (0m0.088s 0m0.000s)
2215. ovn -- 3-term mixed expression simplification (ovn.at:421): ok     (0m0.328s 0m0.000s)
2218. ovn -- 4-term mixed expression normalization (ovn.at:439): ok     (0m0.376s 0m0.000s)
2212. ovn -- 3-term expression conversion (ovn.at:403): ok     (0m0.636s 0m0.000s)
2221. ovn -- 5-term mixed expression normalization (ovn.at:457): ok     (0m0.296s 0m0.000s)
2223. ovn -- 4-term string expressions to flows (ovn.at:469): ok     (0m0.264s 0m0.004s)
2224. ovn -- 4-term mixed expressions to flows (ovn.at:475): ok     (0m0.304s 0m0.000s)
2226. ovn -- converting expressions to flows -- string fields (ovn.at:487): ok     (0m0.000s 0m0.000s)
2219. ovn -- 5-term numeric expression normalization (ovn.at:445): ok     (0m1.036s 0m0.000s)
2227. ovn -- converting expressions to flows -- address sets (ovn.at:523): ok     (0m0.000s 0m0.000s)
2228. ovn -- action parsing (ovn.at:579): ok     (0m0.000s 0m0.000s)
2220. ovn -- 5-term string expression normalization (ovn.at:451): ok     (0m1.448s 0m0.000s)
2222. ovn -- 4-term numeric expressions to flows (ovn.at:463): ok     (0m1.260s 0m0.000s)
2230. ovn -- trace 1 LS, 3 LSPs (ovn.at:1232): ok     (0m0.000s 0m0.000s)
2233. ovn -- 3 HVs, 1 VIFs/HV, 1 software GW, 1 LS (ovn.at:1795): ok     (0m0.032s 0m0.004s)
2231. ovn -- 2 HVs, 4 lports/HV, localnet ports (ovn.at:1450): ok     (0m0.092s 0m0.020s)
2232. ovn -- vtep: 3 HVs, 1 VIFs/HV, 1 GW, 1 LS (ovn.at:1620): ok     (0m0.112s 0m0.008s)
2213. ovn -- 3-term numeric expression simplification (ovn.at:409): ok     (0m3.492s 0m0.000s)
2216. ovn -- 4-term numeric expression normalization (ovn.at:427): ok     (0m3.708s 0m0.000s)
2236. ovn -- 2 HVs, 2 LS, 1 lport/LS, 2 peer LRs (ovn.at:2735): ok     (0m0.012s 0m0.000s)
2225. ovn -- 3-term numeric expressions to flows (ovn.at:481): ok     (0m3.136s 0m0.000s)
2235. ovn -- portsecurity : 3 HVs, 1 LS, 3 lports/HV (ovn.at:2357): ok     (0m0.092s 0m0.008s)
2237. ovn -- 1 HV, 1 LS, 2 lport/LS, 1 LR (ovn.at:2858): ok     (0m0.008s 0m0.004s)
2238. ovn -- 1 HV, 2 LSs, 1 lport/LS, 1 LR (ovn.at:2987): ok     (0m0.008s 0m0.004s)
2240. ovn -- send gratuitous arp on localnet (ovn.at:3257): ok     (0m0.032s 0m0.004s)
2239. ovn -- 2 HVs, 3 LS, 1 lport/LS, 2 peer LRs, static routes (ovn.at:3103): ok     (0m0.016s 0m0.004s)
2241. ovn -- 2 HVs, 3 LRs connected via LS, static routes (ovn.at:3299): ok     (0m0.020s 0m0.000s)
2242. ovn -- dhcpv4 : 1 HV, 2 LS, 2 LSPs/LS (ovn.at:3477): ok     (0m0.048s 0m0.016s)
2243. ovn -- dhcpv6 : 1 HV, 2 LS, 2 LSPs/LS (ovn.at:3747): ok     (0m0.052s 0m0.012s)
2246. ovn -- port state up and down (ovn.at:4299): ok     (0m0.000s 0m0.000s)
2247. ovn -- datapath rules added/removed (ovn.at:4325): ok     (0m0.000s 0m0.000s)
2245. ovn -- icmp_reply: 1 HVs, 2 LSs, 1 lport/LS, 1 LR (ovn.at:4150): ok     (0m0.032s 0m0.020s)
2244. ovn -- 2 HVs, 2 LRs connected via LS, gateway router (ovn.at:3973): ok     (0m0.024s 0m0.000s)
2229. ovn -- 3 HVs, 1 LS, 3 lports/HV (ovn.at:965): ok     (0m0.104s 0m0.008s)
2250. ovn -- ipam (ovn.at:4490): ok     (0m0.000s 0m0.000s)
2249. ovn -- address sets modification/removal smoke test (ovn.at:4462): ok     (0m0.000s 0m0.000s)
2248. ovn -- nd_na  (ovn.at:4389): ok     (0m0.020s 0m0.004s)
2255. ovn -- delete mac bindings (ovn.at:5036): ok     (0m0.000s 0m0.000s)
2251. ovn -- ipam connectivity (ovn.at:4647): ok     (0m0.016s 0m0.004s)
2256. ovn -- conntrack zone allocation (ovn.at:5069): ok     (0m0.000s 0m0.000s)
2253. ovn -- send arp for nexthop (ovn.at:4876): ok     (0m0.008s 0m0.004s)
2257. ovn -- tag allocation (ovn.at:5124): ok     (0m0.000s 0m0.000s)
2254. ovn -- send gratuitous arp for nat ips in localnet (ovn.at:4987): ok     (0m0.012s 0m0.000s)
2261. ovn-nbctl - lport addresses (ovn-nbctl.at:147): ok     (0m0.000s 0m0.000s)
2259. ovn-nbctl - basic switch commands (ovn-nbctl.at:37): ok     (0m0.004s 0m0.000s)
2260. ovn-nbctl - basic logical switch port commands (ovn-nbctl.at:95): ok     (0m0.000s 0m0.000s)
2262. ovn-nbctl - port security (ovn-nbctl.at:170): ok     (0m0.000s 0m0.000s)
2252. ovn -- ovs-vswitchd restart (ovn.at:4781): ok     (0m0.000s 0m0.000s)
2263. ovn-nbctl - ACLs (ovn-nbctl.at:193): ok     (0m0.000s 0m0.000s)
2266. ovn-nbctl - logical router port enable and disable (ovn-nbctl.at:368): ok     (0m0.000s 0m0.000s)
2264. ovn-nbctl - basic logical router commands (ovn-nbctl.at:242): ok     (0m0.000s 0m0.000s)
2265. ovn-nbctl - basic logical router port commands (ovn-nbctl.at:300): ok     (0m0.000s 0m0.000s)
2267. ovn-nbctl - routes (ovn-nbctl.at:393): ok     (0m0.000s 0m0.000s)
2268. ovn-sbctl - chassis commands (ovn-sbctl.at:49): ok     (0m0.000s 0m0.000s)
2269. ovn-sbctl (ovn-sbctl.at:83): ok     (0m0.000s 0m0.000s)
2258. ovn -- lsp deletion and broadcast-flow deletion on localnet (ovn.at:5240): ok     (0m0.000s 0m0.000s)
2271. ovn-controller - Chassis external_ids (ovn-controller.at:157): ok     (0m0.000s 0m0.000s)
2272. ovn-controller - change Encap properties (ovn-controller.at:222): ok     (0m0.000s 0m0.000s)
2270. ovn-controller - ovn-bridge-mappings (ovn-controller.at:3): ok     (0m0.000s 0m0.004s)
2275. ovn-controller-vtep - binding 2 (ovn-controller-vtep.at:251): ok     (0m0.068s 0m0.016s)
2273. ovn-controller-vtep - chassis (ovn-controller-vtep.at:118): ok     (0m0.064s 0m0.020s)
2276. ovn-controller-vtep - vtep-lswitch (ovn-controller-vtep.at:290): ok     (0m0.072s 0m0.008s)
2274. ovn-controller-vtep - binding 1 (ovn-controller-vtep.at:186): ok     (0m0.060s 0m0.024s)
2278. ovn-controller-vtep - vtep-macs 2 (ovn-controller-vtep.at:413): ok     (0m0.068s 0m0.012s)
2277. ovn-controller-vtep - vtep-macs 1 (ovn-controller-vtep.at:342): ok     (0m0.060s 0m0.016s)
2234. ovn -- 3 HVs, 3 LS, 3 lports/LS, 1 LR (ovn.at:1944): ok     (0m0.228s 0m0.040s)
testsuite:18: WARNING: caught signal INT, bailing out
